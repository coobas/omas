
complete schema
===============

actuator
^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>actuator.channels</p></td><td><p><map object at 0x1119e3940></p></td><td><p>STR_1D</p></td><td><p>ID of the multiple channels of the actuator: Beam boxes for NBI, EC or IC launcher, ... {static}</p></td></tr>
   <tr><td><p>actuator.code</p></td><td><p><map object at 0x1119e38d0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>actuator.code.name</p></td><td><p><map object at 0x1119e3908></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>actuator.code.output_flag</p></td><td><p><map object at 0x1119e38d0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>actuator.code.parameters</p></td><td><p><map object at 0x1119e3908></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>actuator.code.version</p></td><td><p><map object at 0x1119e38d0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>actuator.generic_dynamic</p></td><td><p><map object at 0x1119e3908></p></td><td><p>FLT_2D</p></td><td><p>Generic 2D dynamic slot for storing an actuator control parameter (e.g. the angle of an ECRH mirror) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>actuator.ids_properties</p></td><td><p><map object at 0x1119e38d0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>actuator.ids_properties.comment</p></td><td><p><map object at 0x1119e3908></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>actuator.ids_properties.homogeneous_time</p></td><td><p><map object at 0x1119e38d0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>actuator.name</p></td><td><p><map object at 0x1119e3908></p></td><td><p>STR_0D</p></td><td><p>Name of the actuator (IC, EC, NBI, LH) {static} [-]</p></td></tr>
   <tr><td><p>actuator.power</p></td><td><p><map object at 0x1119e38d0></p></td><td><p>FLT_2D</p></td><td><p>Power delivered at the output of the actuator, in the vessel (NB this is before the coupling / beam blocking / shine through / orbit losses calculations) {dynamic} [W]</p></td></tr>
   <tr><td><p>actuator.time</p></td><td><p><map object at 0x1119e3908></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

antennas
^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>antennas.code</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>antennas.code.name</p></td><td><p><map object at 0x111427080></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>antennas.code.output_flag</p></td><td><p><map object at 0x111427320></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>antennas.code.parameters</p></td><td><p><map object at 0x111427080></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>antennas.code.version</p></td><td><p><map object at 0x111427320></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>antennas.ec[:]</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Electron Cyclotron antennas</p></td></tr>
   <tr><td><p>antennas.ec[:].beam</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Beam characteristics</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Phase ellipse characteristics</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase.angle</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Rotation angle for the phase ellipse</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase.angle.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Rotation angle for the phase ellipse {dynamic} [rad]</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase.angle.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase.curvature</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Inverse curvature radii for the phase ellipse, positive/negative for divergent/convergent beams</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase.curvature.data</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_2D</p></td><td><p>Inverse curvature radii for the phase ellipse, positive/negative for divergent/convergent beams {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.phase.curvature.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Spot ellipse characteristics</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot.angle</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Rotation angle for the spot ellipse</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot.angle.data</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_1D</p></td><td><p>Rotation angle for the spot ellipse {dynamic} [rad]</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot.angle.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot.size</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Size of the spot ellipse</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot.size.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_2D</p></td><td><p>Size of the spot ellipse {dynamic} [m]</p></td></tr>
   <tr><td><p>antennas.ec[:].beam.spot.size.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].frequency</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Frequency {static} [Hz]</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_angle_pol</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Poloidal launching angle between the horizontal plane and the poloidal component of the nominal beam centerline. tan(angle_pol)=-k_z/k_R;</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_angle_pol.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Poloidal launching angle between the horizontal plane and the poloidal component of the nominal beam centerline. tan(angle_pol)=-k_z/k_R; {dynamic} [rad]</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_angle_pol.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_angle_tor</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Toroidal launching angle between the poloidal plane and the nominal beam centerline. sin(angle_tor)=k_phi</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_angle_tor.data</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_1D</p></td><td><p>Toroidal launching angle between the poloidal plane and the nominal beam centerline. sin(angle_tor)=k_phi {dynamic} [rad]</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_angle_tor.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Launching position of the beam</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.phi</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Toroidal angle</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.phi.data</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.phi.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.r</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Major radius</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.r.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.r.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.z</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Height</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.z.data</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>antennas.ec[:].launching_position.z.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].mode</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Incoming wave mode (+ or -1 for O/X mode)</p></td></tr>
   <tr><td><p>antennas.ec[:].mode.data</p></td><td><p><map object at 0x111427080></p></td><td><p>INT_1D</p></td><td><p>Incoming wave mode (+ or -1 for O/X mode) {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].mode.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ec[:].name</p></td><td><p><map object at 0x111427080></p></td><td><p>STR_0D</p></td><td><p>Name of the antenna {static}</p></td></tr>
   <tr><td><p>antennas.ec[:].power</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Power</p></td></tr>
   <tr><td><p>antennas.ec[:].power.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Power {dynamic} [W]</p></td></tr>
   <tr><td><p>antennas.ec[:].power.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:]</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Ion Cyclotron antennas</p></td></tr>
   <tr><td><p>antennas.ic[:].frequency</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Frequency</p></td></tr>
   <tr><td><p>antennas.ic[:].frequency.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Frequency {dynamic} [Hz]</p></td></tr>
   <tr><td><p>antennas.ic[:].frequency.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].name</p></td><td><p><map object at 0x111427080></p></td><td><p>STR_0D</p></td><td><p>Name of the antenna {static}</p></td></tr>
   <tr><td><p>antennas.ic[:].power</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Power</p></td></tr>
   <tr><td><p>antennas.ic[:].power.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Power {dynamic} [W]</p></td></tr>
   <tr><td><p>antennas.ic[:].power.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:]</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Properties of IC antenna straps</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].current</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Root mean square current flowing along the strap</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].current.data</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Root mean square current flowing along the strap {dynamic} [A]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].current.time</p></td><td><p><map object at 0x111427320></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].distance_to_conductor</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Distance to conducting wall or other conductor behind the antenna strap {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Cross-sectional shape of the strap</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.geometry_type</p></td><td><p><map object at 0x111427080></p></td><td><p>INT_0D</p></td><td><p>Type used to describe the element shape (1:'outline', 2:'rectangle', 3:'oblique') {static}</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Trapezoidal description of the element</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique.alpha</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Inclination of first angle TBD {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique.beta</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Inclination of second angle TBD {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique.length</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Length {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique.r</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique.thickness</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Thickness {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.oblique.z</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.outline</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Irregular outline of the element</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.outline.r</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.outline.z</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.rectangle</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Rectangular description of the element</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.rectangle.height</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Vertical full height {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.rectangle.r</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.rectangle.width</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Horizontal full width {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].geometry.rectangle.z</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].phase</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Phase of the strap current</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].phase.data</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_1D</p></td><td><p>Phase of the strap current {dynamic} [rad]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].phase.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].position</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>R, Z, Phi position of the strap centre</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].position.phi</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].position.r</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].position.z</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].strap[:].width_tor</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Width of strap in the toroidal direction {static} [m]</p></td></tr>
   <tr><td><p>antennas.ic[:].surface_current[:]</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Description of the IC surface current on the antenna straps and on passive components, for every time slice {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].surface_current[:].m_pol</p></td><td><p><map object at 0x111427320></p></td><td><p>INT_1D</p></td><td><p>Poloidal mode numbers, used to describe the spectrum of the antenna current. The poloidal angle is defined from the reference point; the angle at a point (R,Z) is given by atan((Z-Zref)/(R-Rref)), where Rref=reference_point/r and Zref=reference_point/z {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].surface_current[:].n_pol</p></td><td><p><map object at 0x111427080></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>antennas.ic[:].surface_current[:].n_tor</p></td><td><p><map object at 0x111427320></p></td><td><p>INT_1D</p></td><td><p>Toroidal mode numbers, used to describe the spectrum of the antenna current {dynamic}</p></td></tr>
   <tr><td><p>antennas.ic[:].surface_current[:].spectrum</p></td><td><p><map object at 0x111427080></p></td><td><p>INT_1D</p></td><td><p>Spectrum of the total surface current on the antenna strap and passive components expressed in poloidal and toroidal modes {dynamic} [A]</p></td></tr>
   <tr><td><p>antennas.ic[:].surface_current[:].time</p></td><td><p><map object at 0x111427320></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>antennas.ids_properties</p></td><td><p><map object at 0x111427080></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>antennas.ids_properties.comment</p></td><td><p><map object at 0x111427320></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>antennas.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111427080></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>antennas.reference_point</p></td><td><p><map object at 0x111427320></p></td><td><p></p></td><td><p>Reference point used to define the poloidal angle, e.g. the geometrical centre of the vacuum vessel. Used to define the poloidal mode numbers under ic/surface_current</p></td></tr>
   <tr><td><p>antennas.reference_point.r</p></td><td><p><map object at 0x111427080></p></td><td><p>FLT_0D</p></td><td><p>Major radius {constant} [m]</p></td></tr>
   <tr><td><p>antennas.reference_point.z</p></td><td><p><map object at 0x111427320></p></td><td><p>FLT_0D</p></td><td><p>Height {constant} [m]</p></td></tr>
   <tr><td><p>antennas.time</p></td><td><p><map object at 0x111427080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

atomic data
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>atomic_data.a</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {static} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>atomic_data.code</p></td><td><p><map object at 0x10f3d0518></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>atomic_data.code.name</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>atomic_data.code.output_flag</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>atomic_data.code.parameters</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>atomic_data.code.version</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p></p></td><td><p>Array of possible coordinate systems for process tables</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p></p></td><td><p>Set of coordinates for that coordinate system. A coordinate an be either a range of real values or a set of discrete values (if interpolation_type=0)</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].extrapolation_type</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>Extrapolation strategy when leaving the domain. The first value of the vector describes the behaviour at lower bound, the second describes the at upper bound. Possible values: 0=none, report error; 1=boundary value; 2=linear extrapolation {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].interpolation_type</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Interpolation strategy in this coordinate direction. Integer flag: 0=discrete (no interpolation); 1=linear; ... {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].label</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Description of coordinate (e.g. "Electron temperature") {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].spacing</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Flag for specific coordinate spacing (for optimization purposes). Integer flag: 0=undefined; 1=uniform; ... {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].transformation</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_0D</p></td><td><p>Coordinate transformation applied to coordinate values stored in coord. Integer flag: 0=none; 1=log10; 2=ln {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].units</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>Units of coordinate (e.g. eV) {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].value_labels</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_1D</p></td><td><p>String description of discrete coordinate values (if interpolation_type=0). E.g., for spectroscopic lines, the spectroscopic description of the transition. {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].values</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_1D</p></td><td><p>Coordinate values {static} [units given by coordinate_system(:)/coordinate(:)/units]</p></td></tr>
   <tr><td><p>atomic_data.ids_properties</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>atomic_data.ids_properties.comment</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>atomic_data.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>atomic_data.process[:]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p></p></td><td><p>Description and data for a set of physical processes.</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p></p></td><td><p>Process tables for a set of charge states. Only one table is used for that process, defined by process(:)/table_dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].label</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_0d</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_0D</p></td><td><p>0D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_1d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_1D</p></td><td><p>1D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_1d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_2d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_2D</p></td><td><p>2D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_2d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_2d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_3D</p></td><td><p>3D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_4D</p></td><td><p>4D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[4]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_5D</p></td><td><p>5D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[4]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[5]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_6D</p></td><td><p>6D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[4]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[5]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[6]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].z_max</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {static} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].z_min</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {static} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>atomic_data.process[:].coordinate_index</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_0D</p></td><td><p>Index in tables_coord, specifying what coordinate systems to use for this process (valid for all tables) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].label</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>String identifying the process (e.g. EI, RC, ...) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].result_label</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Description of the process result (rate, cross section, sputtering yield, ...) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].result_transformation</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Transformation of the process result. Integer flag: 0=no transformation; 1=10^; 2=exp() {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].result_units</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Units of the process result {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].table_dimension</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Table dimensionality of the process (1 to 6), valid for all charge states. Indicates which of the tables is filled (below the charge_state node) {static}</p></td></tr>
   <tr><td><p>atomic_data.time</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>atomic_data.z_n</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {static} [Elementary Charge Unit]</p></td></tr>
   </table>
   </table><p></p>

charge exchange
^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>charge_exchange.channel[:]</p></td><td><p><map object at 0x10f3d0748></p></td><td><p></p></td><td><p>Set of channels (lines-of-sight)</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].a</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>FLT_1D</p></td><td><p>Mass of atom of the emmitting impurity. Varies according to channels since they are spanning different lines of sight {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].channel_names</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].identifier</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>STR_0D</p></td><td><p>ID of the channel {static}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].label</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>STR_1D</p></td><td><p>String identifying the emmitting impurity (e.g. H+, D+, T+, He+2, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].name</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>STR_0D</p></td><td><p>Name of the channel {static}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position</p></td><td><p><map object at 0x10f3d0748></p></td><td><p></p></td><td><p>Position of the measurements</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.phi</p></td><td><p><map object at 0x10f3d0908></p></td><td><p></p></td><td><p>Toroidal angle</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.phi.data</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.phi.time</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.r</p></td><td><p><map object at 0x10f3d0748></p></td><td><p></p></td><td><p>Major radius</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.r.data</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.r.time</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.z</p></td><td><p><map object at 0x10f3d0908></p></td><td><p></p></td><td><p>Height</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.z.data</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].position.z.time</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].temperature</p></td><td><p><map object at 0x10f3d0748></p></td><td><p></p></td><td><p>Ion temperature (of the emmitting impurity)</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].temperature.data</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>FLT_1D</p></td><td><p>Ion temperature (of the emmitting impurity) {dynamic} [eV]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].temperature.time</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].velocity_pol</p></td><td><p><map object at 0x10f3d0908></p></td><td><p></p></td><td><p>Poloidal velocity (of the emmitting impurity)</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].velocity_pol.data</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity (of the emmitting impurity) {dynamic} [eV]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].velocity_pol.time</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].velocity_tor</p></td><td><p><map object at 0x10f3d0748></p></td><td><p></p></td><td><p>Toroidal velocity (of the emmitting impurity)</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].velocity_tor.data</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity (of the emmitting impurity) {dynamic} [eV]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].velocity_tor.time</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].z_ion</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>FLT_1D</p></td><td><p>Ion charge of the emmitting impurity. Varies according to channels since they are spanning different lines of sight {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>charge_exchange.channel[:].z_n</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>FLT_1D</p></td><td><p>Nuclear charge of the emmitting impurity. Varies according to channels since they are spanning different lines of sight {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>charge_exchange.code</p></td><td><p><map object at 0x10f3d0908></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>charge_exchange.code.name</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>charge_exchange.code.output_flag</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>charge_exchange.code.parameters</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>charge_exchange.code.version</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>charge_exchange.ids_properties</p></td><td><p><map object at 0x10f3d0748></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>charge_exchange.ids_properties.comment</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>charge_exchange.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10f3d0748></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>charge_exchange.time</p></td><td><p><map object at 0x10f3d0908></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

controllers
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>controllers.code</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>controllers.code.name</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>controllers.code.output_flag</p></td><td><p><map object at 0x111f107f0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>controllers.code.parameters</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>controllers.code.version</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>controllers.ids_properties</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>controllers.ids_properties.comment</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>controllers.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111f10978></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:]</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>A linear controller, this is rather conventional</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].controller_class</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_0D</p></td><td><p>One of a known class of controllers {constant}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].description</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_0D</p></td><td><p>Description of this controller {constant}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].input_names</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_1D</p></td><td><p>Names of the input signals, following the SDN convention {constant}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].inputs</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Input signals; the timebase is common to inputs and outputs for any particular controller</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].inputs.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_2D</p></td><td><p>Input signals; the timebase is common to inputs and outputs for any particular controller {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].inputs.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].name</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_0D</p></td><td><p>Name of this controller {constant}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].output_names</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_1D</p></td><td><p>Names of the output signals following the SDN convention {constant}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].outputs</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>Output signals; the timebase is common to inputs and outputs for any particular controller</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].outputs.data</p></td><td><p><map object at 0x111f107f0></p></td><td><p>FLT_2D</p></td><td><p>Output signals; the timebase is common to inputs and outputs for any particular controller {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].outputs.time</p></td><td><p><map object at 0x111f10978></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Filtered PID controller</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.d</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>Derivative term</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.d.data</p></td><td><p><map object at 0x111f107f0></p></td><td><p>FLT_3D</p></td><td><p>Derivative term {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.d.time</p></td><td><p><map object at 0x111f10978></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.i</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Integral term</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.i.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_3D</p></td><td><p>Integral term {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.i.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.input_names</p></td><td><p><map object at 0x111f10978></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.output_names</p></td><td><p><map object at 0x111f107f0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.p</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>Proportional term</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.p.data</p></td><td><p><map object at 0x111f107f0></p></td><td><p>FLT_3D</p></td><td><p>Proportional term {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.p.time</p></td><td><p><map object at 0x111f10978></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.tau</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Filter time-constant for the D-term</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.tau.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_1D</p></td><td><p>Filter time-constant for the D-term {dynamic} [s]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].pid.tau.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>Statespace controller in discrete or continuous time</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.a</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>A matrix</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.a.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_3D</p></td><td><p>A matrix {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.a.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.b</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>B matrix</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.b.data</p></td><td><p><map object at 0x111f107f0></p></td><td><p>FLT_3D</p></td><td><p>B matrix {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.b.time</p></td><td><p><map object at 0x111f10978></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.c</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>C matrix</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.c.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_3D</p></td><td><p>C matrix {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.c.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.d</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>D matrix, normally proper and D=0</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.d.data</p></td><td><p><map object at 0x111f107f0></p></td><td><p>FLT_3D</p></td><td><p>D matrix, normally proper and D=0 {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.d.time</p></td><td><p><map object at 0x111f10978></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.deltat</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Discrete time sampling interval ; if less than 1e-10, the controller is considered to be expressed in continuous time</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.deltat.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_1D</p></td><td><p>Discrete time sampling interval ; if less than 1e-10, the controller is considered to be expressed in continuous time {dynamic} [s]</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.deltat.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.input_names</p></td><td><p><map object at 0x111f10978></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>controllers.linear_controller[:].statespace.state_names</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_1D</p></td><td><p>Names of the states {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:]</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>A non-linear controller, this is less conventional and will have to be developed</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].controller_class</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_0D</p></td><td><p>One of a known class of controllers {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].description</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_0D</p></td><td><p>Description of this controller {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].function</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_0D</p></td><td><p>Method to be defined {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].input_names</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_1D</p></td><td><p>Names of the input signals, following the SDN convention {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].inputs</p></td><td><p><map object at 0x111f107f0></p></td><td><p></p></td><td><p>Input signals; the timebase is common to inputs and outputs for any particular controller</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].inputs.data</p></td><td><p><map object at 0x111f10978></p></td><td><p>FLT_2D</p></td><td><p>Input signals; the timebase is common to inputs and outputs for any particular controller {constant} [mixed]</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].inputs.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].name</p></td><td><p><map object at 0x111f10978></p></td><td><p>STR_0D</p></td><td><p>Name of this controller {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].output_names</p></td><td><p><map object at 0x111f107f0></p></td><td><p>STR_1D</p></td><td><p>Output signal names following the SDN convention {constant}</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].outputs</p></td><td><p><map object at 0x111f10978></p></td><td><p></p></td><td><p>Output signals; the timebase is common to inputs and outputs for any particular controller</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].outputs.data</p></td><td><p><map object at 0x111f107f0></p></td><td><p>FLT_2D</p></td><td><p>Output signals; the timebase is common to inputs and outputs for any particular controller {dynamic} [mixed]</p></td></tr>
   <tr><td><p>controllers.nonlinear_controller[:].outputs.time</p></td><td><p><map object at 0x111f10978></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>controllers.time</p></td><td><p><map object at 0x111f107f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

core instant changes
^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>core_instant_changes.change[:]</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Set of instant change terms</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].identifier</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Instant change term identifier</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].identifier.description</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].identifier.index</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].identifier.name</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:]</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>instant_change profiles for various time slices {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Change of electrons-related quantities</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.density</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.density_fast</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure_fast_parallel</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.pressure_fast_perpendicular</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.temperature</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.diamagnetic</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.parallel</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.poloidal</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.radial</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].electrons.velocity.toroidal</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].grid</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].grid.area</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].grid.psi</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].grid.volume</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:]</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>changes related to the different ions species</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].density_fast</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:]</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].a</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].label</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].neutral_index</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure_fast_parallel</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].density_fast</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].ionisation_potential</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_0D</p></td><td><p>Cumulative and average ionisation potential to reach a given bundle. Defined as sum (x_z* (sum of Epot from z'=0 to z-1)), where Epot is the ionisation potential of ion Xz+, and x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure_fast_parallel</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].temperature</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.diamagnetic</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.parallel</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.poloidal</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.radial</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].velocity.toroidal</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_average</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_0D</p></td><td><p>Average Z of the charge state bundle (equal to z_min if no bundle), = sum (Z*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].state[:].z_square_average</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Average Z square of the charge state bundle (equal to z_min if no bundle), = sum (Z^2*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].temperature</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Velocity (average over charge states when multiple charge states are considered) [m.s^-1]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.diamagnetic</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.parallel</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.poloidal</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.radial</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].velocity.toroidal</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>change of total toroidal momentum {dynamic} [kg.m^2.s^-1]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:]</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>changes related to the different neutral species</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].density</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].density_fast</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:]</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].a</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].ion_index</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].label</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure_fast_parallel</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:]</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].density</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].density_fast</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].label</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure_fast_parallel</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].temperature</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.diamagnetic</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.parallel</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.poloidal</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.radial</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].velocity.toroidal</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].temperature</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Velocity (average over charge states when multiple charge states are considered) [m.s^-1]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.diamagnetic</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.parallel</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.poloidal</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.radial</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].neutral[:].velocity.toroidal</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].t_i_average</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>change of average ion temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_instant_changes.change[:].profiles_1d[:].time</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>core_instant_changes.code</p></td><td><p><map object at 0x10f3baa20></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>core_instant_changes.code.name</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.code.output_flag</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.code.parameters</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.code.version</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.ids_properties</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>core_instant_changes.ids_properties.comment</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>core_instant_changes.time</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>core_instant_changes.vacuum_toroidal_field</p></td><td><p><map object at 0x10f3bad68></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in Rho_Tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>core_instant_changes.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x10f3baa20></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>core_instant_changes.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x10f3bad68></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

core profiles
^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>core_profiles.code</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>core_profiles.code.name</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>core_profiles.code.output_flag</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.code.parameters</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>core_profiles.code.version</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>core_profiles.global_quantities</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Various global quantities derived from the profiles</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.beta_pol</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal beta. Defined as betap = 4 int(p dV) / [R_0 * mu_0 * Ip^2] {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.beta_tor</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Toroidal beta, defined as the volume-averaged total perpendicular pressure divided by (B0^2/(2*mu0)), i.e. beta_toroidal = 2 mu0 int(p dV) / V / B0^2 {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.beta_tor_norm</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal beta, defined as 100 * beta_tor * a[m] * B0 [T] / ip [MA] {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.current_bootstrap</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Bootstrap current {dynamic} [A]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.current_non_inductive</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Total non-inductive parallel current {dynamic} [A]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.energy_diamagnetic</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Plasma energy content = 3/2 * integral over the plasma volume of the total perpendicular pressure {dynamic} [A]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.ip</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Total plasma current {dynamic} [A]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.li</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Internal inductance. The li_3 definition is used, i.e. li_3 = 2/R0/mu0^2/Ip^2 * int(Bp^2 dV). {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.global_quantities.v_loop</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>LCFS loop voltage {dynamic} [V]</p></td></tr>
   <tr><td><p>core_profiles.ids_properties</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>core_profiles.ids_properties.comment</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>core_profiles.ids_properties.homogeneous_time</p></td><td><p><map object at 0x1122f3128></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:]</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Core plasma radial profiles for various time slices {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].conductivity_parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Parallel conductivity {dynamic} [ohm^-1.m^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].e_field</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Electric field, averaged on the magnetic surface. E.g for the parellel component, average(E.B) / B0, using core_profiles/vacuum_toroidal_field/b0 [V.m^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].e_field.diamagnetic</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].e_field.parallel</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].e_field.poloidal</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].e_field.radial</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].e_field.toroidal</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.density</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.density_fast</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.pressure</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.pressure_fast_parallel</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.pressure_fast_perpendicular</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.temperature</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.velocity</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.velocity.diamagnetic</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.velocity.parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.velocity.poloidal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.velocity.radial</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].electrons.velocity.toroidal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].grid</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].grid.area</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].grid.psi</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].grid.volume</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:]</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].density</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].density_fast</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].element[:]</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].element[:].a</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].label</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x1122f3128></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].neutral_index</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].pressure</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].pressure_fast_parallel</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].density</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].density_fast</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].ionisation_potential</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Cumulative and average ionisation potential to reach a given bundle. Defined as sum (x_z* (sum of Epot from z'=0 to z-1)), where Epot is the ionisation potential of ion Xz+, and x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].pressure</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].pressure_fast_parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].temperature</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].velocity</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].velocity.diamagnetic</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].velocity.parallel</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].velocity.poloidal</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].velocity.radial</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].velocity.toroidal</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].z_average</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Average Z of the charge state bundle (equal to z_min if no bundle), = sum (Z*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].state[:].z_square_average</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_0D</p></td><td><p>Average Z square of the charge state bundle (equal to z_min if no bundle), = sum (Z^2*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].temperature</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].velocity</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Velocity (average over charge states when multiple charge states are considered) [m.s^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].velocity.diamagnetic</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].velocity.parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].velocity.poloidal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].velocity.radial</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].velocity.toroidal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].j_bootstrap</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Bootstrap current density = average(J_Bootstrap.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].j_non_inductive</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Non-inductive (includes bootstrap) parallel current density = average(jni.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].j_ohmic</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Ohmic parallel current density = average(J_Ohmic.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].j_tor</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal current density = average(J_Tor/R) / average(1/R) {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].j_total</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Total parallel current density = average(jtot.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].magnetic_shear</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Total plasma toroidal momentum, summed over ion species and electrons {dynamic} [kg.m.s^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].n_i_total_over_n_e</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:]</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Quantities related to the different neutral species</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].density</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].density_fast</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].element[:]</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].element[:].a</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].ion_index</p></td><td><p><map object at 0x1122f3128></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].label</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x1122f3128></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].pressure</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].pressure_fast_parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:]</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].density</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].density_fast</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].label</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].pressure</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].pressure_fast_parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].temperature</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].velocity</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].velocity.diamagnetic</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].velocity.parallel</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].velocity.poloidal</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].velocity.radial</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].velocity.toroidal</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x1122f3128></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].temperature</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].velocity</p></td><td><p><map object at 0x1122f3128></p></td><td><p></p></td><td><p>Velocity (average over charge states when multiple charge states are considered) [m.s^-1]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].velocity.diamagnetic</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].velocity.parallel</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].velocity.poloidal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].velocity.radial</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].neutral[:].velocity.toroidal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].pressure_ion_total</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Total (sum over ion species) thermal ion pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].pressure_parallel</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Total parallel pressure (electrons+ions, thermal+non-thermal) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].pressure_perpendicular</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Total perpendicular pressure (electrons+ions, thermal+non-thermal) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].pressure_thermal</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Thermal pressure (electrons+ions) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].q</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Safety factor {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].t_i_average</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Ion temperature (averaged on charge states and ion species) {dynamic} [eV]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].time</p></td><td><p><map object at 0x1122f3128></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>core_profiles.profiles_1d[:].zeff</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_1D</p></td><td><p>Effective charge {dynamic} [-]</p></td></tr>
   <tr><td><p>core_profiles.time</p></td><td><p><map object at 0x1122f3128></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>core_profiles.vacuum_toroidal_field</p></td><td><p><map object at 0x1122f38d0></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>core_profiles.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x1122f3128></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>core_profiles.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x1122f38d0></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

core sources
^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>core_sources.code</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>core_sources.code.name</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>core_sources.code.output_flag</p></td><td><p><map object at 0x1120423c8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>core_sources.code.parameters</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>core_sources.code.version</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>core_sources.ids_properties</p></td><td><p><map object at 0x112042630></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>core_sources.ids_properties.comment</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>core_sources.ids_properties.homogeneous_time</p></td><td><p><map object at 0x112042630></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:]</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Set of source terms</p></td></tr>
   <tr><td><p>core_sources.source[:].identifier</p></td><td><p><map object at 0x112042630></p></td><td><p></p></td><td><p>Source term identifier</p></td></tr>
   <tr><td><p>core_sources.source[:].identifier.description</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].identifier.index</p></td><td><p><map object at 0x112042630></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].identifier.name</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:]</p></td><td><p><map object at 0x112042630></p></td><td><p></p></td><td><p>Source profiles for various time slices {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].conductivity_parallel</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Parallel conductivity due to this source {dynamic} [ohm^-1.m^-1]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].electrons</p></td><td><p><map object at 0x112042630></p></td><td><p></p></td><td><p>Sources for electrons</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].electrons.energy</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Source term for the electron energy equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].electrons.particles</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Source term for electron density equation {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].grid</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].grid.area</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].grid.psi</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].grid.volume</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:]</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Source terms related to the different ions species</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].element[:]</p></td><td><p><map object at 0x112042630></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].element[:].a</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].energy</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Source term for the ion energy transport equation. {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].label</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x112042630></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].neutral_index</p></td><td><p><map object at 0x1120423c8></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].particles</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Source term for ion density equation {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Source terms related to the different charge states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].energy</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Source terms for the charge state energy transport equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].particles</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Source term for the charge state density transport equation {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].j_parallel</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Parallel current density source, average(J.B) / B0, where B0 = core_sources/vacuum_toroidal_field/b0 {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Source term for total toroidal momentum equation {dynamic} [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:]</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Source terms related to the different neutral species</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].element[:]</p></td><td><p><map object at 0x112042630></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].element[:].a</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].energy</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Source term for the ion energy transport equation. {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].ion_index</p></td><td><p><map object at 0x1120423c8></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].label</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>String identifying the neutral species (e.g. H, D, T, He, C, ...) {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x1120423c8></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].particles</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Source term for ion density equation {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:]</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Source terms related to the different charge states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].energy</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Source terms for the charge state energy transport equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].label</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>String identifying state {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x1120423c8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x112042630></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].particles</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Source term for the charge state density transport equation {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x1120423c8></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].time</p></td><td><p><map object at 0x112042630></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>core_sources.source[:].profiles_1d[:].total_ion_energy</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_1D</p></td><td><p>Source term for the total (summed over ion species) energy equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>core_sources.time</p></td><td><p><map object at 0x112042630></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>core_sources.vacuum_toroidal_field</p></td><td><p><map object at 0x1120423c8></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in Rho_Tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>core_sources.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x112042630></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>core_sources.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x1120423c8></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

core transport
^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>core_transport.code</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>core_transport.code.name</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>core_transport.code.output_flag</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>core_transport.code.parameters</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>core_transport.code.version</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>core_transport.ids_properties</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>core_transport.ids_properties.comment</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>core_transport.ids_properties.homogeneous_time</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:]</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport is described by a combination of various transport models</p></td></tr>
   <tr><td><p>core_transport.model[:].flux_multiplier</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Multiplier applied to the particule flux when adding its contribution in the expression of the heat flux : can be 0, 3/2 or 5/2 {constant} [-]</p></td></tr>
   <tr><td><p>core_transport.model[:].identifier</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport model identifier</p></td></tr>
   <tr><td><p>core_transport.model[:].identifier.description</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].identifier.index</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].identifier.name</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:]</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport coefficient profiles for various time slices {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].conductivity_parallel</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Parallel conductivity {dynamic} [ohm^-1.m^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport quantities related to the electrons</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.energy</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport quantities for the electron energy equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.energy.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.energy.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [W.m^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.energy.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.particles</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport quantities for the electron density equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.particles.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.particles.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [m^-2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].electrons.particles.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_d</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Grid for effective diffusivities and parallel conductivity</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_d.area</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_d.psi</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_d.rho_tor</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_d.rho_tor_norm</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_d.volume</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Grid for fluxes</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_flux.area</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_flux.psi</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_flux.rho_tor</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_flux.rho_tor_norm</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_flux.volume</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_v</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Grid for effective convections</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_v.area</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_v.psi</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_v.rho_tor</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_v.rho_tor_norm</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].grid_v.volume</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:]</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport coefficients related to the various ion species</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].element[:]</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].element[:].a</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].energy</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport coefficients related to the ion energy equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].energy.d</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].energy.flux</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [W.m^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].energy.v</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].label</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].neutral_index</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].particles</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport related to the ion density equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].particles.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].particles.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [m^-2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].particles.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport coefficients related to the different states of the species</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].energy</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport quantities related to the energy equation of the charge state considered</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].energy.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].energy.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [W.m^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].energy.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].particles</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport quantities related to density equation of the charge state considered (thermal+non-thermal)</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].particles.d</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].particles.flux</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [m^-2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].particles.v</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport coefficients for total toroidal momentum equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].momentum_tor.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].momentum_tor.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].momentum_tor.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:]</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport coefficients related to the various neutral species</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].element[:]</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].element[:].a</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].energy</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport coefficients related to the neutral energy equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].energy.d</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].energy.flux</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [W.m^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].energy.v</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].ion_index</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].label</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].particles</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport related to the neutral density equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].particles.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].particles.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [m^-2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].particles.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:]</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport coefficients related to the different states of the species</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].energy</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Transport quantities related to the energy equation of the charge state considered</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].energy.d</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].energy.flux</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [W.m^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].energy.v</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].label</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>String identifying state {constant}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].particles</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport quantities related to density equation of the charge state considered (thermal+non-thermal)</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].particles.d</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].particles.flux</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [m^-2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].particles.v</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].rho_tor_norm</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].time</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].total_ion_energy</p></td><td><p><map object at 0x11144b0b8></p></td><td><p></p></td><td><p>Transport coefficients for the total (summed over ion species) energy equation</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].total_ion_energy.d</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective diffusivity {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].total_ion_energy.flux</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Flux {dynamic} [W.m^-2]</p></td></tr>
   <tr><td><p>core_transport.model[:].profiles_1d[:].total_ion_energy.v</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_1D</p></td><td><p>Effective convection {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>core_transport.time</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>core_transport.vacuum_toroidal_field</p></td><td><p><map object at 0x11144b8d0></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in Rho_Tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>core_transport.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x11144b0b8></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>core_transport.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x11144b8d0></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

dataset description
^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>dataset_description.data_entry</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p></p></td><td><p>Definition of this data entry</p></td></tr>
   <tr><td><p>dataset_description.data_entry.machine</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>STR_0D</p></td><td><p>Name of the experimental device to which this data is related {constant}</p></td></tr>
   <tr><td><p>dataset_description.data_entry.pulse</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>INT_0D</p></td><td><p>Pulse number {constant}</p></td></tr>
   <tr><td><p>dataset_description.data_entry.pulse_type</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>STR_0D</p></td><td><p>Type of the data entry, e.g. "pulse", "simulation", ... {constant}</p></td></tr>
   <tr><td><p>dataset_description.data_entry.run</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>INT_0D</p></td><td><p>Run number {constant}</p></td></tr>
   <tr><td><p>dataset_description.data_entry.user</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>STR_0D</p></td><td><p>Username {constant}</p></td></tr>
   <tr><td><p>dataset_description.dd_version</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Version of the physics data dictionary of this dataset {constant}</p></td></tr>
   <tr><td><p>dataset_description.ids_properties</p></td><td><p><map object at 0x111b2cc88></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>dataset_description.ids_properties.comment</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>dataset_description.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>dataset_description.imas_version</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Version of the IMAS infrastructure used to produce this data entry. Refers to the global IMAS repository which links to versions of every infrastructure tools {constant}</p></td></tr>
   <tr><td><p>dataset_description.parent_entry</p></td><td><p><map object at 0x111b2cc88></p></td><td><p></p></td><td><p>Definition of the parent data entry, if the present data entry has been generated by applying a given workflow to a unique parent entry</p></td></tr>
   <tr><td><p>dataset_description.parent_entry.machine</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Name of the experimental device to which this data is related {constant}</p></td></tr>
   <tr><td><p>dataset_description.parent_entry.pulse</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>INT_0D</p></td><td><p>Pulse number {constant}</p></td></tr>
   <tr><td><p>dataset_description.parent_entry.pulse_type</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Type of the data entry, e.g. "pulse", "simulation", ... {constant}</p></td></tr>
   <tr><td><p>dataset_description.parent_entry.run</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>INT_0D</p></td><td><p>Run number {constant}</p></td></tr>
   <tr><td><p>dataset_description.parent_entry.user</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Username {constant}</p></td></tr>
   <tr><td><p>dataset_description.simulation</p></td><td><p><map object at 0x111b2cc88></p></td><td><p></p></td><td><p>Description of the general simulation characteristics, if this data entry has been produced by a simulation. Several nodes describe typical time-dependent simulation with a time evolution as the main loop</p></td></tr>
   <tr><td><p>dataset_description.simulation.comment_after</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Comment made at the end of a simulation {constant}</p></td></tr>
   <tr><td><p>dataset_description.simulation.comment_before</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>STR_0D</p></td><td><p>Comment made when launching a simulation {constant}</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_begin</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>FLT_0D</p></td><td><p>Start time {constant} [s]</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_begun</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>STR_0D</p></td><td><p>Actual wall-clock time simulation started {constant} [UTC]</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_current</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>FLT_0D</p></td><td><p>Current time of the simulation {constant} [s]</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_end</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>FLT_0D</p></td><td><p>Stop time {constant} [s]</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_ended</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>STR_0D</p></td><td><p>Actual wall-clock time simulation finished {constant} [UTC]</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_restart</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>FLT_0D</p></td><td><p>Time of the last restart done during the simulation {constant} [s]</p></td></tr>
   <tr><td><p>dataset_description.simulation.time_step</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>FLT_0D</p></td><td><p>Time interval between main steps, e.g. storage step (if relevant and constant) {constant} [s]</p></td></tr>
   <tr><td><p>dataset_description.simulation.workflow</p></td><td><p><map object at 0x111b2cc88></p></td><td><p>STR_0D</p></td><td><p>Description of the workflow which has been used to produce this data entry (e.g. copy of the Kepler MOML if using Kepler) {constant}</p></td></tr>
   <tr><td><p>dataset_description.time</p></td><td><p><map object at 0x111b2c9b0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

distribution sources
^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>distribution_sources.code</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>distribution_sources.code.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>distribution_sources.code.output_flag</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.code.parameters</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>distribution_sources.code.version</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>distribution_sources.ids_properties</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>distribution_sources.ids_properties.comment</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>distribution_sources.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>distribution_sources.magnetic_axis</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Magnetic axis position (used to define a poloidal angle for the 2D profiles)</p></td></tr>
   <tr><td><p>distribution_sources.magnetic_axis.r</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>distribution_sources.magnetic_axis.z</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>distribution_sources.source[:]</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Set of source/sink terms. A source/sink term corresponds to the particle source due to an NBI injection unit, a nuclear reaction or any combination of them (described in "identifier")</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Source terms in phase space (real space, velocity space, spin state), represented using the ggd, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].discrete</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_1D</p></td><td><p>List of indices of grid spaces (refers to ../grid/space) for which the source is discretely distributed. For example consider a source of 3.5 MeV alpha particles provided on a grid with two coordinates (spaces); rho_tor and energy. To specify that the source is given at energies exactly equal to 3.5 MeV, let discret have length 1 and set discrete(1)=2 since energy is dimension number 2. The source is then proportional to delta( 1 - energy / 3.5MeV ), where delta is the direct delta distribution. Discrete dimensions can only be used when the grid is rectangular. {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.identifier</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.identifier.description</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.identifier.index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.identifier.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].particles[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Source density of particles in phase space, for various grid subsets [(m.s^-1)^-3.m^-3.s^-1]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].particles[:].coefficients</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].particles[:].grid_index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].particles[:].values</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].ggd[:].time</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].global_quantities[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Global quantities for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].global_quantities[:].particles</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Particle source rate {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].global_quantities[:].power</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Total power of the source {dynamic} [W]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].global_quantities[:].time</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].global_quantities[:].torque_tor</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Total toroidal torque of the source {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].gyro_type</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Defines how to interpret the spatial coordinates: 1 = given at the actual particle birth point; 2 =given at the gyro centre of the birth point {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Source given as a group of markers (test particles) born per second, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].coordinate_identifier[:]</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Set of coordinate identifiers, coordinates on which the markers are represented [W.m^-3]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].coordinate_identifier[:].description</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].coordinate_identifier[:].index</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].coordinate_identifier[:].name</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].positions</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_2D</p></td><td><p>Position of the markers in the set of coordinates. The first dimension corresponds to the number of markers, the second dimension to the set of coordinates {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].time</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].markers[:].weights</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Weight of the markers, i.e. number of real particles represented by each marker. The dimension of the vector correspond to the number of markers {dynamic} [-]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Set of processes (NBI units, fusion reactions, ...) that provide the source.</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].nbi_beamlets_group</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Index of the NBI beamlets group considered. Refers to the "unit/beamlets_group" array of the NBI IDS. 0 means sum over all beamlets groups. {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].nbi_energy</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>For NBI source, energy of the accelerated species considered. index = 0 for a sum over all energies; index = 1 for full energiy; index = 2 for half energy; index = 3 for third energy</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].nbi_energy.description</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].nbi_energy.index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].nbi_energy.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].nbi_unit</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Index of the NBI unit considered. Refers to the "unit" array of the NBI IDS. 0 means sum over all NBI units. {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].reactant_energy</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>For nuclear reaction source, energy of the reactants. index = 0 for a sum over all energies; index = 1 for thermal-thermal; index = 2 for beam-beam; index = 3 for beam-thermal</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].reactant_energy.description</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].reactant_energy.index</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].reactant_energy.name</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].type</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Process type. index=1 for NBI; index=2 for nuclear reaction (reaction unspecified); index=3 for nuclear reaction: T(d,n)4He [D+T->He4+n]; index=4 for nuclear reaction: He3(d,p)4He [He3+D->He4+p]; index=5 for nuclear reaction: D(d,p)T [D+D->T+p]; index=6 for nuclear reaction: D(d,n)3He [D+D->He3+n]; index=7 for runaway processes</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].type.description</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].type.index</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].process[:].type.name</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:]</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Source radial profiles (flux surface averaged quantities) for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].energy</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Source term for the energy transport equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].grid</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].grid.area</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].grid.psi</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].grid.volume</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_1D</p></td><td><p>Source term for the toroidal momentum equation {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].particles</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Source term for the density transport equation {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].profiles_1d[:].time</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Species injected or consumed by this source/sink</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Description of the ion or neutral species, used if type/index = 2 or 3</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.element[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.element[:].a</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.element[:].multiplicity</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.element[:].z_n</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.label</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state.electron_configuration</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state.label</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>String identifying ion state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state.vibrational_level</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state.vibrational_mode</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state.z_max</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.state.z_min</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.ion.z_ion</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Description of the neutral species, used if type/index = 4 or 5</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.element[:]</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.element[:].a</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.element[:].multiplicity</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.element[:].z_n</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.label</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>State of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.electron_configuration</p></td><td><p><map object at 0x111d35c88></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.label</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>String identifying neutral state {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.neutral_type</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.neutral_type.description</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.neutral_type.index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.neutral_type.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.vibrational_level</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.neutral.state.vibrational_mode</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.type</p></td><td><p><map object at 0x111d35c88></p></td><td><p></p></td><td><p>Species type. index=1 for electron; index=2 for ion species in a single/average state (refer to ion structure); index=3 for ion species in a particular state (refer to ion/state structure); index=4 for neutral species in a single/average state (refer to neutral structure); index=5 for neutral species in a particular state (refer to neutral/state structure); index=6 for neutron; index=7 for photon</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.type.description</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.type.index</p></td><td><p><map object at 0x111d35c88></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distribution_sources.source[:].species.type.name</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distribution_sources.time</p></td><td><p><map object at 0x111d35c88></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>distribution_sources.vacuum_toroidal_field</p></td><td><p><map object at 0x111d35ac8></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition)</p></td></tr>
   <tr><td><p>distribution_sources.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x111d35c88></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>distribution_sources.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x111d35ac8></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

distributions
^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>distributions.code</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>distributions.code.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>distributions.code.output_flag</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>distributions.code.parameters</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>distributions.code.version</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Set of distribution functions. Every distribution function has to be associated with only one particle species, specified in distri_vec/species/, but there could be multiple distribution function for each species. In this case, the fast particle populations should be superposed</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Description of how the fast and the thermal particle populations are separated</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter.energy</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Energy at which the fast and thermal particle populations were separated, as a function of radius {constant} [eV]</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter.energy.TBD</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter.method</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Method used to separate the fast and thermal particle population (indices TBD)</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter.method.description</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter.method.index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].fast_filter.method.name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Distribution represented using the ggd, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].expansion[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Distribution function expanded into a vector of successive approximations. The first element in the vector (expansion(1)) is the zeroth order distribution function, while the K:th element in the vector (expansion(K)) is the K:th correction, such that the total distribution function is a sum over all elements in the expansion vector. [(m.s^-1)^-3.m^-3.s^-1]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].expansion[:].grid_subset[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Values of the distribution function expansion, for various grid subsets [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].expansion[:].grid_subset[:].coefficients</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].expansion[:].grid_subset[:].grid_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].expansion[:].grid_subset[:].grid_subset_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].expansion[:].grid_subset[:].values</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.identifier</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.identifier.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.identifier.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.identifier.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].temperature</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Reference temperature profile used to define the local thermal energy and the thermal velocity (for normalisation of the grid coordinates) {dynamic} [eV]</p></td></tr>
   <tr><td><p>distributions.distribution[:].ggd[:].time</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Global quantities (integrated over plasma volume for moments of the distribution, collisional exchange and source terms), for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.electrons</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Collisional power to the fast particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Collisional power to the thermal particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Collisional toroidal torque to the fast particle population {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Collisional toroidal torque to the thermal particle population {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Collisional power to the fast particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Collisional power to the thermal particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Collisional power to the fast particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Collisional power to the thermal particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Collisional toroidal torque to the fast particle population {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Collisional toroidal torque to the thermal particle population {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Collisional toroidal torque to the fast particle population {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Collisional toroidal torque to the thermal particle population {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].current_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Toroidal current driven by the distribution {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].energy</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Total energy in the distribution {dynamic} [J]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].energy_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Total energy of the fast particles in the distribution {dynamic} [J]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].energy_fast_parallel</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Parallel energy of the fast particles in the distribution {dynamic} [J]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].particles_fast_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Number of fast particles in the distribution, i.e. the volume integral of the density (note: this is the number of real particles and not markers) {dynamic} [-]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].particles_n</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Number of particles in the distribution, i.e. the volume integral of the density (note: this is the number of real particles and not markers) {dynamic} [-]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Set of volume integrated sources and sinks of particles, momentum and energy included in the Fokker-Planck modelling, related to the various waves or particle source processes affecting the distribution</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Identifier of the wave or particle source process, defined respectively in distribution/wave or distribution/process</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier.process_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/process {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier.type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Type of the source term. Index = 1 for a wave, index = 2 for a particle source process</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier.type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier.type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier.type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].identifier.wave_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/wave {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].particles</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Particle source rate {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].power</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Total power of the source {dynamic} [W]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].source[:].torque_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Total toroidal torque of the source {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].time</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distributions.distribution[:].global_quantities[:].torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].grid.rho_tor_norm</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.distribution[:].gyro_type</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Defines how to interpret the spatial coordinates: 1 = given at the actual particle birth point; 2 =given at the gyro centre of the birth point {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].is_delta_f</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>If is_delta_f=1, then the distribution represents the deviation from a Maxwellian; is_delta_f=0, then the distribution represents all particles, i.e. the full-f solution {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Distribution represented by a set of markers (test particles) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].coordinate_identifier[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of coordinate identifiers, coordinates on which the markers are represented [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].coordinate_identifier[:].description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].coordinate_identifier[:].index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].coordinate_identifier[:].name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].positions</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Position of the markers in the set of coordinates. The first dimension corresponds to the number of markers, the second dimension to the set of coordinates {dynamic} [mixed]</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].time</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distributions.distribution[:].markers[:].weights</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Weight of the markers, i.e. number of real particles represented by each marker. The dimension of the vector correspond to the number of markers {dynamic} [-]</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List all processes (NBI units, fusion reactions, ...) affecting the distribution, identified as in distribution_sources/source(i)/process in the DISTRIBUTION_SOURCES IDS</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].nbi_beamlets_group</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the NBI beamlets group considered. Refers to the "unit/beamlets_group" array of the NBI IDS. 0 means sum over all beamlets groups. {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].nbi_energy</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>For NBI source, energy of the accelerated species considered. index = 0 for a sum over all energies; index = 1 for full energiy; index = 2 for half energy; index = 3 for third energy</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].nbi_energy.description</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].nbi_energy.index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].nbi_energy.name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].nbi_unit</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the NBI unit considered. Refers to the "unit" array of the NBI IDS. 0 means sum over all NBI units. {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].reactant_energy</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>For nuclear reaction source, energy of the reactants. index = 0 for a sum over all energies; index = 1 for thermal-thermal; index = 2 for beam-beam; index = 3 for beam-thermal</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].reactant_energy.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].reactant_energy.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].reactant_energy.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Process type. index=1 for NBI; index=2 for nuclear reaction (reaction unspecified); index=3 for nuclear reaction: T(d,n)4He [D+T->He4+n]; index=4 for nuclear reaction: He3(d,p)4He [He3+D->He4+p]; index=5 for nuclear reaction: D(d,p)T [D+D->T+p]; index=6 for nuclear reaction: D(d,n)3He [D+D->He3+n]; index=7 for runaway processes</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].process[:].type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d.grid.rho_tor_norm</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Radial profiles (flux surface averaged quantities) for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Flux surface averaged profile evaluated using the co-passing particle part of the distribution.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.electrons</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.current_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.current_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.density</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.density_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.pressure</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.pressure_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.pressure_fast_parallel</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of flux averaged sources and sinks of particles, momentum and energy included in the Fokker-Planck modelling, related to the various waves or particle source processes affecting the distribution</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].energy</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of energy density {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Identifier of the wave or particle source process, defined respectively in distribution/wave or distribution/process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier.process_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/process {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier.type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Type of the source term. Index = 1 for a wave, index = 2 for a particle source process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier.type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier.type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier.type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].identifier.wave_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/wave {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].momentum_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of toroidal angular momentum density {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.source[:].particles</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Source rate of thermal particle density {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].co_passing.torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.electrons</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Flux surface averaged profile evaluated using the counter-passing particle part of the distribution.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.electrons</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.current_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.current_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.density</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.density_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.pressure</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.pressure_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.pressure_fast_parallel</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of flux averaged sources and sinks of particles, momentum and energy included in the Fokker-Planck modelling, related to the various waves or particle source processes affecting the distribution</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].energy</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of energy density {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Identifier of the wave or particle source process, defined respectively in distribution/wave or distribution/process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier.process_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/process {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier.type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Type of the source term. Index = 1 for a wave, index = 2 for a particle source process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier.type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier.type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier.type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].identifier.wave_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/wave {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].momentum_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of toroidal angular momentum density {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.source[:].particles</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Source rate of thermal particle density {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].counter_passing.torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].current_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].current_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].density</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].density_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].grid</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].grid.area</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].grid.psi</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].grid.volume</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].pressure</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].pressure_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].pressure_fast_parallel</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Set of flux averaged sources and sinks of particles, momentum and energy included in the Fokker-Planck modelling, related to the various waves or particle source processes affecting the distribution</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].energy</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Source rate of energy density {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Identifier of the wave or particle source process, defined respectively in distribution/wave or distribution/process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier.process_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/process {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier.type</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Type of the source term. Index = 1 for a wave, index = 2 for a particle source process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier.type.description</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier.type.index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier.type.name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].identifier.wave_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/wave {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].momentum_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Source rate of toroidal angular momentum density {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].source[:].particles</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of thermal particle density {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].thermalisation</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Flux surface averaged source of thermal particles, momentum and energy due to thermalisation. Here thermalisation refers to non-thermal particles, sufficiently assimilated to the thermal background to be re-categorised as thermal particles. Note that this source may also be negative if thermal particles are being accelerated such that they form a distinct non-thermal contribution, e.g. due run-away of RF interactions.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].thermalisation.energy</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of energy density within the thermal particle population due to the thermalisation of fast particles {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].thermalisation.momentum_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Source rate of toroidal angular momentum density within the thermal particle population due to the thermalisation of fast particles {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].thermalisation.particles</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of thermal particle density due to the thermalisation of fast particles {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].time</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Flux surface averaged profile evaluated using the trapped particle part of the distribution.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.electrons</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.current_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.current_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.density</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.density_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.pressure</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.pressure_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.pressure_fast_parallel</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Set of flux averaged sources and sinks of particles, momentum and energy included in the Fokker-Planck modelling, related to the various waves or particle source processes affecting the distribution</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].energy</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of energy density {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Identifier of the wave or particle source process, defined respectively in distribution/wave or distribution/process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier.process_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/process {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier.type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Type of the source term. Index = 1 for a wave, index = 2 for a particle source process</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier.type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier.type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier.type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].identifier.wave_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index into distribution/wave {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].momentum_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Source rate of toroidal angular momentum density {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.source[:].particles</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Source rate of thermal particle density {dynamic} [s^-1.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_1d[:].trapped.torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>2D profiles in the poloidal plane for various time slices {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Flux surface averaged profile evaluated using the co-passing particle part of the distribution.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.electrons</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.current_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.current_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.density</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.density_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.pressure</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.pressure_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.pressure_fast_parallel</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].co_passing.torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.electrons</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Flux surface averaged profile evaluated using the counter-passing particle part of the distribution.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.electrons</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.current_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.current_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.density</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.density_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.pressure</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.pressure_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.pressure_fast_parallel</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].counter_passing.torque_tor_j_radial</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].current_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].current_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].density</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].density_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Grid. The grid has to be rectangular in a pair of coordinates, as specified in type</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.area</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.grid.grid.theta_straight</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.grid.rho_tor_norm</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.psi</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.r</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.rho_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation) {dynamic} [-]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.theta_geometric</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Geometrical poloidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.theta_straight</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Straight field line poloidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.type</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Grid type: index=0: Rectangular grid in the (R,Z) coordinates; index=1: Rectangular grid in the (radial, theta_geometric) coordinates; index=2: Rectangular grid in the (radial, theta_straight) coordinates. {dynamic} [m^3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.type.description</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.type.index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.type.name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.volume</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].grid.z</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].pressure</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].pressure_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].pressure_fast_parallel</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].time</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].torque_tor_j_radial</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Flux surface averaged profile evaluated using the trapped particle part of the distribution.</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Power and torque exchanged between the species described by the distribution and the different plasma species through collisions</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.electrons</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Collisional exchange with electrons</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.electrons.power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.electrons.power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.electrons.torque_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.electrons.torque_thermal_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various ion species</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].element[:]</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].element[:].a</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].element[:].multiplicity</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].element[:].z_n</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].multiple_states_flag</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].neutral_index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].power_fast</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].power_thermal</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].power_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the fast particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].power_thermal</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional power density to the thermal particle population {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].z_max</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].state[:].z_min</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].torque_fast_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the fast particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].torque_thermal_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Collisional toroidal torque density to the thermal particle population {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.collisions.ion[:].z_ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.current_fast_tor</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density of fast (non-thermal) particles (excluding electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.current_tor</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Total toroidal driven current density (including electron and thermal ion back-current, or drag-current) {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.density</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.density_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Density of fast particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.pressure</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure (thermal+non-thermal) {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.pressure_fast</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.pressure_fast_parallel</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_2D</p></td><td><p>Pressure of fast particles in the parallel direction {dynamic} [J.m^-3]</p></td></tr>
   <tr><td><p>distributions.distribution[:].profiles_2d[:].trapped.torque_tor_j_radial</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_2D</p></td><td><p>Toroidal torque due to radial currents {dynamic} [N.m^-2]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Species described by this distribution</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Description of the ion or neutral species, used if type/index = 2 or 3</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.element[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.element[:].a</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.element[:].multiplicity</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.element[:].z_n</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state.electron_configuration</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state.label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying ion state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state.vibrational_level</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state.vibrational_mode</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state.z_max</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.state.z_min</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.ion.z_ion</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Description of the neutral species, used if type/index = 4 or 5</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.element[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.element[:].a</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.element[:].multiplicity</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.element[:].z_n</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.label</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>State of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.electron_configuration</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.label</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>String identifying neutral state {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.neutral_type</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.neutral_type.description</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.neutral_type.index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.neutral_type.name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.vibrational_level</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.neutral.state.vibrational_mode</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.type</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Species type. index=1 for electron; index=2 for ion species in a single/average state (refer to ion structure); index=3 for ion species in a particular state (refer to ion/state structure); index=4 for neutral species in a single/average state (refer to neutral structure); index=5 for neutral species in a particular state (refer to neutral/state structure); index=6 for neutron; index=7 for photon</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.type.description</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.type.index</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].species.type.name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:]</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>List all waves affecting the distribution, identified as in waves/coherent_wave(i)/identifier in the waves IDS</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:].antenna_name</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>STR_0D</p></td><td><p>Name of the antenna that launches this wave. Corresponds to the name specified in antennas/ec(i)/name, or antennas/ic(i)/name or antennas/lh(i)/name (depends of antenna/wave type) in the ANTENNAS IDS. {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:].index_in_antenna</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_0D</p></td><td><p>Index of the wave (starts at 1), separating different waves generated from a single antenna. {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:].type</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Wave/antenna type. index=1 for name=EC; index=2 for name=LH; index=3 for name=IC</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:].type.description</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:].type.index</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>distributions.distribution[:].wave[:].type.name</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>distributions.grid.rho_tor_norm</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.grid.theta_straight</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>distributions.ids_properties</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>distributions.ids_properties.comment</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>distributions.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>distributions.magnetic_axis</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Magnetic axis position (used to define a poloidal angle for the 2D profiles)</p></td></tr>
   <tr><td><p>distributions.magnetic_axis.r</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>distributions.magnetic_axis.z</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>distributions.time</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>distributions.vacuum_toroidal_field</p></td><td><p><map object at 0x10f3eb940></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>distributions.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x10f3ebb00></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>distributions.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x10f3eb940></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

ece
^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>ece.channel[:]</p></td><td><p><map object at 0x111c0f898></p></td><td><p></p></td><td><p>Set of channels (frequency)</p></td></tr>
   <tr><td><p>ece.channel[:].frequency</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>FLT_0D</p></td><td><p>Frequency of the channel {static} [Hz]</p></td></tr>
   <tr><td><p>ece.channel[:].harmonic</p></td><td><p><map object at 0x111c0f898></p></td><td><p></p></td><td><p>Harmonic detected by the channel</p></td></tr>
   <tr><td><p>ece.channel[:].harmonic.data</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>INT_1D</p></td><td><p>Harmonic detected by the channel {dynamic}</p></td></tr>
   <tr><td><p>ece.channel[:].harmonic.time</p></td><td><p><map object at 0x111c0f898></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>ece.channel[:].identifier</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>STR_0D</p></td><td><p>ID of the channel {static}</p></td></tr>
   <tr><td><p>ece.channel[:].name</p></td><td><p><map object at 0x111c0f898></p></td><td><p>STR_0D</p></td><td><p>Name of the channel {static}</p></td></tr>
   <tr><td><p>ece.channel[:].position</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p></p></td><td><p>Position of the measurements</p></td></tr>
   <tr><td><p>ece.channel[:].position.phi</p></td><td><p><map object at 0x111c0f898></p></td><td><p></p></td><td><p>Toroidal angle</p></td></tr>
   <tr><td><p>ece.channel[:].position.phi.data</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>ece.channel[:].position.phi.time</p></td><td><p><map object at 0x111c0f898></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>ece.channel[:].position.r</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p></p></td><td><p>Major radius</p></td></tr>
   <tr><td><p>ece.channel[:].position.r.data</p></td><td><p><map object at 0x111c0f898></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>ece.channel[:].position.r.time</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>ece.channel[:].position.z</p></td><td><p><map object at 0x111c0f898></p></td><td><p></p></td><td><p>Height</p></td></tr>
   <tr><td><p>ece.channel[:].position.z.data</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>ece.channel[:].position.z.time</p></td><td><p><map object at 0x111c0f898></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>ece.channel[:].t_e</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p></p></td><td><p>Electron temperature</p></td></tr>
   <tr><td><p>ece.channel[:].t_e.data</p></td><td><p><map object at 0x111c0f898></p></td><td><p>FLT_1D</p></td><td><p>Electron temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>ece.channel[:].t_e.time</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>ece.code</p></td><td><p><map object at 0x111c0f898></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>ece.code.name</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>ece.code.output_flag</p></td><td><p><map object at 0x111c0f898></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>ece.code.parameters</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>ece.code.version</p></td><td><p><map object at 0x111c0f898></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>ece.ids_properties</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>ece.ids_properties.comment</p></td><td><p><map object at 0x111c0f898></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>ece.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>ece.line_of_sight</p></td><td><p><map object at 0x111c0f898></p></td><td><p></p></td><td><p>Description of the line of sight of the diagnostic (valid for all channels), defined by two points</p></td></tr>
   <tr><td><p>ece.line_of_sight.first_point</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p></p></td><td><p>Position of the first point</p></td></tr>
   <tr><td><p>ece.line_of_sight.first_point.phi</p></td><td><p><map object at 0x111c0f898></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>ece.line_of_sight.first_point.r</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>ece.line_of_sight.first_point.z</p></td><td><p><map object at 0x111c0f898></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>ece.line_of_sight.second_point</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p></p></td><td><p>Position of the second point</p></td></tr>
   <tr><td><p>ece.line_of_sight.second_point.phi</p></td><td><p><map object at 0x111c0f898></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>ece.line_of_sight.second_point.r</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>ece.line_of_sight.second_point.z</p></td><td><p><map object at 0x111c0f898></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>ece.time</p></td><td><p><map object at 0x111c0f5c0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

edge profiles
^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>edge_profiles.code</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>edge_profiles.code.name</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>edge_profiles.code.output_flag</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.code.parameters</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>edge_profiles.code.version</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Edge plasma quantities represented using the general grid description, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Electric field, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].e_field[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Density (thermal+non-thermal), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density_fast[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Density of fast (non-thermal) particles, given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density_fast[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density_fast[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density_fast[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.density_fast[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.distribution_function[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Distribution function, given on various grid subsets [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.distribution_function[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.distribution_function[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.distribution_function[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.distribution_function[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_parallel[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Fast (non-thermal) parallel pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_parallel[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_parallel[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_parallel[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_parallel[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_perpendicular[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Fast (non-thermal) perpendicular pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_perpendicular[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_perpendicular[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.pressure_fast_perpendicular[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.temperature[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Temperature, given on various grid subsets [eV]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.temperature[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.temperature[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.temperature[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.temperature[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Velocity, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].electrons.velocity.toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.identifier</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.identifier.description</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.identifier.index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.identifier.name</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Density (thermal+non-thermal) (sum over states when multiple states are considered), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density_fast[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Density of fast (non-thermal) particles (sum over states when multiple states are considered), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density_fast[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density_fast[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density_fast[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].density_fast[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].element[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].element[:].a</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].energy_density_kinetic[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Kinetic energy density (sum over states when multiple states are considered), given on various grid subsets [J.m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].energy_density_kinetic[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].energy_density_kinetic[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].energy_density_kinetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].energy_density_kinetic[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].label</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].neutral_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Pressure (average over states when multiple states are considered), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_parallel[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Fast (non-thermal) parallel pressure (average over states when multiple states are considered), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_parallel[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_parallel[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_parallel[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_parallel[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_perpendicular[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Fast (non-thermal) perpendicular pressure (average over states when multiple states are considered), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_perpendicular[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_perpendicular[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].pressure_fast_perpendicular[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Density (thermal+non-thermal), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density_fast[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Density of fast (non-thermal) particles, given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density_fast[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density_fast[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density_fast[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].density_fast[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].distribution_function[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Distribution function, given on various grid subsets [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].distribution_function[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].distribution_function[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].distribution_function[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].distribution_function[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].energy_density_kinetic[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Kinetic energy density, given on various grid subsets [J.m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].energy_density_kinetic[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].energy_density_kinetic[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].energy_density_kinetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].energy_density_kinetic[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].ionisation_potential[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Cumulative and average ionisation potential to reach a given bundle. Defined as sum (x_z* (sum of Epot from z'=0 to z-1)), where Epot is the ionisation potential of ion Xz_+, and x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle, given on various grid subsets [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].ionisation_potential[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].ionisation_potential[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].ionisation_potential[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].ionisation_potential[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].label</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_parallel[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Fast (non-thermal) parallel pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_parallel[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_parallel[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_parallel[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_parallel[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_perpendicular[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Fast (non-thermal) perpendicular pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_perpendicular[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_perpendicular[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].pressure_fast_perpendicular[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].temperature[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Temperature, given on various grid subsets [eV]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].temperature[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].temperature[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].temperature[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].temperature[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Velocity due to the diamagnetic drift, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_diamagnetic[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity due to the ExB drift, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].velocity_exb[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_average[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Average Z of the charge state bundle (equal to z_min if no bundle), = sum (Z*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle, given on various grid subsets [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_average[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_average[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_average[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_average[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_square_average[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Average Z square of the charge state bundle (equal to z_min if no bundle), = sum (Z^2*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle, given on various grid subsets [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_square_average[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_square_average[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_square_average[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].state[:].z_square_average[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].temperature[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Temperature (average over states when multiple states are considered), given on various grid subsets [eV]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].temperature[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].temperature[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].temperature[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].temperature[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity (average over states when multiple states are considered), given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].velocity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].ion[:].z_ion</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Anomalous current density, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_anomalous[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Current density due to the diamgnetic drift, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_diamagnetic[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Current density due to the heat viscosity, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_heat_viscosity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Inertial current density, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_inertial[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Current density due to ion neutral friction, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_ion_neutral_friction[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Current density due to the parallel viscosity, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_parallel_viscosity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Current density due to the perpendicular viscosity, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_perpendicular_viscosity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Current density due to Pfirsch-Schlter effects, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].j_pfirsch_schlueter[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].n_i_total_over_n_e[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Ratio of total ion density (sum over ion species) over electron density. (thermal+non-thermal), given on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].n_i_total_over_n_e[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].n_i_total_over_n_e[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].n_i_total_over_n_e[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].n_i_total_over_n_e[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Quantities related to the different neutral species</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Density (thermal+non-thermal) (sum over states when multiple states are considered), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density_fast[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Density of fast (non-thermal) particles (sum over states when multiple states are considered), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density_fast[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density_fast[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density_fast[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].density_fast[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].element[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].element[:].a</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].energy_density_kinetic[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Kinetic energy density (sum over states when multiple states are considered), given on various grid subsets [J.m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].energy_density_kinetic[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].energy_density_kinetic[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].energy_density_kinetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].energy_density_kinetic[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].ion_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].label</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H, D, T, He, C, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Pressure (average over states when multiple states are considered), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_parallel[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Fast (non-thermal) parallel pressure (average over states when multiple states are considered), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_parallel[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_parallel[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_parallel[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_parallel[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_perpendicular[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Fast (non-thermal) perpendicular pressure (average over states when multiple states are considered), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_perpendicular[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_perpendicular[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].pressure_fast_perpendicular[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Density (thermal+non-thermal), given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density_fast[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Density of fast (non-thermal) particles, given on various grid subsets [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density_fast[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density_fast[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density_fast[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].density_fast[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].distribution_function[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Distribution function, given on various grid subsets [mixed]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].distribution_function[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].distribution_function[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].distribution_function[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].distribution_function[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].energy_density_kinetic[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Kinetic energy density, given on various grid subsets [J.m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].energy_density_kinetic[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].energy_density_kinetic[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].energy_density_kinetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].energy_density_kinetic[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].label</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>String identifying state {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_parallel[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Fast (non-thermal) parallel pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_parallel[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_parallel[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_parallel[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_parallel[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_perpendicular[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Fast (non-thermal) perpendicular pressure, given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_perpendicular[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_perpendicular[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].pressure_fast_perpendicular[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].temperature[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Temperature, given on various grid subsets [eV]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].temperature[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].temperature[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].temperature[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].temperature[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Velocity due to the diamagnetic drift, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].parallel_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].radial_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_diamagnetic[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity due to the ExB drift, given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].velocity_exb[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].temperature[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Temperature (average over states when multiple states are considered), given on various grid subsets [eV]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].temperature[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].temperature[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].temperature[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].temperature[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity (average over states when multiple states are considered), given on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].parallel_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].poloidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].radial_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].neutral[:].velocity[:].toroidal_coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_parallel[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Total parallel pressure (electrons+ions, thermal+non-thermal), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_parallel[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_parallel[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_parallel[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_parallel[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_perpendicular[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Total perpendicular pressure (electrons+ions, thermal+non-thermal), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_perpendicular[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_perpendicular[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_perpendicular[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_thermal[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Thermal pressure (electrons+ions), given on various grid subsets [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_thermal[:].coefficients</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_thermal[:].grid_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_thermal[:].grid_subset_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].pressure_thermal[:].values</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].t_i_average[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Ion temperature (averaged on ion species), given on various grid subsets [eV]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].t_i_average[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].t_i_average[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].t_i_average[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].t_i_average[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].time</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].zeff[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Effective charge, given on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].zeff[:].coefficients</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].zeff[:].grid_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].zeff[:].grid_subset_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.ggd[:].zeff[:].values</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.ids_properties</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>edge_profiles.ids_properties.comment</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>edge_profiles.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>SOL radial profiles for various time slices, taken on outboard equatorial mid-plane {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].conductivity_parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel conductivity {dynamic} [ohm^-1.m^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].e_field</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Electric field, averaged on the magnetic surface. E.g for the parellel component, average(E.B) / B0, using core_profiles/vacuum_toroidal_field/b0 [V.m^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].e_field.diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].e_field.parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].e_field.poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].e_field.radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].e_field.toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.density</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.density_fast</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.pressure</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.pressure_fast_parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.temperature</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.velocity</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.velocity.diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.velocity.parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.velocity.poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.velocity.radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].electrons.velocity.toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].grid</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].grid.area</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].grid.psi</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].grid.volume</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].density</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].density_fast</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].element[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].element[:].a</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].label</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].neutral_index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].pressure</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].pressure_fast_parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].density</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].density_fast</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].ionisation_potential</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Cumulative and average ionisation potential to reach a given bundle. Defined as sum (x_z* (sum of Epot from z'=0 to z-1)), where Epot is the ionisation potential of ion Xz+, and x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].pressure</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].pressure_fast_parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].temperature</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].velocity</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].velocity.diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].velocity.parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].velocity.poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].velocity.radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].velocity.toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].z_average</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Average Z of the charge state bundle (equal to z_min if no bundle), = sum (Z*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].state[:].z_square_average</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Average Z square of the charge state bundle (equal to z_min if no bundle), = sum (Z^2*x_z) where x_z is the relative concentration of a given charge state in the bundle, i.e. sum(x_z) = 1 over the bundle. {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].temperature</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].velocity</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Velocity (average over charge states when multiple charge states are considered) [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].velocity.diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].velocity.parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].velocity.poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].velocity.radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].velocity.toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].j_bootstrap</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Bootstrap current density = average(J_Bootstrap.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].j_non_inductive</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Non-inductive (includes bootstrap) parallel current density = average(jni.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].j_ohmic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Ohmic parallel current density = average(J_Ohmic.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].j_tor</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal current density = average(J_Tor/R) / average(1/R) {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].j_total</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Total parallel current density = average(jtot.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].magnetic_shear</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor {dynamic} [-]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Total plasma toroidal momentum, summed over ion species and electrons {dynamic} [kg.m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].n_i_total_over_n_e</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal) {dynamic} [-]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:]</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Quantities related to the different neutral species</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].density</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].density_fast</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].element[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].element[:].a</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].ion_index</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].label</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].pressure</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].pressure_fast_parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (sum over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:]</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].density</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].density_fast</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e01710></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].label</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111e01710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].pressure</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].pressure_fast_parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].pressure_fast_perpendicular</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].temperature</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].velocity</p></td><td><p><map object at 0x111e01710></p></td><td><p></p></td><td><p>Velocity [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].velocity.diamagnetic</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].velocity.parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].velocity.poloidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].velocity.radial</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].velocity.toroidal</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e01048></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].temperature</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].velocity</p></td><td><p><map object at 0x111e01048></p></td><td><p></p></td><td><p>Velocity (average over charge states when multiple charge states are considered) [m.s^-1]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].velocity.diamagnetic</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].velocity.parallel</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Parallel component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].velocity.poloidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].velocity.radial</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Radial component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].neutral[:].velocity.toroidal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].pressure_ion_total</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Total (sum over ion species) thermal ion pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].pressure_parallel</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Total parallel pressure (electrons+ions, thermal+non-thermal) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].pressure_perpendicular</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Total perpendicular pressure (electrons+ions, thermal+non-thermal) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].pressure_thermal</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Thermal pressure (electrons+ions) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].q</p></td><td><p><map object at 0x111e01048></p></td><td><p>FLT_1D</p></td><td><p>Safety factor {dynamic} [-]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].t_i_average</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Ion temperature (averaged on charge states and ion species) {dynamic} [eV]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].time</p></td><td><p><map object at 0x111e01048></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>edge_profiles.profiles_1d[:].zeff</p></td><td><p><map object at 0x111e01710></p></td><td><p>FLT_1D</p></td><td><p>Effective charge {dynamic} [-]</p></td></tr>
   <tr><td><p>edge_profiles.time</p></td><td><p><map object at 0x111e01048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

edge sources
^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>edge_sources.code</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>edge_sources.code.name</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>edge_sources.code.output_flag</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.code.parameters</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>edge_sources.code.version</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>edge_sources.ids_properties</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>edge_sources.ids_properties.comment</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>edge_sources.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Set of source terms</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source terms represented using the general grid description, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].current[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Current density source [A.m^-2]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].current[:].coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].current[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].current[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].current[:].values</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Sources for electrons</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.energy[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term for the electron energy equation, given on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.energy[:].coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.energy[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.energy[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.energy[:].values</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.particles[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for electron density equation, given on various grid subsets [m^-3.s^-1]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.particles[:].coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.particles[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.particles[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].electrons.particles[:].values</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.identifier</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.identifier.description</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.identifier.index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.identifier.name</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source terms related to the different ion species</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].element[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].element[:].a</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].energy[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for the ion energy transport equation, on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].energy[:].coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].energy[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].energy[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].energy[:].values</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].label</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for momentum equations (sum over states when multiple states are considered), on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].diamagnetic</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].parallel</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].parallel_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].poloidal</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].poloidal_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].radial</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].radial_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].toroidal</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].momentum[:].toroidal_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].neutral_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].particles[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term for ion density equation, on various grid subsets [s^-1.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].particles[:].coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].particles[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].particles[:].values</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source terms related to the different charge states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].energy[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source terms for the charge state energy transport equation [W.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].energy[:].coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].energy[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].energy[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].energy[:].values</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].label</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for momentum equations, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].diamagnetic</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].parallel</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].parallel_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].poloidal</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].poloidal_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].radial</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].radial_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].toroidal</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].momentum[:].toroidal_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].particles[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term for the charge state density transport equation [s^-1.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].particles[:].coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].particles[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].particles[:].values</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].ion[:].z_ion</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term for total momentum equations, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].diamagnetic</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].parallel</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].parallel_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].poloidal</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].poloidal_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].radial</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].radial_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].toroidal</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].momentum[:].toroidal_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source terms related to the different neutral species</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].element[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].element[:].a</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].energy[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term for the ion energy transport equation, on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].energy[:].coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].energy[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].energy[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].energy[:].values</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].ion_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].label</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...) {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for momentum equations (sum over states when multiple states are considered), on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].diamagnetic</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].parallel</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].parallel_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].poloidal</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].poloidal_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].radial</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].radial_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].toroidal</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].momentum[:].toroidal_coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].particles[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for ion density equation, on various grid subsets [s^-1.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].particles[:].coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].particles[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].particles[:].values</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source terms related to the different charge states of the species (energy, excitation, ...)</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].energy[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source terms for the charge state energy transport equation [W.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].energy[:].coefficients</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].energy[:].grid_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].energy[:].grid_subset_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].energy[:].values</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].label</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>String identifying state {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:]</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term for momentum equations, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].diamagnetic</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].parallel</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].parallel_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].poloidal</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].poloidal_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].radial</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].radial_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].toroidal</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].momentum[:].toroidal_coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111b80a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].particles[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for the charge state density transport equation [s^-1.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].particles[:].coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].particles[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].particles[:].values</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].time</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].total_ion_energy[:]</p></td><td><p><map object at 0x111b80c18></p></td><td><p></p></td><td><p>Source term for the total (summed over ion species) energy equation, on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].total_ion_energy[:].coefficients</p></td><td><p><map object at 0x111b80a58></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].total_ion_energy[:].grid_index</p></td><td><p><map object at 0x111b80c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].total_ion_energy[:].grid_subset_index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_sources.source[:].ggd[:].total_ion_energy[:].values</p></td><td><p><map object at 0x111b80c18></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_sources.source[:].identifier</p></td><td><p><map object at 0x111b80a58></p></td><td><p></p></td><td><p>Source term identifier</p></td></tr>
   <tr><td><p>edge_sources.source[:].identifier.description</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].identifier.index</p></td><td><p><map object at 0x111b80a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>edge_sources.source[:].identifier.name</p></td><td><p><map object at 0x111b80c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>edge_sources.time</p></td><td><p><map object at 0x111b80a58></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

edge transport
^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>edge_transport.code</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>edge_transport.code.name</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>edge_transport.code.output_flag</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.code.parameters</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>edge_transport.code.version</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>edge_transport.ids_properties</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>edge_transport.ids_properties.comment</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>edge_transport.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport is described by a combination of various transport models</p></td></tr>
   <tr><td><p>edge_transport.model[:].flux_multiplier</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Multiplier applied to the particule flux when adding its contribution in the expression of the heat flux : can be 0, 3/2 or 5/2 {constant} [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients represented using the general grid description, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Conductivity, on various grid subsets [ohm^-1.m^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].conductivity[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport quantities related to the electrons</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport quantities for the electron energy equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.d[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.d[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [W.m^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux_limiter[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.flux_limiter[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.v[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.energy.v[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport quantities for the electron density equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.d[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.d[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [m^-2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux_limiter[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.flux_limiter[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.v[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].electrons.particles.v[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.identifier</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.identifier.description</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.identifier.index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.identifier.name</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport coefficients related to the various ion and neutral species</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].element[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].element[:].a</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients related to the ion energy equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.d[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.d[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [W.m^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux_limiter[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.flux_limiter[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.v[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].energy.v[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].label</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients for the ion momentum equations</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.d[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.flux_limiter[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].momentum.v[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].neutral_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding neutral species in the ../../neutral array {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport related to the ion density equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.d[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.d[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [m^-2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux_limiter[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.flux_limiter[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.v[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].particles.v[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients related to the different states of the species</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport quantities related to the energy equation of the charge state considered</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.d[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.d[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [W.m^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux_limiter[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.flux_limiter[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.v[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].energy.v[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].label</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients related to the momentum equations of the charge state considered</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.d[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.flux_limiter[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].momentum.v[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport quantities related to density equation of the charge state considered (thermal+non-thermal)</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.d[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.d[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [m^-2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux_limiter[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.flux_limiter[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.v[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].particles.v[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].ion[:].z_ion</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport coefficients for total momentum equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.d[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.flux_limiter[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].momentum.v[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients related to the various ion and neutral species</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].element[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].element[:].a</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].element[:].z_n</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport coefficients related to the ion energy equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.d[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.d[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [W.m^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux_limiter[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.flux_limiter[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.v[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].energy.v[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].ion_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the corresponding ion species in the ../../ion array {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].label</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>String identifying neutral (e.g. H, D, T, He, C, ...) {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients for the ion momentum equations</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.d[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.flux_limiter[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].momentum.v[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].multiple_states_flag</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport related to the ion density equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.d[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.d[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [m^-2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux_limiter[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.flux_limiter[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.v[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].particles.v[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport coefficients related to the different states of the species</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].electron_configuration</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport quantities related to the energy equation of the charge state considered</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.d[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.d[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.d[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.d[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [W.m^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux_limiter[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux_limiter[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.flux_limiter[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.v[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.v[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.v[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].energy.v[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].label</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>String identifying state {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport coefficients related to the momentum equations of the charge state considered</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.d[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux, on various grid subsets [kg.m^-1.s^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].diamagnetic</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].diamagnetic_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].parallel</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].parallel_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].poloidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].poloidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].radial</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].radial_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].toroidal</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.flux_limiter[:].toroidal_coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].diamagnetic</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].diamagnetic_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the diamagnetic component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].parallel</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Parallel component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].parallel_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the parallel component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].poloidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].poloidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the poloidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].radial</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Radial component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].radial_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the radial component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].toroidal</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal component, one scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].momentum.v[:].toroidal_coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients for the toroidal component, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].neutral_type</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Neutral type, in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].neutral_type.index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111575400></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport quantities related to density equation of the charge state considered (thermal+non-thermal)</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.d[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.d[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [m^-2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux_limiter[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.flux_limiter[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.v[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].particles.v[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].vibrational_level</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].neutral[:].state[:].vibrational_mode</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].time</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Transport coefficients for the total (summed over ion species) energy equation</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.d[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Effective diffusivity, on various grid subsets [m^2.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.d[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.d[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.d[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.d[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Flux, on various grid subsets [W.m^-2]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux_limiter[:]</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Flux limiter coefficient, on various grid subsets [-]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux_limiter[:].coefficients</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux_limiter[:].grid_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux_limiter[:].grid_subset_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.flux_limiter[:].values</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.v[:]</p></td><td><p><map object at 0x1115754e0></p></td><td><p></p></td><td><p>Effective convection, on various grid subsets [m.s^-1]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.v[:].coefficients</p></td><td><p><map object at 0x111575400></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.v[:].grid_index</p></td><td><p><map object at 0x1115754e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.v[:].grid_subset_index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>edge_transport.model[:].ggd[:].total_ion_energy.v[:].values</p></td><td><p><map object at 0x1115754e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>edge_transport.model[:].identifier</p></td><td><p><map object at 0x111575400></p></td><td><p></p></td><td><p>Transport model identifier</p></td></tr>
   <tr><td><p>edge_transport.model[:].identifier.description</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].identifier.index</p></td><td><p><map object at 0x111575400></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>edge_transport.model[:].identifier.name</p></td><td><p><map object at 0x1115754e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>edge_transport.time</p></td><td><p><map object at 0x111575400></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

em coupling
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>em_coupling.active_coils</p></td><td><p><map object at 0x111834438></p></td><td><p>STR_1D</p></td><td><p>List of the names of the active PF+CS coils {static}</p></td></tr>
   <tr><td><p>em_coupling.code</p></td><td><p><map object at 0x111834390></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>em_coupling.code.name</p></td><td><p><map object at 0x111834438></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>em_coupling.code.output_flag</p></td><td><p><map object at 0x111834390></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>em_coupling.code.parameters</p></td><td><p><map object at 0x111834438></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>em_coupling.code.version</p></td><td><p><map object at 0x111834390></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>em_coupling.field_probes_active</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Poloidal field coupling from active coils to poloidal field probes {static} [T/A]</p></td></tr>
   <tr><td><p>em_coupling.field_probes_grid</p></td><td><p><map object at 0x111834390></p></td><td><p>FLT_2D</p></td><td><p>Poloidal field coupling from equilibrium grid to poloidal field probes {static} [T/A]</p></td></tr>
   <tr><td><p>em_coupling.field_probes_passive</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Poloidal field coupling from passive loops to poloidal field probes {static} [T/A]</p></td></tr>
   <tr><td><p>em_coupling.flux_loops</p></td><td><p><map object at 0x111834390></p></td><td><p>STR_1D</p></td><td><p>List of the names of the axisymmetric flux loops {static}</p></td></tr>
   <tr><td><p>em_coupling.grid_points</p></td><td><p><map object at 0x111834438></p></td><td><p>STR_1D</p></td><td><p>List of the names of the plasma region grid points {constant}</p></td></tr>
   <tr><td><p>em_coupling.ids_properties</p></td><td><p><map object at 0x111834390></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>em_coupling.ids_properties.comment</p></td><td><p><map object at 0x111834438></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>em_coupling.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111834390></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>em_coupling.magnetics.bpol_probe</p></td><td><p><map object at 0x111834438></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>em_coupling.magnetics.flux_loop</p></td><td><p><map object at 0x111834390></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>em_coupling.mutual_active_active</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from active coils to active coils {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_grid_active</p></td><td><p><map object at 0x111834390></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from active coils to equilibrium grid {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_grid_grid</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance from equilibrium grid to itself {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_grid_passive</p></td><td><p><map object at 0x111834390></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from passive loops to equilibrium grid {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_loops_active</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from active coils to poloidal flux loops {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_loops_grid</p></td><td><p><map object at 0x111834390></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance from equilibrium grid to poloidal flux loops {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_loops_passive</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from passive loops to poloidal flux loops {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_passive_active</p></td><td><p><map object at 0x111834390></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from active coils to passive loops {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.mutual_passive_passive</p></td><td><p><map object at 0x111834438></p></td><td><p>FLT_2D</p></td><td><p>Mutual inductance coupling from passive loops to passive loops {static} [H]</p></td></tr>
   <tr><td><p>em_coupling.passive_loops</p></td><td><p><map object at 0x111834390></p></td><td><p>STR_1D</p></td><td><p>List of the names of the passive loops {static}</p></td></tr>
   <tr><td><p>em_coupling.pf_active.coil</p></td><td><p><map object at 0x111834438></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>em_coupling.pf_passive.loop</p></td><td><p><map object at 0x111834390></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>em_coupling.poloidal_probes</p></td><td><p><map object at 0x111834438></p></td><td><p>STR_1D</p></td><td><p>List of the names of poloidal field probes {static}</p></td></tr>
   <tr><td><p>em_coupling.time</p></td><td><p><map object at 0x111834390></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

equilibrium
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>equilibrium.code</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>equilibrium.code.name</p></td><td><p><map object at 0x1114ac668></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>equilibrium.code.output_flag</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.code.parameters</p></td><td><p><map object at 0x1114ac668></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>equilibrium.code.version</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>equilibrium.ids_properties</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>equilibrium.ids_properties.comment</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>equilibrium.ids_properties.homogeneous_time</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>equilibrium.time</p></td><td><p><map object at 0x1114ac828></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Set of equilibria at various time slices {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Description of the plasma boundary</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.active_limiter_point</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>RZ position of the active limiter point (point of the plasma boundary in contact with the limiter)</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.active_limiter_point.r</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.active_limiter_point.z</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.b_flux_pol_norm</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Value of the normalised poloidal flux at which the boundary is taken {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.elongation</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Elongation of the plasma boundary {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.elongation_lower</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Elongation (lower half w.r.t. geometric axis) of the plasma boundary {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.elongation_upper</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Elongation (upper half w.r.t. geometric axis) of the plasma boundary {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.geometric_axis</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>RZ position of the geometric axis (defined as (Rmin+Rmax) / 2 and (Zmin+Zmax) / 2 of the boundary)</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.geometric_axis.r</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.geometric_axis.z</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.minor_radius</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Minor radius of the plasma boundary (defined as (Rmax-Rmin) / 2 of the boundary) {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.outline</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>RZ outline of the plasma boundary</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.outline.r</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.outline.z</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.strike_point[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Array of strike points, for each of them the RZ position is given</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.strike_point[:].r</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.strike_point[:].z</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.triangularity</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Triangularity of the plasma boundary {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.triangularity_lower</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Lower triangularity of the plasma boundary {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.triangularity_upper</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Upper triangularity of the plasma boundary {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.type</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>0 (limiter) or 1 (diverted) {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.x_point[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Array of X-points, for each of them the RZ position is given</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.x_point[:].r</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].boundary.x_point[:].z</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Flux surface coordinate system on a square grid of flux and poloidal angle</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Definition of the 2D grid</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid.dim1</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>First dimension values {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid.dim2</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Second dimension values {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid.volume_element</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Elementary plasma volume of plasma enclosed in the cell formed by the nodes [dim1(i) dim2(j)], [dim1(i+1) dim2(j)], [dim1(i) dim2(j+1)] and [dim1(i+1) dim2(j+1)] {dynamic} [m^3]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid_type</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Type of coordinate system</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid_type.description</p></td><td><p><map object at 0x1114ac668></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid_type.index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.grid_type.name</p></td><td><p><map object at 0x1114ac668></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.jacobian</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Jacobian of the coordinate system {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.r</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Values of the major radius on the grid {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.tensor_contravariant</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_4D</p></td><td><p>Contravariant metric tensor on every point of the grid described by grid_type {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.tensor_covariant</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_4D</p></td><td><p>Covariant metric tensor on every point of the grid described by grid_type {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].coordinate_system.z</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Values of the Height on the grid {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Equilibrium representation using the generic grid description. Multiple GGD representations of the equilibrium can be stored here.</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_r[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>R component of the poloidal magnetic field, given on various grid subsets [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].coefficients</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].grid_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].grid_subset_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_r[:].values</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Toroidal component of the magnetic field, given on various grid subsets [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].coefficients</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].grid_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].grid_subset_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_tor[:].values</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_z[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Z component of the poloidal magnetic field, given on various grid subsets [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].coefficients</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].grid_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].grid_subset_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].b_field_z[:].values</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.identifier</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.identifier.description</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.identifier.index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.identifier.name</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_parallel[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Parallel (to magnetic field) plasma current density, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].coefficients</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].grid_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].grid_subset_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_parallel[:].values</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_tor[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Toroidal plasma current density, given on various grid subsets [A.m^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_tor[:].coefficients</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_tor[:].grid_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_tor[:].grid_subset_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].j_tor[:].values</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].phi[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Values of the toroidal flux, given on various grid subsets [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].phi[:].coefficients</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].phi[:].grid_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].phi[:].grid_subset_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].phi[:].values</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].psi[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Values of the poloidal flux, given on various grid subsets [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].psi[:].coefficients</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].psi[:].grid_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].psi[:].grid_subset_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].psi[:].values</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].r[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Values of the major radius on various grid subsets [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].r[:].coefficients</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].r[:].grid_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].r[:].grid_subset_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].r[:].values</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].theta[:]</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Values of the poloidal angle, given on various grid subsets [rad]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].theta[:].coefficients</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].theta[:].grid_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].theta[:].grid_subset_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].theta[:].values</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].z[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Values of the Height on various grid subsets [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].z[:].coefficients</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].z[:].grid_index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].z[:].grid_subset_index</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].ggd[:].z[:].values</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>0D parameters of the equilibrium</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.area</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Area of the LCFS poloidal cross section {dynamic} [m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.beta_normal</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Normalised toroidal beta, defined as 100 * beta_tor * a[m] * B0 [T] / ip [MA] {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.beta_pol</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Poloidal beta. Defined as betap = 4 int(p dV) / [R_0 * mu_0 * Ip^2] {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.beta_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Toroidal beta, defined as the volume-averaged total perpendicular pressure divided by (B0^2/(2*mu0)), i.e. beta_toroidal = 2 mu0 int(p dV) / V / B0^2 {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.ip</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Plasma current. Positive sign means anti-clockwise when viewed from above. {dynamic} [A]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.length_pol</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Poloidal length of the magnetic surface {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.li_3</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Internal inductance {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.magnetic_axis</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Magnetic axis position and toroidal field</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.b_field_tor</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Total toroidal magnetic field at the magnetic axis {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.r</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Major radius of the magnetic axis {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.magnetic_axis.z</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Height of the magnetic axis {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.psi_axis</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Poloidal flux at the magnetic axis {dynamic} [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.psi_boundary</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Poloidal flux at the selected plasma boundary {dynamic} [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.q_95</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>q at the 95% poloidal flux surface {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.q_axis</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>q at the magnetic axis {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.q_min</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Minimum q value and position</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.q_min.rho_tor_norm</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Minimum q position in normalised toroidal flux coordinate {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.q_min.value</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Minimum q value {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.surface</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Surface area of the toroidal flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.volume</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_0D</p></td><td><p>Total plasma volume {dynamic} [m^3]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].global_quantities.w_mhd</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Plasma energy content = 3/2 * int(p,dV) with p being the total pressure (thermal + fast particles) [J]. Time-dependent; Scalar {dynamic} [J]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d</p></td><td><p><map object at 0x1114ac828></p></td><td><p></p></td><td><p>Equilibrium profiles (1D radial grid) as a function of the poloidal flux</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.area</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.b_field_average</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged B {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.b_field_max</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Maximum(B) on the flux surface {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.b_field_min</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Minimum(B) on the flux surface {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.darea_dpsi</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Radial derivative of the cross-sectional area of the flux surface with respect to psi {dynamic} [m^2.Wb^-1]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.darea_drho_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Radial derivative of the cross-sectional area of the flux surface with respect to rho_tor {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.dpressure_dpsi</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Derivative of pressure w.r.t. psi {dynamic} [Pa.Wb^-1]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.dpsi_drho_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Derivative of Psi with respect to Rho_Tor {dynamic} [Wb/m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.dvolume_dpsi</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Radial derivative of the volume enclosed in the flux surface with respect to Psi {dynamic} [m^3.Wb^-1]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.dvolume_drho_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Radial derivative of the volume enclosed in the flux surface with respect to Rho_Tor {dynamic} [m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.elongation</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Elongation {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.f</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic function (F=R B_Phi) {dynamic} [T.m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.f_df_dpsi</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Derivative of F w.r.t. Psi, multiplied with F {dynamic} [T^2.m^2/Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm1</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged 1/R^2 {dynamic} [m^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm2</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged grad_rho^2/R^2 {dynamic} [m^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm3</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged grad_rho^2 {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm4</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged 1/B^2 {dynamic} [T^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm5</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged B^2 {dynamic} [T^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm6</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged grad_rho^2/B^2 {dynamic} [T^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm7</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged grad_rho {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm8</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged R {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.gm9</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged 1/R {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.j_parallel</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged parallel current density = average(j.B) / B0, where B0 = Equilibrium/Global/Toroidal_Field/B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.j_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged toroidal current density = average(j_tor/R) / average(1/R) {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.magnetic_shear</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.phi</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.pressure</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.psi</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Poloidal flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.q</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Safety factor {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.r_inboard</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Radial coordinate (major radius) on the inboard side of the magnetic axis {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.r_outboard</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Radial coordinate (major radius) on the outboard side of the magnetic axis {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.rho_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.rho_tor_norm</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation) {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.surface</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Surface area of the toroidal flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.trapped_fraction</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Trapped particle fraction {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.triangularity_lower</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Lower triangularity w.r.t. magnetic axis {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.triangularity_upper</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Upper triangularity w.r.t. magnetic axis {dynamic} [-]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_1d.volume</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed in the flux surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:]</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Equilibrium 2D profiles in the poloidal plane. Multiple 2D representations of the equilibrium can be stored here.</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].b_field_r</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>R component of the poloidal magnetic field {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].b_field_tor</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Toroidal component of the magnetic field {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].b_field_z</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Z component of the poloidal magnetic field {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Definition of the 2D grid</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid.dim1</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>First dimension values {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid.dim2</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_1D</p></td><td><p>Second dimension values {dynamic} [mixed]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid.volume_element</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Elementary plasma volume of plasma enclosed in the cell formed by the nodes [dim1(i) dim2(j)], [dim1(i+1) dim2(j)], [dim1(i) dim2(j+1)] and [dim1(i+1) dim2(j+1)] {dynamic} [m^3]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid_type</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Selection of one of a set of grid types. 1-rectangular (R,Z) grid, in this case the position arrays should not be filled since they are redundant with grid/dim1 and dim2.</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid_type.description</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid_type.index</p></td><td><p><map object at 0x1114ac668></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].grid_type.name</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].j_parallel</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Parallel (to magnetic field) plasma current density {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].j_tor</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Toroidal plasma current density {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].phi</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Toroidal flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].psi</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Values of the poloidal flux at the grid in the poloidal plane {dynamic} [Wb]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].r</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Values of the major radius on the grid {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].theta</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_2D</p></td><td><p>Values of the poloidal angle on the grid {dynamic} [rad]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].profiles_2d[:].z</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_2D</p></td><td><p>Values of the Height on the grid {dynamic} [m]</p></td></tr>
   <tr><td><p>equilibrium.time_slice[:].time</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>equilibrium.vacuum_toroidal_field</p></td><td><p><map object at 0x1114ac668></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>equilibrium.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x1114ac828></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>equilibrium.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x1114ac668></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

info
^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>info.imas_version</p></td><td><p><map object at 0x1114ac940></p></td><td><p>STR_0D</p></td><td><p>imas version</p></td></tr>
   <tr><td><p>info.run</p></td><td><p><map object at 0x1114ac828></p></td><td><p>INT_0D</p></td><td><p>run number</p></td></tr>
   <tr><td><p>info.shot</p></td><td><p><map object at 0x1114ac940></p></td><td><p>INT_0D</p></td><td><p>shot number</p></td></tr>
   <tr><td><p>info.tokamak</p></td><td><p><map object at 0x1114ac828></p></td><td><p>STR_0D</p></td><td><p>tokamak name</p></td></tr>
   <tr><td><p>info.user</p></td><td><p><map object at 0x1114ac940></p></td><td><p>STR_0D</p></td><td><p>user name</p></td></tr>
   </table>
   </table><p></p>

interfero polarimeter
^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>interfero_polarimeter.channel[:]</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Set of channels (lines-of-sight)</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].ellipticity</p></td><td><p><map object at 0x11149bba8></p></td><td><p></p></td><td><p>Ellipticity</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].ellipticity.data</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_1D</p></td><td><p>Ellipticity {dynamic} [-]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].ellipticity.time</p></td><td><p><map object at 0x11149bba8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].ellipticity_initial</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_0D</p></td><td><p>Initial ellipticity before entering the plasma {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].faraday_angle</p></td><td><p><map object at 0x11149bba8></p></td><td><p></p></td><td><p>Faraday angle (variation of the Faraday angle induced by crossing the plasma)</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].faraday_angle.data</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_1D</p></td><td><p>Faraday angle (variation of the Faraday angle induced by crossing the plasma) {dynamic} [rad]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].faraday_angle.time</p></td><td><p><map object at 0x11149bba8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].identifier</p></td><td><p><map object at 0x11149bc50></p></td><td><p>STR_0D</p></td><td><p>ID of the channel {static}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight</p></td><td><p><map object at 0x11149bba8></p></td><td><p></p></td><td><p>Description of the line of sight of the channel, defined by two points when the beam is not reflected, a third point is added to define the reflected beam path</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.first_point</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Position of the first point</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.first_point.phi</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.first_point.r</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.first_point.z</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.second_point</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Position of the second point</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.second_point.phi</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.second_point.r</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.second_point.z</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.third_point</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Position of the third point</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.third_point.phi</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.third_point.r</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].line_of_sight.third_point.z</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].n_e_line</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Line integrated density, possibly obtained by a combination of multiple interferometry wavelengths</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].n_e_line.data</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_1D</p></td><td><p>Line integrated density, possibly obtained by a combination of multiple interferometry wavelengths {dynamic} [m^-2]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].n_e_line.time</p></td><td><p><map object at 0x11149bc50></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].name</p></td><td><p><map object at 0x11149bba8></p></td><td><p>STR_0D</p></td><td><p>Name of the channel {static}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].polarisation_initial</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_0D</p></td><td><p>Initial polarisation vector before entering the plasma {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].validity</p></td><td><p><map object at 0x11149bba8></p></td><td><p>INT_0D</p></td><td><p>Indicator of the validity of the channel for the whole acquisition period (0 means valid, negative values mean non-valid) {static}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].validity_timed</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Indicator of the validity of the channel as a function of time (0 means valid, negative values mean non-valid)</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].validity_timed.data</p></td><td><p><map object at 0x11149bba8></p></td><td><p>INT_1D</p></td><td><p>Indicator of the validity of the channel as a function of time (0 means valid, negative values mean non-valid) {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].validity_timed.time</p></td><td><p><map object at 0x11149bc50></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].wavelength_interferometry[:]</p></td><td><p><map object at 0x11149bba8></p></td><td><p></p></td><td><p>Set of wavelengths used for interferometry</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].wavelength_interferometry[:].n_e_line</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Line integrated density estimated from this wavelength</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].wavelength_interferometry[:].n_e_line.data</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_1D</p></td><td><p>Line integrated density estimated from this wavelength {dynamic} [m^-2]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].wavelength_interferometry[:].n_e_line.time</p></td><td><p><map object at 0x11149bc50></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].wavelength_interferometry[:].value</p></td><td><p><map object at 0x11149bba8></p></td><td><p>FLT_0D</p></td><td><p>Wavelength value {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.channel[:].wavelength_polarimetry</p></td><td><p><map object at 0x11149bc50></p></td><td><p>FLT_0D</p></td><td><p>Wavelength used for polarimetry {static} [m]</p></td></tr>
   <tr><td><p>interfero_polarimeter.code</p></td><td><p><map object at 0x11149bba8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>interfero_polarimeter.code.name</p></td><td><p><map object at 0x11149bc50></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>interfero_polarimeter.code.output_flag</p></td><td><p><map object at 0x11149bba8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>interfero_polarimeter.code.parameters</p></td><td><p><map object at 0x11149bc50></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>interfero_polarimeter.code.version</p></td><td><p><map object at 0x11149bba8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>interfero_polarimeter.ids_properties</p></td><td><p><map object at 0x11149bc50></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>interfero_polarimeter.ids_properties.comment</p></td><td><p><map object at 0x11149bba8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>interfero_polarimeter.ids_properties.homogeneous_time</p></td><td><p><map object at 0x11149bc50></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>interfero_polarimeter.time</p></td><td><p><map object at 0x11149bba8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

iron core
^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>iron_core.code</p></td><td><p><map object at 0x11149ff28></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>iron_core.code.name</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>iron_core.code.output_flag</p></td><td><p><map object at 0x11149ff28></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>iron_core.code.parameters</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>iron_core.code.version</p></td><td><p><map object at 0x11149ff28></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>iron_core.ids_properties</p></td><td><p><map object at 0x11149fcc0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>iron_core.ids_properties.comment</p></td><td><p><map object at 0x11149ff28></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>iron_core.ids_properties.homogeneous_time</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>iron_core.segment[:]</p></td><td><p><map object at 0x11149ff28></p></td><td><p></p></td><td><p>The iron core is describred as a set of segments</p></td></tr>
   <tr><td><p>iron_core.segment[:].b_field</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_1D</p></td><td><p>Array of magnetic field values, for each of which the relative permeability is given {static} [T]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry</p></td><td><p><map object at 0x11149ff28></p></td><td><p></p></td><td><p>Cross-sectional shape of the segment</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.geometry_type</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>INT_0D</p></td><td><p>Type used to describe the element shape (1:'outline', 2:'rectangle', 3:'oblique') {static}</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique</p></td><td><p><map object at 0x11149ff28></p></td><td><p></p></td><td><p>Trapezoidal description of the element</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique.alpha</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_0D</p></td><td><p>Inclination of first angle TBD {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique.beta</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_0D</p></td><td><p>Inclination of second angle TBD {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique.length</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_0D</p></td><td><p>Length {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique.r</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique.thickness</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_0D</p></td><td><p>Thickness {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.oblique.z</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.outline</p></td><td><p><map object at 0x11149fcc0></p></td><td><p></p></td><td><p>Irregular outline of the element</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.outline.r</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.outline.z</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.rectangle</p></td><td><p><map object at 0x11149ff28></p></td><td><p></p></td><td><p>Rectangular description of the element</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.rectangle.height</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_0D</p></td><td><p>Vertical full height {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.rectangle.r</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.rectangle.width</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_0D</p></td><td><p>Horizontal full width {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].geometry.rectangle.z</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>iron_core.segment[:].identifier</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>STR_0D</p></td><td><p>ID of the segment {static}</p></td></tr>
   <tr><td><p>iron_core.segment[:].magnetisation_r</p></td><td><p><map object at 0x11149ff28></p></td><td><p></p></td><td><p>Magnetisation M of the iron segment along the major radius axis, assumed to be constant inside a given iron segment. Reminder : H = 1/mu0 * B - mur * M;</p></td></tr>
   <tr><td><p>iron_core.segment[:].magnetisation_r.data</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_1D</p></td><td><p>Magnetisation M of the iron segment along the major radius axis, assumed to be constant inside a given iron segment. Reminder : H = 1/mu0 * B - mur * M; {dynamic} [T]</p></td></tr>
   <tr><td><p>iron_core.segment[:].magnetisation_r.time</p></td><td><p><map object at 0x11149ff28></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>iron_core.segment[:].magnetisation_z</p></td><td><p><map object at 0x11149fcc0></p></td><td><p></p></td><td><p>Magnetisation M of the iron segment along the vertical axis, assumed to be constant inside a given iron segment. Reminder : H = 1/mu0 * B - mur * M;</p></td></tr>
   <tr><td><p>iron_core.segment[:].magnetisation_z.data</p></td><td><p><map object at 0x11149ff28></p></td><td><p>FLT_1D</p></td><td><p>Magnetisation M of the iron segment along the vertical axis, assumed to be constant inside a given iron segment. Reminder : H = 1/mu0 * B - mur * M; {dynamic} [T]</p></td></tr>
   <tr><td><p>iron_core.segment[:].magnetisation_z.time</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>iron_core.segment[:].name</p></td><td><p><map object at 0x11149ff28></p></td><td><p>STR_0D</p></td><td><p>Name of the segment {static}</p></td></tr>
   <tr><td><p>iron_core.segment[:].permeability_relative</p></td><td><p><map object at 0x11149fcc0></p></td><td><p>FLT_1D</p></td><td><p>Relative permeability of the iron segment {static} [-]</p></td></tr>
   <tr><td><p>iron_core.time</p></td><td><p><map object at 0x11149ff28></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

magnetics
^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>magnetics.bpol_probe[:]</p></td><td><p><map object at 0x111457080></p></td><td><p></p></td><td><p>Poloidal field probes</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].area</p></td><td><p><map object at 0x111457080></p></td><td><p>FLT_0D</p></td><td><p>Area of each turn of the coil {static} [m^2]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].field</p></td><td><p><map object at 0x11145d080></p></td><td><p></p></td><td><p>Measured magnetic field</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].field.data</p></td><td><p><map object at 0x11145d048></p></td><td><p>FLT_1D</p></td><td><p>Measured magnetic field {dynamic} [T]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].field.time</p></td><td><p><map object at 0x11145d080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].identifier</p></td><td><p><map object at 0x11145d048></p></td><td><p>STR_0D</p></td><td><p>ID of the probe {static}</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].length</p></td><td><p><map object at 0x11145d080></p></td><td><p>FLT_0D</p></td><td><p>Length of the coil {static} [m]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].name</p></td><td><p><map object at 0x11145d048></p></td><td><p>STR_0D</p></td><td><p>Name of the probe {static}</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].poloidal_angle</p></td><td><p><map object at 0x11145d080></p></td><td><p>FLT_0D</p></td><td><p>Poloidal angle of the coil orientation {static} [rad]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].position</p></td><td><p><map object at 0x11145d048></p></td><td><p></p></td><td><p>R, Z, Phi position of the coil centre</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].position.phi</p></td><td><p><map object at 0x11145d080></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].position.r</p></td><td><p><map object at 0x11145d048></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].position.z</p></td><td><p><map object at 0x11145d080></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].toroidal_angle</p></td><td><p><map object at 0x11145d048></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle of coil orientation (0 if fully in the poloidal plane) {static} [rad]</p></td></tr>
   <tr><td><p>magnetics.bpol_probe[:].turns</p></td><td><p><map object at 0x11145d080></p></td><td><p>INT_0D</p></td><td><p>Turns in the coil, including sign {static}</p></td></tr>
   <tr><td><p>magnetics.code</p></td><td><p><map object at 0x11145d048></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>magnetics.code.name</p></td><td><p><map object at 0x11145d080></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>magnetics.code.output_flag</p></td><td><p><map object at 0x11145d048></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>magnetics.code.parameters</p></td><td><p><map object at 0x11145d080></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>magnetics.code.version</p></td><td><p><map object at 0x11145d048></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:]</p></td><td><p><map object at 0x111464080></p></td><td><p></p></td><td><p>Flux loops; partial flux loops can be described</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].flux</p></td><td><p><map object at 0x111464048></p></td><td><p></p></td><td><p>Measured flux</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].flux.data</p></td><td><p><map object at 0x111464080></p></td><td><p>FLT_1D</p></td><td><p>Measured flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].flux.time</p></td><td><p><map object at 0x111464048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].identifier</p></td><td><p><map object at 0x111464080></p></td><td><p>STR_0D</p></td><td><p>ID of the flux loop {static}</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].name</p></td><td><p><map object at 0x111464048></p></td><td><p>STR_0D</p></td><td><p>Name of the flux loop {static}</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].position[:]</p></td><td><p><map object at 0x111464080></p></td><td><p></p></td><td><p>List of (R,Z,phi) points defining the position of the loop (see data structure documentation FLUXLOOPposition.pdf) {static}</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].position[:].phi</p></td><td><p><map object at 0x111464048></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].position[:].r</p></td><td><p><map object at 0x111464080></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>magnetics.flux_loop[:].position[:].z</p></td><td><p><map object at 0x111464048></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>magnetics.ids_properties</p></td><td><p><map object at 0x111464080></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>magnetics.ids_properties.comment</p></td><td><p><map object at 0x111464048></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>magnetics.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111464080></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>magnetics.method[:]</p></td><td><p><map object at 0x111464048></p></td><td><p></p></td><td><p>A method generating processed quantities derived from the magnetic measurements</p></td></tr>
   <tr><td><p>magnetics.method[:].diamagnetic_flux</p></td><td><p><map object at 0x111464080></p></td><td><p></p></td><td><p>Diamagnetic flux</p></td></tr>
   <tr><td><p>magnetics.method[:].diamagnetic_flux.data</p></td><td><p><map object at 0x111464048></p></td><td><p>FLT_1D</p></td><td><p>Diamagnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>magnetics.method[:].diamagnetic_flux.time</p></td><td><p><map object at 0x111464080></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>magnetics.method[:].ip</p></td><td><p><map object at 0x111464048></p></td><td><p></p></td><td><p>Plasma current. Positive sign means anti-clockwise when viewed from above.</p></td></tr>
   <tr><td><p>magnetics.method[:].ip.data</p></td><td><p><map object at 0x111453080></p></td><td><p>FLT_1D</p></td><td><p>Plasma current. Positive sign means anti-clockwise when viewed from above. {dynamic} [A]</p></td></tr>
   <tr><td><p>magnetics.method[:].ip.time</p></td><td><p><map object at 0x111453048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>magnetics.method[:].name</p></td><td><p><map object at 0x111453080></p></td><td><p>STR_0D</p></td><td><p>Name of the data processing method {static}</p></td></tr>
   <tr><td><p>magnetics.time</p></td><td><p><map object at 0x111453048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

mhd linear
^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>mhd_linear.code</p></td><td><p><map object at 0x11147b2e8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>mhd_linear.code.name</p></td><td><p><map object at 0x11147b128></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>mhd_linear.code.output_flag</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>mhd_linear.code.parameters</p></td><td><p><map object at 0x11147b128></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>mhd_linear.code.version</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>mhd_linear.ids_properties</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>mhd_linear.ids_properties.comment</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>mhd_linear.ids_properties.homogeneous_time</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>mhd_linear.time</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:]</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Core plasma radial profiles for various time slices {dynamic}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid.rho_tor_norm</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid_plasma</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Radial grid within plasma (for quantities below toroidal_mode/plasma)</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid_plasma.area</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid_plasma.psi</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid_plasma.rho_tor</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid_plasma.rho_tor_norm</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].grid_plasma.volume</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].time</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:]</p></td><td><p><map object at 0x11147b2e8></p></td><td><p></p></td><td><p>Vector of toroidal modes</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].frequency</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_0D</p></td><td><p>Frequency of the mode {dynamic} [Hz]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].growthrate</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_0D</p></td><td><p>Linear growthrate of the mode {dynamic} [Hz]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].n_tor</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_0D</p></td><td><p>Toroidal mode number of the MHD mode {dynamic}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma</p></td><td><p><map object at 0x11147b2e8></p></td><td><p></p></td><td><p>MHD modes in the confined plasma</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.a_field_perturbed</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Pertubed vector potential for given toroidal mode number [T.m]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.a_field_perturbed.coordinate1</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>First coordinate (radial) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.a_field_perturbed.coordinate2</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Second coordinate (poloidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.a_field_perturbed.coordinate3</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Third coordinate (toroidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.b_field_perturbed</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Pertubed magnetic field for given toroidal mode number [T]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.b_field_perturbed.coordinate1</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>First coordinate (radial) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.b_field_perturbed.coordinate2</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Second coordinate (poloidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.b_field_perturbed.coordinate3</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Third coordinate (toroidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.displacement_parallel</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Parallel displacement of the modes {dynamic} [m]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.displacement_perpendicular</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Perpendicular displacement of the modes {dynamic} [m]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.grid.rho_tor_norm</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.mass_density_perturbed</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Perturbed mass density for given toroidal mode number {dynamic} [kg.m^-3]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.poloidal_grid</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_2D</p></td><td><p>Array of poloidal grid values for the various radial positions {dynamic} [mixed]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.poloidal_grid_type</p></td><td><p><map object at 0x11147b2e8></p></td><td><p></p></td><td><p>Selection of one of a set of grid types. 1: poloidal mode number; 2: poloidal angle</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.poloidal_grid_type.description</p></td><td><p><map object at 0x11147b128></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.poloidal_grid_type.index</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.poloidal_grid_type.name</p></td><td><p><map object at 0x11147b128></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.pressure_perturbed</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Perturbed pressure for given toroidal mode number {dynamic} [P]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.tau_alfven</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_1D</p></td><td><p>Alven time=R/vA=R0 sqrt(mi ni(rho))/B0 {dynamic} [s]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.tau_resistive</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_1D</p></td><td><p>Resistive time = mu_0 rho*rho/1.22/eta_neo {dynamic} [s]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.temperature_perturbed</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Perturbed temperature for given toroidal mode number {dynamic} [eV]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.velocity_perturbed</p></td><td><p><map object at 0x11147b2e8></p></td><td><p></p></td><td><p>Pertubed velocity for given toroidal mode number [m/s]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.velocity_perturbed.coordinate1</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>First coordinate (radial) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.velocity_perturbed.coordinate2</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Second coordinate (poloidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].plasma.velocity_perturbed.coordinate3</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Third coordinate (toroidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum</p></td><td><p><map object at 0x11147b2e8></p></td><td><p></p></td><td><p>MHD modes in the vaccum</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.a_field_perturbed</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Pertubed vector potential for given toroidal mode number [T.m]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.a_field_perturbed.coordinate1</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>First coordinate (radial) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.a_field_perturbed.coordinate2</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Second coordinate (poloidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.a_field_perturbed.coordinate3</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Third coordinate (toroidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.b_field_perturbed</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Pertubed magnetic field for given toroidal mode number [T]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.b_field_perturbed.coordinate1</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>First coordinate (radial) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.b_field_perturbed.coordinate2</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_2D</p></td><td><p>Second coordinate (poloidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.b_field_perturbed.coordinate3</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_2D</p></td><td><p>Third coordinate (toroidal) {dynamic} [as parent]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.grid.rho_tor_norm</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.poloidal_grid</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>INT_2D</p></td><td><p>Array of poloidal grid values for the various radial positions {dynamic} [mixed]</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.poloidal_grid_type</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Selection of one of a set of grid types. 1: poloidal mode number; 2: poloidal angle</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.poloidal_grid_type.description</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.poloidal_grid_type.index</p></td><td><p><map object at 0x11147b128></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>mhd_linear.time_slice[:].toroidal_mode[:].vaccuum.poloidal_grid_type.name</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>mhd_linear.vacuum_toroidal_field</p></td><td><p><map object at 0x11147b128></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>mhd_linear.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x11147b2e8></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>mhd_linear.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x11147b128></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

nbi
^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>nbi.code</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>nbi.code.name</p></td><td><p><map object at 0x11180e048></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>nbi.code.output_flag</p></td><td><p><map object at 0x11180e160></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>nbi.code.parameters</p></td><td><p><map object at 0x11180e048></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>nbi.code.version</p></td><td><p><map object at 0x11180e160></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>nbi.ids_properties</p></td><td><p><map object at 0x11180e048></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>nbi.ids_properties.comment</p></td><td><p><map object at 0x11180e160></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>nbi.ids_properties.homogeneous_time</p></td><td><p><map object at 0x11180e048></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>nbi.time</p></td><td><p><map object at 0x11180e160></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>nbi.unit[:]</p></td><td><p><map object at 0x11180e048></p></td><td><p></p></td><td><p>The NBI system is described as a set of units of which the power can be controlled individually.</p></td></tr>
   <tr><td><p>nbi.unit[:].beam_current_fraction</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Fractions of beam current distributed among the different energies, the first index corresponds to the fast neutrals energy (1:full, 2: half, 3: one third)</p></td></tr>
   <tr><td><p>nbi.unit[:].beam_current_fraction.data</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_2D</p></td><td><p>Fractions of beam current distributed among the different energies, the first index corresponds to the fast neutrals energy (1:full, 2: half, 3: one third) {dynamic} [-]</p></td></tr>
   <tr><td><p>nbi.unit[:].beam_current_fraction.time</p></td><td><p><map object at 0x11180e160></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>nbi.unit[:].beam_power_fraction</p></td><td><p><map object at 0x11180e048></p></td><td><p></p></td><td><p>Fractions of beam power distributed among the different energies, the first index corresponds to the fast neutrals energy (1:full, 2: half, 3: one third)</p></td></tr>
   <tr><td><p>nbi.unit[:].beam_power_fraction.data</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_2D</p></td><td><p>Fractions of beam power distributed among the different energies, the first index corresponds to the fast neutrals energy (1:full, 2: half, 3: one third) {dynamic} [-]</p></td></tr>
   <tr><td><p>nbi.unit[:].beam_power_fraction.time</p></td><td><p><map object at 0x11180e048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:]</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Group of beamlets with common vertical and horizontal focal point. If there are no common focal points, then select small groups of beamlets such that a focal point description of the beamlets group provides a fair description</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].angle</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Angle of inclination between a beamlet at the centre of the injection unit surface and the horiontal plane {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Detailed information on beamlets</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.angles</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_1D</p></td><td><p>Angle of inclination between a line at the centre of a beamlet and the horiontal plane, for each beamlet {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.positions</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Position of each beamlet</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.positions.R</p></td><td><p><map object at 0x11180e048></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.positions.phi</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.positions.r</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.positions.z</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.power_fractions</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_1D</p></td><td><p>Fraction of power of a unit injected by each beamlet {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].beamlets.tangency_radii</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_1D</p></td><td><p>Tangency radius (major radius where the central line of a beamlet is tangent to a circle around the torus), for each beamlet {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].direction</p></td><td><p><map object at 0x11180e048></p></td><td><p>INT_0D</p></td><td><p>Direction of the beam seen from above the torus: -1 = clockwise; 1 = counter clockwise {static}</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].divergence_component[:]</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Detailed information on beamlet divergence. Divergence is described as a superposition of Gaussian components with amplitide "particles_fraction" and vertical/horizontal divergence. Note that for positive ion NBI the divergence is well described by a single Gaussian</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].divergence_component[:].horizontal</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>The horiztonal beamlet divergence of the component. Here the divergence is defined for Gaussian beams as the angel where the beam density is reduced by a factor 1/e compared to the maximum density. For non-Gaussian beams the divergence is sqrt(2)*mean((x-mean(x))**2), where x is the angle and the mean should be performed over the beam density, P(x): mean(y)=int(y*P(x)*dx). {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].divergence_component[:].particles_fraction</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_0D</p></td><td><p>Fraction of injected particles in the component {static} [-]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].divergence_component[:].vertical</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>The vertical beamlet divergence of the component. Here the divergence is defined for Gaussian beams as the angel where the beam density is reduced by a factor 1/e compared to the maximum density. For non-Gaussian beams the divergence is sqrt(2)*mean((x-mean(x))**2), where x is the angle and the mean should be performed over the beam density, P(x): mean(y)=int(y*P(x)*dx). {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].focus</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Describes how the beamlet group is focused</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].focus.focal_length_horizontal</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Horizontal focal length along the beam line, i.e. the point along the centre of the beamlet-group where the beamlet-group has its minimum horizontal width {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].focus.focal_length_vertical</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_0D</p></td><td><p>Vertical focal length along the beam line, i.e. the point along the centre of the beamlet-group where the beamlet-group has its minimum vertical width {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].focus.width_min_horizontal</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>The horizontal width of the beamlets group at the at the horizontal focal point {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].focus.width_min_vertical</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_0D</p></td><td><p>The vertical width of the beamlets group at the at the vertical focal point {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].position</p></td><td><p><map object at 0x11180e048></p></td><td><p></p></td><td><p>R, Z, Phi position of the coil centre</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].position.phi</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].position.r</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].position.z</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].tangency_radius</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Tangency radius (major radius where the central line of a NBI unit is tangent to a circle around the torus) {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].width_horizontal</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_0D</p></td><td><p>Horizontal width of the beam group at the injection unit surface (or grounded grid) {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].beamlets_group[:].width_vertical</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Vertical width of the beam group at the injection unit surface (or grounded grid) {static} [m]</p></td></tr>
   <tr><td><p>nbi.unit[:].energy</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Full energy of the injected species (acceleration of a single atom)</p></td></tr>
   <tr><td><p>nbi.unit[:].energy.data</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_1D</p></td><td><p>Full energy of the injected species (acceleration of a single atom) {dynamic} [eV]</p></td></tr>
   <tr><td><p>nbi.unit[:].energy.time</p></td><td><p><map object at 0x11180e160></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>nbi.unit[:].identifier</p></td><td><p><map object at 0x11180e048></p></td><td><p>STR_0D</p></td><td><p>ID of the NBI unit {static}</p></td></tr>
   <tr><td><p>nbi.unit[:].name</p></td><td><p><map object at 0x11180e160></p></td><td><p>STR_0D</p></td><td><p>Name of the NBI unit {static}</p></td></tr>
   <tr><td><p>nbi.unit[:].power</p></td><td><p><map object at 0x11180e048></p></td><td><p></p></td><td><p>Power</p></td></tr>
   <tr><td><p>nbi.unit[:].power.data</p></td><td><p><map object at 0x11180e160></p></td><td><p>FLT_1D</p></td><td><p>Power {dynamic} [W]</p></td></tr>
   <tr><td><p>nbi.unit[:].power.time</p></td><td><p><map object at 0x11180e048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>nbi.unit[:].species</p></td><td><p><map object at 0x11180e160></p></td><td><p></p></td><td><p>Injected species {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>nbi.unit[:].species.a</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>nbi.unit[:].species.label</p></td><td><p><map object at 0x11180e160></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H, D, T, ...) {constant}</p></td></tr>
   <tr><td><p>nbi.unit[:].species.z_n</p></td><td><p><map object at 0x11180e048></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {constant} [Elementary Charge Unit]</p></td></tr>
   </table>
   </table><p></p>

ntms
^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>ntms.code</p></td><td><p><map object at 0x1118133c8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>ntms.code.name</p></td><td><p><map object at 0x111813208></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>ntms.code.output_flag</p></td><td><p><map object at 0x1118133c8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>ntms.code.parameters</p></td><td><p><map object at 0x111813208></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>ntms.code.version</p></td><td><p><map object at 0x1118133c8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>ntms.ids_properties</p></td><td><p><map object at 0x111813208></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>ntms.ids_properties.comment</p></td><td><p><map object at 0x1118133c8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>ntms.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111813208></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>ntms.time</p></td><td><p><map object at 0x1118133c8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:]</p></td><td><p><map object at 0x111813208></p></td><td><p></p></td><td><p>Description of neoclassical tearing modes for various time slices {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:]</p></td><td><p><map object at 0x1118133c8></p></td><td><p></p></td><td><p>List of the various NTM modes appearing during the simulation. If a mode appears several times, use several indices in this array of structure with the same m,n values.</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].calculation_method</p></td><td><p><map object at 0x111813208></p></td><td><p>STR_0D</p></td><td><p>Description of how the mode evolution is calculated {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].delta_diff</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_1D</p></td><td><p>Extra diffusion coefficient for the transport equations of Te, ne, Ti {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].deltaw[:]</p></td><td><p><map object at 0x111813208></p></td><td><p></p></td><td><p>deltaw contributions to the Rutherford equation</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].deltaw[:].name</p></td><td><p><map object at 0x1118133c8></p></td><td><p>STR_0D</p></td><td><p>Name of the contribution {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].deltaw[:].value</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Value of the contribution {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution</p></td><td><p><map object at 0x1118133c8></p></td><td><p></p></td><td><p>Detailed NTM evolution on a finer timebase than the time_slice array of structure</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.calculation_method</p></td><td><p><map object at 0x111813208></p></td><td><p>STR_0D</p></td><td><p>Description of how the mode evolution is calculated {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.delta_diff</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_2D</p></td><td><p>Extra diffusion coefficient for the transport equations of Te, ne, Ti {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.deltaw[:]</p></td><td><p><map object at 0x111813208></p></td><td><p></p></td><td><p>deltaw contributions to the Rutherford equation</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.deltaw[:].name</p></td><td><p><map object at 0x1118133c8></p></td><td><p>STR_0D</p></td><td><p>Name of the contribution {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.deltaw[:].value</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Value of the contribution {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.dfrequency_dt</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_1D</p></td><td><p>Time derivative of the frequency of the mode {dynamic} [s^-2]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.dphase_dt</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Time derivative of the phase of the mode {dynamic} [rad/s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.dwidth_dt</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_1D</p></td><td><p>Time derivative of the full width of the mode {dynamic} [m/s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.frequency</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Frequency of the mode {dynamic} [Hz]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.m_pol</p></td><td><p><map object at 0x1118133c8></p></td><td><p>INT_0D</p></td><td><p>Poloidal mode number {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.n_tor</p></td><td><p><map object at 0x111813208></p></td><td><p>INT_0D</p></td><td><p>Toroidal mode number {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.phase</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_1D</p></td><td><p>Phase of the mode {dynamic} [rad]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.rho_tor</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Flux coordinate on which the mode is centred {dynamic} [m]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.rho_tor_norm</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_1D</p></td><td><p>Normalised flux coordinate on which the mode is centred {dynamic} [-]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.time_detailed</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Time array used to describe the detailed evolution of the NTM {dynamic} [s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.torque[:]</p></td><td><p><map object at 0x1118133c8></p></td><td><p></p></td><td><p>torque contributions to the Rutherford equation</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.torque[:].name</p></td><td><p><map object at 0x111813208></p></td><td><p>STR_0D</p></td><td><p>Name of the contribution {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.torque[:].value</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_1D</p></td><td><p>Value of the contribution {dynamic} [kg.m^2.s^-2]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].detailed_evolution.width</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Full width of the mode {dynamic} [m]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].dfrequency_dt</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Time derivative of the frequency of the mode {dynamic} [s^-2]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].dphase_dt</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Time derivative of the phase of the mode {dynamic} [rad/s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].dwidth_dt</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Time derivative of the full width of the mode {dynamic} [m/s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].frequency</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Frequency of the mode {dynamic} [Hz]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].m_pol</p></td><td><p><map object at 0x1118133c8></p></td><td><p>INT_0D</p></td><td><p>Poloidal mode number {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].n_tor</p></td><td><p><map object at 0x111813208></p></td><td><p>INT_0D</p></td><td><p>Toroidal mode number {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset</p></td><td><p><map object at 0x1118133c8></p></td><td><p></p></td><td><p>NTM onset characteristics</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.cause</p></td><td><p><map object at 0x111813208></p></td><td><p>STR_0D</p></td><td><p>Cause of the mode onset {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.m_pol</p></td><td><p><map object at 0x1118133c8></p></td><td><p>INT_0D</p></td><td><p>Poloidal mode number {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.n_tor</p></td><td><p><map object at 0x111813208></p></td><td><p>INT_0D</p></td><td><p>Toroidal mode number {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.phase</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Phase of the mode at onset {dynamic} [rad]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.time_offset</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Offset time (when a mode disappears). If the mode reappears later in the simulation, use another index of the mode array of structure {dynamic} [s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.time_onset</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Onset time {dynamic} [s]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].onset.width</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Seed island full width at onset time {dynamic} [m]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].phase</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Phase of the mode {dynamic} [rad]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].rho_tor</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Flux coordinate on which the mode is centred {dynamic} [m]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].rho_tor_norm</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Normalised flux coordinate on which the mode is centred {dynamic} [-]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].torque[:]</p></td><td><p><map object at 0x111813208></p></td><td><p></p></td><td><p>torque contributions to the Rutherford equation</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].torque[:].name</p></td><td><p><map object at 0x1118133c8></p></td><td><p>STR_0D</p></td><td><p>Name of the contribution {dynamic}</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].torque[:].value</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_0D</p></td><td><p>Value of the contribution {dynamic} [kg.m^2.s^-2]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].mode[:].width</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Full width of the mode {dynamic} [m]</p></td></tr>
   <tr><td><p>ntms.time_slice[:].time</p></td><td><p><map object at 0x111813208></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>ntms.vacuum_toroidal_field</p></td><td><p><map object at 0x1118133c8></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition)</p></td></tr>
   <tr><td><p>ntms.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x111813208></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>ntms.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x1118133c8></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

pellets
^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>pellets.code</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>pellets.code.name</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>pellets.code.output_flag</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>pellets.code.parameters</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>pellets.code.version</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>pellets.ids_properties</p></td><td><p><map object at 0x10ebcf940></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>pellets.ids_properties.comment</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>pellets.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>pellets.time</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pellets.time_slice[:]</p></td><td><p><map object at 0x10ebcf940></p></td><td><p></p></td><td><p>Description of the pellets launched at various time slices. The time of this structure corresponds to the full ablation of the pellet inside the plasma. {dynamic}</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:]</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Set of pellets ablated in the plasma at a given time</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry</p></td><td><p><map object at 0x10ebcf940></p></td><td><p></p></td><td><p>Geometry of the pellet path in the vaccuum chamber</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.first_point</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Position of the first point</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.first_point.phi</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.first_point.r</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_0D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.first_point.z</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.second_point</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Position of the second point</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.second_point.phi</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.second_point.r</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_0D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_geometry.second_point.z</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>1-D profiles of plasma and pellet along the pellet path</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.ablated_particles</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Number of ablated particles (electrons) along the pellet path {dynamic} [-]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.ablation_rate</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_1D</p></td><td><p>Ablation rate (electrons) along the pellet path {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.distance</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Distance along the pellet path, with the origin taken at path_geometry/first_point. Used as the main coordinate for the path_profiles structure {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.n_e</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_1D</p></td><td><p>Electron density along the pellet path {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.position</p></td><td><p><map object at 0x10ebcf940></p></td><td><p></p></td><td><p>Position along the pellet path</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.position.phi</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.position.r</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.position.z</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.psi</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Poloidal flux along the pellet path {dynamic} [Wb]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.rho_tor_norm</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal coordinate along the pellet path {dynamic} [-]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.rho_tor_norm_drift</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Difference to due ExB drifts between the ablation and the final deposition locations, in terms of the normalised toroidal flux coordinate {dynamic} [-]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.t_e</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_1D</p></td><td><p>Electron temperature along the pellet path {dynamic} [eV]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].path_profiles.velocity</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Pellet velocity along the pellet path {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].shape</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Initial shape of a pellet at launch</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].shape.size</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_1D</p></td><td><p>Size of the pellet in the various dimensions, depending on the shape type. Spherical pellets: size(1) is the radius of the pellet. Cylindrical pellets: size(1) is the radius and size(2) is the height of the cylinder. Rectangular pellets: size(1) is the height, size(2) is the width and size(3) is the length {dynamic} [m]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].shape.type</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Identifier structure for the shape type: 1-spherical; 2-cylindrical; 3-rectangular {constant}</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].shape.type.description</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].shape.type.index</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].shape.type.name</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:]</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p></p></td><td><p>Set of species included in the pellet composition</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:].a</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:].density</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_0D</p></td><td><p>Material density of the species in the pellet {dynamic} [-]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:].fraction</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Fraction of the species atoms in the pellet {dynamic} [-]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:].label</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H, D, T, ...) {dynamic}</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:].sublimation_energy</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Sublimation energy per atom {dynamic} [eV]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].species[:].z_n</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].pellet[:].velocity_initial</p></td><td><p><map object at 0x10ebcf940></p></td><td><p>FLT_0D</p></td><td><p>Initial velocity of the pellet as it enters the vaccum chamber {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>pellets.time_slice[:].time</p></td><td><p><map object at 0x10ebcffd0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   </table>
   </table><p></p>

pf active
^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>pf_active.circuit[:]</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Circuits, connecting multiple PF coils to multiple supplies, defining the current and voltage relationships in the system</p></td></tr>
   <tr><td><p>pf_active.circuit[:].connections</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>INT_2D</p></td><td><p>Description of the supplies and coils connections (nodes) across the circuit. The matrix describing for each node (first dimension) which components are connected to it (1 if connected, 0 otherwise). There are 2 sides to each component, thus 2*ncomponents as the size of the second dimension, listing first all supplies, then all coils (in the same order as listed in SUPPLIES and COILS). An example can be found in the data structure documentation PFconnections.pdf (TBD) {static} [-]</p></td></tr>
   <tr><td><p>pf_active.circuit[:].current</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Current in the circuit</p></td></tr>
   <tr><td><p>pf_active.circuit[:].current.data</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Current in the circuit {dynamic} [V]</p></td></tr>
   <tr><td><p>pf_active.circuit[:].current.time</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.circuit[:].identifier</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>ID of the circuit {static}</p></td></tr>
   <tr><td><p>pf_active.circuit[:].name</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>Name of the circuit {static}</p></td></tr>
   <tr><td><p>pf_active.circuit[:].type</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Type of the circuit {static}</p></td></tr>
   <tr><td><p>pf_active.circuit[:].voltage</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Voltage on the circuit</p></td></tr>
   <tr><td><p>pf_active.circuit[:].voltage.data</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Voltage on the circuit {dynamic} [V]</p></td></tr>
   <tr><td><p>pf_active.circuit[:].voltage.time</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.code</p></td><td><p><map object at 0x10ebb6748></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>pf_active.code.name</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>pf_active.code.output_flag</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>pf_active.code.parameters</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>pf_active.code.version</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>pf_active.coil[:]</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Active PF coils</p></td></tr>
   <tr><td><p>pf_active.coil[:].current</p></td><td><p><map object at 0x10ebb6748></p></td><td><p></p></td><td><p>Current in the coil</p></td></tr>
   <tr><td><p>pf_active.coil[:].current.data</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_1D</p></td><td><p>Current in the coil {dynamic} [A]</p></td></tr>
   <tr><td><p>pf_active.coil[:].current.time</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:]</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Each PF coil is comprised of a number of cross-section elements described individually</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].area</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Cross-sectional areas of the element {static} [m^2]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Cross-sectional shape of the element</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.geometry_type</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>INT_0D</p></td><td><p>Type used to describe the element shape (1:'outline', 2:'rectangle', 3:'oblique') {static}</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Trapezoidal description of the element</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique.alpha</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Inclination of first angle TBD {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique.beta</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Inclination of second angle TBD {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique.length</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Length {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique.r</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique.thickness</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Thickness {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.oblique.z</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.outline</p></td><td><p><map object at 0x10ebb6748></p></td><td><p></p></td><td><p>Irregular outline of the element</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.outline.r</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.outline.z</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.rectangle</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Rectangular description of the element</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.rectangle.height</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Vertical full height {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.rectangle.r</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.rectangle.width</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Horizontal full width {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].geometry.rectangle.z</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].identifier</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Identifier of this element of this coil {static}</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].name</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>Name of this element of this coil {static}</p></td></tr>
   <tr><td><p>pf_active.coil[:].element[:].turns_with_sign</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>INT_0D</p></td><td><p>Number of effective turns in the element for calculating magnetic fields of the coil; includes the sign of the number of turns {static}</p></td></tr>
   <tr><td><p>pf_active.coil[:].energy_limit_max</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Maximum Energy to be dissipated in the coil {static} [J]</p></td></tr>
   <tr><td><p>pf_active.coil[:].identifier</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Alphanumeric identifier of coils used for convenience {static}</p></td></tr>
   <tr><td><p>pf_active.coil[:].name</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>Name of the coil {static}</p></td></tr>
   <tr><td><p>pf_active.coil[:].resistance</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Coil resistance {static} [Ohm]</p></td></tr>
   <tr><td><p>pf_active.coil[:].voltage</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Voltage on the coil terminals</p></td></tr>
   <tr><td><p>pf_active.coil[:].voltage.data</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Voltage on the coil terminals {dynamic} [V]</p></td></tr>
   <tr><td><p>pf_active.coil[:].voltage.time</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.ids_properties</p></td><td><p><map object at 0x10ebb6748></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>pf_active.ids_properties.comment</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>pf_active.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>pf_active.supply[:]</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>PF power supplies</p></td></tr>
   <tr><td><p>pf_active.supply[:].current</p></td><td><p><map object at 0x10ebb6748></p></td><td><p></p></td><td><p>Current at the supply output, defined positive if it flows from point 1 to point 2 of the component in the pfcircuit description</p></td></tr>
   <tr><td><p>pf_active.supply[:].current.data</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_1D</p></td><td><p>Current at the supply output, defined positive if it flows from point 1 to point 2 of the component in the pfcircuit description {dynamic} [A]</p></td></tr>
   <tr><td><p>pf_active.supply[:].current.time</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.supply[:].current_limit_max</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Maximum current in the supply {static} [A]</p></td></tr>
   <tr><td><p>pf_active.supply[:].current_limit_min</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Minimum current in the supply {static} [A]</p></td></tr>
   <tr><td><p>pf_active.supply[:].current_limiter_gain</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Gain to prevent overcurrent in a linear model of the supply {static} [V]</p></td></tr>
   <tr><td><p>pf_active.supply[:].delay</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Pure delay in the supply {static} [s]</p></td></tr>
   <tr><td><p>pf_active.supply[:].energy_limit_max</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Maximum energy to be dissipated in the supply during a pulse {static} [J]</p></td></tr>
   <tr><td><p>pf_active.supply[:].filter_denominator</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Coefficients of the denominator, in increasing order : b0 + b1*s + ... + bm*s^m; used for a linear supply description {static} [mixed]</p></td></tr>
   <tr><td><p>pf_active.supply[:].filter_numerator</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_1D</p></td><td><p>Coefficients of the numerator, in increasing order : a0 + a1*s + ... + an*s^n; used for a linear supply description {static} [mixed]</p></td></tr>
   <tr><td><p>pf_active.supply[:].identifier</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Identifier of the supply {static}</p></td></tr>
   <tr><td><p>pf_active.supply[:].name</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>STR_0D</p></td><td><p>Name of the PF supply {static}</p></td></tr>
   <tr><td><p>pf_active.supply[:].nonlinear_model</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Description of the nonlinear transfer function of the supply {static}</p></td></tr>
   <tr><td><p>pf_active.supply[:].resistance</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Power supply internal resistance {static} [Ohm]</p></td></tr>
   <tr><td><p>pf_active.supply[:].type</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>INT_0D</p></td><td><p>Type of the supply; TBD add free description of non-linear power supplies {static}</p></td></tr>
   <tr><td><p>pf_active.supply[:].voltage</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Voltage at the supply output</p></td></tr>
   <tr><td><p>pf_active.supply[:].voltage.data</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Voltage at the supply output {dynamic} [V]</p></td></tr>
   <tr><td><p>pf_active.supply[:].voltage.time</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.supply[:].voltage_limit_max</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Maximum voltage from the supply {static} [V]</p></td></tr>
   <tr><td><p>pf_active.supply[:].voltage_limit_min</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Minimum voltage from the supply {static} [V]</p></td></tr>
   <tr><td><p>pf_active.time</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:]</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Vertical forces on the axisymmetric PF coil system</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].combination</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Coils involved in the force combinations. Normally the vertical force would be the full set of coils, but in some cases, we want to have a difference in forces, such as a CS coil separation force. We therefore give each coil a force weight which we call the combination {static} [-]</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].force</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p></p></td><td><p>Force</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].force.data</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_1D</p></td><td><p>Force {dynamic} [N]</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].force.time</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].limit_max</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>FLT_0D</p></td><td><p>Vertical force combination limit {static} [N]</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].limit_min</p></td><td><p><map object at 0x10ebb6ac8></p></td><td><p>FLT_0D</p></td><td><p>Vertical force combination limit {static} [N]</p></td></tr>
   <tr><td><p>pf_active.vertical_force[:].name</p></td><td><p><map object at 0x10ebb6748></p></td><td><p>STR_0D</p></td><td><p>Name of the force combination {static}</p></td></tr>
   </table>
   </table><p></p>

pf passive
^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>pf_passive.code</p></td><td><p><map object at 0x111e3db38></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>pf_passive.code.name</p></td><td><p><map object at 0x111e3d668></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>pf_passive.code.output_flag</p></td><td><p><map object at 0x111e3db38></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>pf_passive.code.parameters</p></td><td><p><map object at 0x111e3d668></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>pf_passive.code.version</p></td><td><p><map object at 0x111e3db38></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>pf_passive.ids_properties</p></td><td><p><map object at 0x111e3d668></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>pf_passive.ids_properties.comment</p></td><td><p><map object at 0x111e3db38></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>pf_passive.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111e3d668></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>pf_passive.loop[:]</p></td><td><p><map object at 0x111e3db38></p></td><td><p></p></td><td><p>Passive axisymmetric conductor description in the form of non-connected loops; any connected loops are expressed as active coil circuits with no power supply attached.</p></td></tr>
   <tr><td><p>pf_passive.loop[:].area</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Surface area of the passive loop {static} [m^2]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].current</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_1D</p></td><td><p>Passive loop current {dynamic} [A]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry</p></td><td><p><map object at 0x111e3d668></p></td><td><p></p></td><td><p>Shape of the passive loop</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.geometry_type</p></td><td><p><map object at 0x111e3db38></p></td><td><p>INT_0D</p></td><td><p>Type used to describe the element shape (1:'outline', 2:'rectangle', 3:'oblique') {static}</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique</p></td><td><p><map object at 0x111e3d668></p></td><td><p></p></td><td><p>Trapezoidal description of the element</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique.alpha</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_0D</p></td><td><p>Inclination of first angle TBD {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique.beta</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Inclination of second angle TBD {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique.length</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_0D</p></td><td><p>Length {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique.r</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique.thickness</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_0D</p></td><td><p>Thickness {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.oblique.z</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.outline</p></td><td><p><map object at 0x111e3db38></p></td><td><p></p></td><td><p>Irregular outline of the element</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.outline.r</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.outline.z</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.rectangle</p></td><td><p><map object at 0x111e3d668></p></td><td><p></p></td><td><p>Rectangular description of the element</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.rectangle.height</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_0D</p></td><td><p>Vertical full height {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.rectangle.r</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre R {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.rectangle.width</p></td><td><p><map object at 0x111e3db38></p></td><td><p>FLT_0D</p></td><td><p>Horizontal full width {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].geometry.rectangle.z</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Geometric centre Z {static} [m]</p></td></tr>
   <tr><td><p>pf_passive.loop[:].name</p></td><td><p><map object at 0x111e3db38></p></td><td><p>STR_0D</p></td><td><p>Name of the loop {static}</p></td></tr>
   <tr><td><p>pf_passive.loop[:].resistance</p></td><td><p><map object at 0x111e3d668></p></td><td><p>FLT_0D</p></td><td><p>Passive loop resistance {static} [Ohm]</p></td></tr>
   <tr><td><p>pf_passive.time</p></td><td><p><map object at 0x111e3db38></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

sawteeth
^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>sawteeth.code</p></td><td><p><map object at 0x111e160f0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>sawteeth.code.name</p></td><td><p><map object at 0x111e16048></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>sawteeth.code.output_flag</p></td><td><p><map object at 0x111e160f0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>sawteeth.code.parameters</p></td><td><p><map object at 0x111e16048></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>sawteeth.code.version</p></td><td><p><map object at 0x111e160f0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>sawteeth.diagnostics</p></td><td><p><map object at 0x111e16048></p></td><td><p></p></td><td><p>Detailed information about the sawtooth characteristics</p></td></tr>
   <tr><td><p>sawteeth.diagnostics.magnetic_shear_q1</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Magnetic shear at surface q = 1, defined as rho_tor/q . dq/drho_tor {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.diagnostics.rho_tor_norm_inversion</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate at inversion radius {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.diagnostics.rho_tor_norm_mixing</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate at mixing radius {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.diagnostics.rho_tor_norm_q1</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate at surface q = 1 {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.ids_properties</p></td><td><p><map object at 0x111e160f0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>sawteeth.ids_properties.comment</p></td><td><p><map object at 0x111e16048></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>sawteeth.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111e160f0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:]</p></td><td><p><map object at 0x111e16048></p></td><td><p></p></td><td><p>Core profiles after sawtooth crash for various time slices {dynamic}</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].conductivity_parallel</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Parallel conductivity {dynamic} [ohm^-1.m^-1]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].e_field_parallel</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Parallel electric field = average(E.B) / B0, where Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [V.m^-1]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].grid</p></td><td><p><map object at 0x111e160f0></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].grid.area</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].grid.psi</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].grid.volume</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].j_bootstrap</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Bootstrap current density = average(J_Bootstrap.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].j_non_inductive</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Non-inductive (includes bootstrap) parallel current density = average(jni.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].j_ohmic</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Ohmic parallel current density = average(J_Ohmic.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].j_tor</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Total toroidal current density = average(J_Tor/R) / average(1/R) {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].j_total</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Total parallel current density = average(jtot.B) / B0, where B0 = Core_Profiles/Vacuum_Toroidal_Field/ B0 {dynamic} [A/m^2]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].magnetic_shear</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Magnetic shear, defined as rho_tor/q . dq/drho_tor {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].momentum_tor</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Total plasma toroidal momentum, summed over ion species and electrons {dynamic} [kg.m/s]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].n_e</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Electron density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].n_e_fast</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) electrons {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].n_i_total_over_n_e</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal) {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].p_e</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Electron pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].p_e_fast_parallel</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) electron parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].p_e_fast_perpendicular</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) electron perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].p_i_total</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Total ion pressure (sum over the ion species) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].p_i_total_fast_parallel</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) total ion (sum over the ion species) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].p_i_total_fast_perpendicular</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) total ion (sum over the ion species) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].phi</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].pressure_parallel</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Total parallel pressure (electrons+ions, thermal+non-thermal) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].pressure_perpendicular</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Total perpendicular pressure (electrons+ions, thermal+non-thermal) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].pressure_thermal</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Thermal pressure (electrons+ions) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].psi_star_post_crash</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Psi* = psi - phi, after the sawtooth crash {dynamic} [Wb]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].psi_star_pre_crash</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Psi* = psi - phi, just before the sawtooth crash {dynamic} [Wb]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].q</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Safety factor {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].t_e</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Electron temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].t_i_average</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Ion temperature (averaged on charge states and ion species) {dynamic} [eV]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].time</p></td><td><p><map object at 0x111e16048></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>sawteeth.profiles_1d[:].zeff</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_1D</p></td><td><p>Effective charge {dynamic} [-]</p></td></tr>
   <tr><td><p>sawteeth.time</p></td><td><p><map object at 0x111e16048></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>sawteeth.vacuum_toroidal_field</p></td><td><p><map object at 0x111e160f0></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition)</p></td></tr>
   <tr><td><p>sawteeth.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x111e16048></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>sawteeth.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x111e160f0></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

schedule
^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>schedule.code</p></td><td><p><map object at 0x111e16470></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>schedule.code.name</p></td><td><p><map object at 0x111e16358></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>schedule.code.output_flag</p></td><td><p><map object at 0x111e16470></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>schedule.code.parameters</p></td><td><p><map object at 0x111e16358></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>schedule.code.version</p></td><td><p><map object at 0x111e16470></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>schedule.ids_properties</p></td><td><p><map object at 0x111e16358></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>schedule.ids_properties.comment</p></td><td><p><map object at 0x111e16470></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>schedule.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111e16358></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>schedule.time</p></td><td><p><map object at 0x111e16470></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>schedule.waveform[:]</p></td><td><p><map object at 0x111e16358></p></td><td><p></p></td><td><p>Reference waveform to be used to drive feedback or feedforward controllers, or to control the controller switching itself</p></td></tr>
   <tr><td><p>schedule.waveform[:].name</p></td><td><p><map object at 0x111e16470></p></td><td><p>STR_0D</p></td><td><p>Reference name {constant}</p></td></tr>
   <tr><td><p>schedule.waveform[:].time</p></td><td><p><map object at 0x111e16358></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>schedule.waveform[:].value</p></td><td><p><map object at 0x111e16470></p></td><td><p></p></td><td><p>Values of the reference for the timebase</p></td></tr>
   <tr><td><p>schedule.waveform[:].value.data</p></td><td><p><map object at 0x111e16358></p></td><td><p>FLT_1D</p></td><td><p>Values of the reference for the timebase {dynamic} [mixed]</p></td></tr>
   <tr><td><p>schedule.waveform[:].value.time</p></td><td><p><map object at 0x111e16470></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

sdn
^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>sdn.ids_properties</p></td><td><p><map object at 0x111e16828></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>sdn.ids_properties.comment</p></td><td><p><map object at 0x111e167f0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>sdn.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111e16828></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>sdn.signal[:]</p></td><td><p><map object at 0x111e167f0></p></td><td><p></p></td><td><p>Dictionary of the signal names and definitions which can be allocated to the SDN</p></td></tr>
   <tr><td><p>sdn.signal[:].allocated_position</p></td><td><p><map object at 0x111e16828></p></td><td><p>INT_0D</p></td><td><p>Allocation of signal to a position in the SDN (1..N); this will be implementation specific {constant}</p></td></tr>
   <tr><td><p>sdn.signal[:].definition</p></td><td><p><map object at 0x111e167f0></p></td><td><p>STR_0D</p></td><td><p>Definition of the allocatable signal {static}</p></td></tr>
   <tr><td><p>sdn.signal[:].ip_normalise</p></td><td><p><map object at 0x111e16828></p></td><td><p>INT_0D</p></td><td><p>0 or 1 if this signal is multiplied by Ip to generate a control variable; this usage is specific to magnetic control, but could be extended to other control loops {static}</p></td></tr>
   <tr><td><p>sdn.signal[:].name</p></td><td><p><map object at 0x111e167f0></p></td><td><p>STR_0D</p></td><td><p>Name of the allocatable signal {static}</p></td></tr>
   <tr><td><p>sdn.signal[:].value</p></td><td><p><map object at 0x111e16828></p></td><td><p>FLT_1D</p></td><td><p>Signal value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>sdn.time</p></td><td><p><map object at 0x111e167f0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>sdn.topic_list[:]</p></td><td><p><map object at 0x111e16828></p></td><td><p></p></td><td><p>List of the groups of signals used at different reading and writing points; this is an implementation detail which might change</p></td></tr>
   <tr><td><p>sdn.topic_list[:].indices</p></td><td><p><map object at 0x111e167f0></p></td><td><p>INT_1D</p></td><td><p>Indices into the current SDN allocated list; it must be updated when the allocated list is changed {static}</p></td></tr>
   <tr><td><p>sdn.topic_list[:].names</p></td><td><p><map object at 0x111e16828></p></td><td><p>STR_1D</p></td><td><p>Names of the group of SDN signals {static}</p></td></tr>
   </table>
   </table><p></p>

spectrometer visible
^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>spectrometer_visible.channel[:]</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Set of channels (lines-of-sight)</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Quantities measured by the channel if connected to a filter spectrometer</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.calibrated_line_integrals</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Calibrated line gross areas integrals</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.calibrated_line_integrals.data</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_2D</p></td><td><p>Calibrated line gross areas integrals {dynamic} [m^-2.s^-1.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.calibrated_line_integrals.time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.calibrated_lines</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_1D</p></td><td><p>Central wavelength of the calibrated lines {constant} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.exposure_time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_0D</p></td><td><p>Exposure time {constant} [s]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.line_intensities</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Line gross integral intensities</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.line_intensities.data</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_2D</p></td><td><p>Line gross integral intensities {dynamic} [m^-2.s^-1.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.line_intensities.time</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.line_radiances</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Calibrated, background subtracted line integrals</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.line_radiances.data</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_2D</p></td><td><p>Calibrated, background subtracted line integrals {dynamic} [m^-2.s^-1.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.line_radiances.time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.processed_lines</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_1D</p></td><td><p>Central wavelength of the processed lines {constant} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.radiance_calibration</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_0D</p></td><td><p>Radiance calibration {static} [m^-2.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.radiance_calibration_date</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>Date of the radiance calibration (yyyy_mm_dd) {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].filter.raw_lines</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_1D</p></td><td><p>Central wavelength of the raw lines {constant} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Quantities measured by the channel if connected to a grating spectrometer</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.exposure_time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_0D</p></td><td><p>Exposure time {constant} [s]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.intensity_spectra</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Intensity spectra (not calibrated)</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.intensity_spectra.data</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_2D</p></td><td><p>Intensity spectra (not calibrated) {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.intensity_spectra.time</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.line_radiances</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Calibrated, background subtracted line integrals</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.line_radiances.data</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_2D</p></td><td><p>Calibrated, background subtracted line integrals {dynamic} [m^-2.s^-1.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.line_radiances.time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.processed_lines</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_1D</p></td><td><p>Central wavelength of the processed lines {constant} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.radiance_calibration</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_1D</p></td><td><p>Radiance calibration {static} [m^-2.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.radiance_calibration_date</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>Date of the radiance calibration (yyyy_mm_dd) {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.radiance_spectra</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Calibrated spectra</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.radiance_spectra.data</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_2D</p></td><td><p>Calibrated spectra {dynamic} [m^-2.s^-1.sr^-1]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.radiance_spectra.time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.wavelength_calibration_date</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>Date of the wavelength calibration (yyyy_mm_dd) {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].grating.wavelengths</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_1D</p></td><td><p>Measured wavelengths {constant} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Description of the line of sight of the channel, given by 2 points</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.first_point</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Position of the first point</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.first_point.phi</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.first_point.r</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.first_point.z</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.second_point</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Position of the second point</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.second_point.phi</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.second_point.r</p></td><td><p><map object at 0x111ff6588></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].line_of_sight.second_point.z</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].name</p></td><td><p><map object at 0x111ff6588></p></td><td><p>STR_0D</p></td><td><p>Name of the channel {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].spot_diameter</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>FLT_0D</p></td><td><p>Spot diameter {static} [m]</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].type</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Type of spectrometer the channel is connected to (index=1: grating, 2: filter) {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].type.description</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].type.index</p></td><td><p><map object at 0x111ff6588></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].type.name</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].validity</p></td><td><p><map object at 0x111ff6588></p></td><td><p>INT_0D</p></td><td><p>Indicator of the validity of the channel for the whole acquisition period (0 means valid, negative values mean non-valid) {static}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].validity_timed</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Indicator of the validity of the channel as a function of time (0 means valid, negative values mean non-valid)</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].validity_timed.data</p></td><td><p><map object at 0x111ff6588></p></td><td><p>INT_1D</p></td><td><p>Indicator of the validity of the channel as a function of time (0 means valid, negative values mean non-valid) {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.channel[:].validity_timed.time</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.code</p></td><td><p><map object at 0x111ff6588></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>spectrometer_visible.code.name</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>spectrometer_visible.code.output_flag</p></td><td><p><map object at 0x111ff6588></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>spectrometer_visible.code.parameters</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>spectrometer_visible.code.version</p></td><td><p><map object at 0x111ff6588></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>spectrometer_visible.ids_properties</p></td><td><p><map object at 0x111ff64e0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>spectrometer_visible.ids_properties.comment</p></td><td><p><map object at 0x111ff6588></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>spectrometer_visible.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111ff64e0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>spectrometer_visible.time</p></td><td><p><map object at 0x111ff6588></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

temporary
^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>temporary.code</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>temporary.code.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>temporary.code.output_flag</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>temporary.code.parameters</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>temporary.code.version</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float0d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 0D float [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_float0d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float0d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float0d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float0d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float0d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_0D</p></td><td><p>Value {constant} [-]</p></td></tr>
   <tr><td><p>temporary.constant_float1d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 1D float [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_float1d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float1d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float1d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float1d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float1d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_1D</p></td><td><p>Value {constant} [-]</p></td></tr>
   <tr><td><p>temporary.constant_float2d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 2D float</p></td></tr>
   <tr><td><p>temporary.constant_float2d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float2d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float2d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float2d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float2d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_2D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_float3d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 3D float</p></td></tr>
   <tr><td><p>temporary.constant_float3d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float3d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float3d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float3d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float3d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_3D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_float4d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 4D float</p></td></tr>
   <tr><td><p>temporary.constant_float4d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float4d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float4d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float4d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float4d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_4D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_float5d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 5D float</p></td></tr>
   <tr><td><p>temporary.constant_float5d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float5d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float5d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float5d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float5d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_5D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_float6d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 6D float</p></td></tr>
   <tr><td><p>temporary.constant_float6d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_float6d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float6d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float6d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_float6d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>FLT_6D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_integer0d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 0D integer</p></td></tr>
   <tr><td><p>temporary.constant_integer0d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_integer0d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer0d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer0d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer0d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Value {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer1d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 1D integer</p></td></tr>
   <tr><td><p>temporary.constant_integer1d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_integer1d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer1d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer1d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer1d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_1D</p></td><td><p>Value {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer2d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 2D integer</p></td></tr>
   <tr><td><p>temporary.constant_integer2d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_integer2d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer2d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer2d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer2d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_2D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_integer3d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 3D integer</p></td></tr>
   <tr><td><p>temporary.constant_integer3d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_integer3d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer3d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer3d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_integer3d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_3D</p></td><td><p>Value {constant} [mixed]</p></td></tr>
   <tr><td><p>temporary.constant_string0d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 0D string</p></td></tr>
   <tr><td><p>temporary.constant_string0d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_string0d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string0d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string0d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string0d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>STR_0D</p></td><td><p>Value {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string1d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Constant 1D string</p></td></tr>
   <tr><td><p>temporary.constant_string1d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.constant_string1d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string1d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string1d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.constant_string1d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>STR_1D</p></td><td><p>Value {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 1D float</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>FLT_1D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_float1d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 2D float</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>FLT_2D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_float2d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 3D float</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>FLT_3D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_float3d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 4D float</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>FLT_4D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_float4d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 5D float</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>FLT_5D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_float5d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 6D float</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>FLT_6D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_float6d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 1D integer</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>INT_1D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_integer1d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 2D integer</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>INT_2D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_integer2d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:]</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Dynamic 3D integer</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].identifier</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Description of the quantity using the standard identifier structure</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].identifier.description</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].identifier.index</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].identifier.name</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].value</p></td><td><p><map object at 0x111fe3e48></p></td><td><p></p></td><td><p>Value</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].value.data</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>INT_3D</p></td><td><p>Value {dynamic} [mixed]</p></td></tr>
   <tr><td><p>temporary.dynamic_integer3d[:].value.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>temporary.ids_properties</p></td><td><p><map object at 0x111fe3da0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>temporary.ids_properties.comment</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>temporary.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111fe3da0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>temporary.time</p></td><td><p><map object at 0x111fe3e48></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

tf
^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>tf.b_field_tor_vacuum_r</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Vacuum field times major radius in the toroidal field magnet. Positive sign means anti-clockwise when viewed from above</p></td></tr>
   <tr><td><p>tf.b_field_tor_vacuum_r.data</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Vacuum field times major radius in the toroidal field magnet. Positive sign means anti-clockwise when viewed from above {dynamic} [T.m]</p></td></tr>
   <tr><td><p>tf.b_field_tor_vacuum_r.time</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>tf.coil[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Set of coils around the tokamak {static}</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Set of conductors inside the coil. The structure can be used with size 1 for a simplified description as a single conductor. A conductor is composed of several elements, serially connected, i.e. transporting the same current. {static}</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].cross_section</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>The cross-section perpendicular to the TF conductor contour is described by a series of contour points, given by their relative position with respect to the start point of the first element. This cross-section is assumed constant for all elements.</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].cross_section.delta_phi</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angles (relative to a reference point) {static} [rad]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].cross_section.delta_r</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Major radii (relative to a reference point) {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].cross_section.delta_z</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Heights (relative to a reference point) {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].current</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Current in the conductor</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].current.data</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Current in the conductor {dynamic} [A]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].current.time</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Set of geometrical elements (line segments and/or arcs of a circle) describing the contour of the TF conductor centre</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.centres</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Position of the centre of the arc of a circle of every element (meaningful only if type/index = 2 or 3, fill with default/empty value otherwise)</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.centres.phi</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.centres.r</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.centres.z</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.end_points</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Position of the end point of every element. Meaningful only if type/index = 1 or 2, fill with default/empty value otherwise</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.end_points.phi</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.end_points.r</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.end_points.z</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.intermediate_points</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Position of an intermediate point along the arc of circle, for every element, providing the orientation of the element (must define with the corresponding start point an aperture angle strictly inferior to PI). Meaningful only if type/index = 2, fill with default/empty value otherwise</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.intermediate_points.phi</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.intermediate_points.r</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.intermediate_points.z</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.names</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>STR_1D</p></td><td><p>Name or description of every element {static}</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.start_points</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Position of the start point of every element</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.start_points.phi</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.start_points.r</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.start_points.z</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].elements.types</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_1D</p></td><td><p>Type of every element: 1: line segment, its ends are given by the start and end points; index = 2: arc of a circle; index = 3: full circle {static}</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].resistance</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_0D</p></td><td><p>conductor resistance {static} [Ohm]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].voltage</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Voltage on the conductor terminals</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].voltage.data</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Voltage on the conductor terminals {dynamic} [V]</p></td></tr>
   <tr><td><p>tf.coil[:].conductor[:].voltage.time</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>tf.coil[:].current</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Current in the coil</p></td></tr>
   <tr><td><p>tf.coil[:].current.data</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Current in the coil {dynamic} [A]</p></td></tr>
   <tr><td><p>tf.coil[:].current.time</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>tf.coil[:].resistance</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_0D</p></td><td><p>Coil resistance {static} [Ohm]</p></td></tr>
   <tr><td><p>tf.coil[:].turns</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_0D</p></td><td><p>Number of total turns in a toroidal field coil. May be a fraction when describing the coil connections. {static} [-]</p></td></tr>
   <tr><td><p>tf.coil[:].voltage</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Voltage on the coil terminals</p></td></tr>
   <tr><td><p>tf.coil[:].voltage.data</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>Voltage on the coil terminals {dynamic} [V]</p></td></tr>
   <tr><td><p>tf.coil[:].voltage.time</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>tf.coils_n</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Number of coils around the torus, in case is_periodic = 1 {static}</p></td></tr>
   <tr><td><p>tf.field_map[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Map of the vacuum field at various time slices, represented using the generic grid description {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_r[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>R component of the vacuum vector potential, given on various grid subsets [T.m]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_r[:].coefficients</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_r[:].grid_index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_r[:].grid_subset_index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_r[:].values</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_tor[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Toroidal component of the vacuum vector potential, given on various grid subsets [T.m]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_tor[:].coefficients</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_tor[:].grid_index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_tor[:].grid_subset_index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_tor[:].values</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_z[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Z component of the vacuum vector potential, given on various grid subsets [T.m]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_z[:].coefficients</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_z[:].grid_index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_z[:].grid_subset_index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].a_field_z[:].values</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_r[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>R component of the vacuum magnetic field, given on various grid subsets [T]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_r[:].coefficients</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_r[:].grid_index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_r[:].grid_subset_index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_r[:].values</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_tor[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Toroidal component of the vacuum magnetic field, given on various grid subsets [T]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_tor[:].coefficients</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_tor[:].grid_index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_tor[:].grid_subset_index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_tor[:].values</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_z[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Z component of the vacuum magnetic field, given on various grid subsets [T]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_z[:].coefficients</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_z[:].grid_index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_z[:].grid_subset_index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].b_field_z[:].values</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.identifier</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.identifier.description</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.identifier.index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.identifier.name</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x1114f09e8></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>tf.field_map[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>tf.field_map[:].time</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>tf.ids_properties</p></td><td><p><map object at 0x1114f0a20></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>tf.ids_properties.comment</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>tf.ids_properties.homogeneous_time</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>tf.is_periodic</p></td><td><p><map object at 0x1114f09e8></p></td><td><p>INT_0D</p></td><td><p>Flag indicating whether coils are described one by one in the coil() structure (flag=0) or whether the coil structure represents only coils having different characteristics (flag = 1, n_coils must be filled in that case). In the latter case, the coil() sequence is repeated periodically around the torus. {static}</p></td></tr>
   <tr><td><p>tf.time</p></td><td><p><map object at 0x1114f0a20></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

thomson scattering
^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>thomson_scattering.channel[:]</p></td><td><p><map object at 0x111505160></p></td><td><p></p></td><td><p>Set of channels (lines-of-sight)</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].identifier</p></td><td><p><map object at 0x1115050b8></p></td><td><p>STR_0D</p></td><td><p>ID of the channel {static}</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].n_e</p></td><td><p><map object at 0x111505160></p></td><td><p></p></td><td><p>Electron density</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].n_e.data</p></td><td><p><map object at 0x1115050b8></p></td><td><p>FLT_1D</p></td><td><p>Electron density {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].n_e.time</p></td><td><p><map object at 0x111505160></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].name</p></td><td><p><map object at 0x1115050b8></p></td><td><p>STR_0D</p></td><td><p>Name of the channel {static}</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].position</p></td><td><p><map object at 0x111505160></p></td><td><p></p></td><td><p>Position of the measurements (intersection between laser beam and line of sight)</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].position.phi</p></td><td><p><map object at 0x1115050b8></p></td><td><p>FLT_0D</p></td><td><p>Toroidal angle {static} [rad]</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].position.r</p></td><td><p><map object at 0x111505160></p></td><td><p>FLT_0D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].position.z</p></td><td><p><map object at 0x1115050b8></p></td><td><p>FLT_0D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].t_e</p></td><td><p><map object at 0x111505160></p></td><td><p></p></td><td><p>Electron temperature</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].t_e.data</p></td><td><p><map object at 0x1115050b8></p></td><td><p>FLT_1D</p></td><td><p>Electron temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>thomson_scattering.channel[:].t_e.time</p></td><td><p><map object at 0x111505160></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>thomson_scattering.code</p></td><td><p><map object at 0x1115050b8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>thomson_scattering.code.name</p></td><td><p><map object at 0x111505160></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>thomson_scattering.code.output_flag</p></td><td><p><map object at 0x1115050b8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>thomson_scattering.code.parameters</p></td><td><p><map object at 0x111505160></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>thomson_scattering.code.version</p></td><td><p><map object at 0x1115050b8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>thomson_scattering.ids_properties</p></td><td><p><map object at 0x111505160></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>thomson_scattering.ids_properties.comment</p></td><td><p><map object at 0x1115050b8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>thomson_scattering.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111505160></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>thomson_scattering.time</p></td><td><p><map object at 0x1115050b8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

transport solver numerics
^^^^^^^^^^^^^^^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary conditions of the radial transport equations for various time slices {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the current diffusion equation.</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: poloidal flux; 2: ip; 3: loop voltage; 4: undefined; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].current.value</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the electron energy equation (temperature if ID = 1) {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.energy.value</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the electron density equation (density if ID = 1) {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles.identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles.identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles.identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles.identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles.rho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].electrons.particles.value</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the ion total (sum over ion species) energy equation (temperature if ID = 1) {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].energy_ion_total.value</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].a</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the ion energy equation (temperature if ID = 1) {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].energy.value</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].label</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the ion density equation (density if ID = 1) {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].particles.value</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the charge state energy equation (temperature if ID = 1) {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy.identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy.identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy.identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy.identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy.rho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].energy.value</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].is_neutral</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Flag specifying if this state corresponds to a neutral (1) or not (0) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].neutral_type</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the charge state density equation (density if ID = 1) {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].particles.value</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].ion[:].z_n</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the total plasma toroidal momentum equation (summed over ion species and electrons) (momentum if ID = 1) {dynamic} [kg.m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor.identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. ID = 1: value of the field y; 2: radial derivative of the field (-dy/drho_tor); 3: scale length of the field y/(-dy/drho_tor); 4: flux; 5: generic boundary condition y expressed as a1y'+a2y=a3. 6: equation not solved; {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor.identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor.identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor.identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor.rho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Position, in normalised toroidal flux, at which the boundary condition is imposed. Outside this position, the value of the data are considered to be prescribed. {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].momentum_tor.value</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Value of the boundary condition. For ID = 1 to 4, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_1d[:].time</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary conditions of the transport equations, provided on the GGD, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the current diffusion equation, on various grid subsets</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].grid_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].grid_subset_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].current[:].values</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the electron energy equation (temperature if ID = 1), on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].grid_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].grid_subset_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.energy[:].values</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the electron density equation (density if ID = 1), on various grid subsets [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].grid_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].grid_subset_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].electrons.particles[:].values</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].a</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Boundary condition for the ion energy equation (temperature if ID = 1), on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].grid_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].grid_subset_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].identifier</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].identifier.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].identifier.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].identifier.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].energy[:].values</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].label</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Multiple states calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the ion density equation (density if ID = 1), on various grid subsets [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].grid_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].particles[:].values</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the charge state energy equation (temperature if ID = 1), on various grid subsets [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].grid_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].grid_subset_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].energy[:].values</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].is_neutral</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Flag specifying if this state corresponds to a neutral (1) or not (0) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].label</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].neutral_type</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Boundary condition for the charge state density equation (density if ID = 1), on various grid subsets [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].grid_index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].grid_subset_index</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].identifier</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Identifier of the boundary condition type. List of options TBD. {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].identifier.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].identifier.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].identifier.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].particles[:].values</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_2D</p></td><td><p>List of vector components, one list per element in the grid subset. First dimenstion: element index. Second dimension: vector component index (for ID = 1 to 3, only the first position in the vector is used. For ID = 5, all three positions are used, meaning respectively a1, a2, a3) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].z_ion</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].ion[:].z_n</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.boundary_conditions_ggd[:].time</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>transport_solver_numerics.code</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>transport_solver_numerics.code.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.code.output_flag</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.code.parameters</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.code.version</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Convergence details</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the transport equations, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].current</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Convergence details of the current diffusion equation</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].current.iterations_n</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].electrons</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].electrons.energy</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the electron energy equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].electrons.energy.iterations_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].electrons.particles</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the electron density equation {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].electrons.particles.iterations_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].energy_ion_total</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the ion total (sum over ion species) energy equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].energy_ion_total.iterations_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].a</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].energy</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Convergence details of the ion energy equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].energy.iterations_n</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].label</p></td><td><p><map object at 0x111e77a58></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].particles</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the ion density equation {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].particles.iterations_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the related to the different states transport equations</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].energy</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the charge state energy equation {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].energy.iterations_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].is_neutral</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Flag specifying if this state corresponds to a neutral (1) or not (0) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].label</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].neutral_type</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].particles</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Convergence details of the charge state density equation {dynamic} [m^-3.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].particles.iterations_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_0D</p></td><td><p>Number of iterations carried out in the convergence loop {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].z_ion</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].ion[:].z_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.equations[:].time</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.grid.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.time_step</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Internal time step used by the transport solver (assuming all transport equations are solved with the same time step)</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.time_step.data</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Internal time step used by the transport solver (assuming all transport equations are solved with the same time step) {dynamic} [s]</p></td></tr>
   <tr><td><p>transport_solver_numerics.convergence.time_step.time</p></td><td><p><map object at 0x111e77a58></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Radial profiles derivatives for various time slices {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d2_drho_tor_norm2</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Second derivatives of total ion quantities with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d2_drho_tor_norm2.n_i_total_over_n_e</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal) {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d2_drho_tor_norm2.pressure_ion_total</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Total thermal ion pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d2psi_drho_tor2</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Second derivative of the poloidal flux profile with respect to the toroidal flux coordinate {dynamic} [Wb.m^-2]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_drho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Derivatives of total ion quantities with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_drho_tor_norm.n_i_total_over_n_e</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal) {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_drho_tor_norm.pressure_ion_total</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Total thermal ion pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_dt</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Derivatives of total ion quantities with respect to time</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_dt.n_i_total_over_n_e</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Ratio of total ion density (sum over species and charge states) over electron density. (thermal+non-thermal) {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_dt.pressure_ion_total</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Total thermal ion pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].d_dvolume_drho_tor_dt</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Partial derivative with respect to time of the derivative of the volume with respect to the toroidal flux coordinate {dynamic} [m^2.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].dpsi_drho_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Derivative of the poloidal flux profile with respect to the toroidal flux coordinate {dynamic} [Wb.m^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].dpsi_dt</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Derivative of the poloidal flux profile with respect to time {dynamic} [V]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].dpsi_dt_cphi</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Derivative of the poloidal flux profile with respect to time, at constant toroidal flux {dynamic} [V]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].dpsi_dt_crho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Derivative of the poloidal flux profile with respect to time, at constant normalised toroidal flux coordinate {dynamic} [V]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].drho_tor_dt</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Partial derivative of the toroidal flux coordinate profile with respect to time {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Second derivatives with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.density</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.density_fast</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.pressure</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.pressure_fast_parallel</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.temperature</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.velocity_pol</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d2_drho_tor_norm2.velocity_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Derivatives with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.density</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.density_fast</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.pressure</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.pressure_fast_parallel</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.temperature</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.velocity_pol</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_drho_tor_norm.velocity_tor</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Derivatives with respect to time</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.density</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.density_fast</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.pressure</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.pressure_fast_parallel</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.temperature</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.velocity_pol</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].electrons.d_dt.velocity_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].grid</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].grid.area</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].grid.psi</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].grid.rho_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].grid.volume</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:]</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].a</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Second derivatives with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.density</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.density_fast</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.pressure</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.pressure_fast_parallel</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.temperature</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.velocity_pol</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity (average over charge states when multiple charge states are considered) {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d2_drho_tor_norm2.velocity_tor</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity (average over charge states when multiple charge states are considered) {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Derivatives with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.density</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.density_fast</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.pressure</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.pressure_fast_parallel</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.temperature</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.velocity_pol</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity (average over charge states when multiple charge states are considered) {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_drho_tor_norm.velocity_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity (average over charge states when multiple charge states are considered) {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Derivatives with respect to time</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.density</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.density_fast</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles (sum over charge states when multiple charge states are considered) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.pressure</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.pressure_fast_parallel</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure (average over charge states when multiple charge states are considered) {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.temperature</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Temperature (average over charge states when multiple charge states are considered) {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.velocity_pol</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity (average over charge states when multiple charge states are considered) {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].d_dt.velocity_tor</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity (average over charge states when multiple charge states are considered) {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].label</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>String identifying ion (e.g. H+, D+, T+, He+2, C+, ...) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Quantities related to the different states of the species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Second derivatives with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.density</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.density_fast</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.pressure</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.pressure_fast_parallel</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.temperature</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.velocity_pol</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d2_drho_tor_norm2.velocity_tor</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p></p></td><td><p>Derivatives with respect to the normalised toroidal flux</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.density</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.density_fast</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.pressure</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.pressure_fast_parallel</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.temperature</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.velocity_pol</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_drho_tor_norm.velocity_tor</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Derivatives with respect to time</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.density</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Density (thermal+non-thermal) {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.density_fast</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Density of fast (non-thermal) particles {dynamic} [m^-3]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.pressure</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.pressure_fast_parallel</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) parallel pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.pressure_fast_perpendicular</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Fast (non-thermal) perpendicular pressure {dynamic} [Pa]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.temperature</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Temperature {dynamic} [eV]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.velocity_pol</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Poloidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].d_dt.velocity_tor</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_1D</p></td><td><p>Toroidal velocity {dynamic} [m.s^-1]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].is_neutral</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Flag specifying if this state corresponds to a neutral (1) or not (0) {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].neutral_type</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Neutral type (if the considered state is a neutral), in terms of energy. ID =1: cold; 2: thermal; 3: fast; 4: NBI</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].neutral_type.description</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].neutral_type.index</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].neutral_type.name</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].ion[:].z_n</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>transport_solver_numerics.derivatives_1d[:].time</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>transport_solver_numerics.grid.rho_tor_norm</p></td><td><p><map object at 0x111e77c18></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>transport_solver_numerics.ids_properties</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>transport_solver_numerics.ids_properties.comment</p></td><td><p><map object at 0x111e77c18></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111e77a58></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>transport_solver_numerics.time</p></td><td><p><map object at 0x111e77c18></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>transport_solver_numerics.vacuum_toroidal_field</p></td><td><p><map object at 0x111e77a58></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition and in the normalization of current densities)</p></td></tr>
   <tr><td><p>transport_solver_numerics.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x111e77c18></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>transport_solver_numerics.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x111e77a58></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>

wall
^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>wall.code</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>wall.code.name</p></td><td><p><map object at 0x111f7c710></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>wall.code.output_flag</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>wall.code.parameters</p></td><td><p><map object at 0x111f7c710></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>wall.code.version</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>wall.description_2d[:]</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Set of 2D wall descriptions, for each type of possible physics or engineering configurations necessary (gas tight vs wall with ports and holes, coarse vs fine representation, single contour limiter, disjoint gapped plasma facing components, ...).</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Description of the immobile limiting surface(s) or plasma facing components for defining the Last Closed Flux Surface.</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.type</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Type of the limiter description. index = 0 for the official single contour limiter and 1 for the official disjoint PFC structure like first wall. Additional representations needed on a code-by-code basis follow same incremental pair tagging starting on flag=2</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.type.description</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.type.index</p></td><td><p><map object at 0x111f7c710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.type.name</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:]</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Set of limiter units</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:].closed</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>INT_0D</p></td><td><p>Flag identifying whether the contour is closed (1) or open (0) {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:].name</p></td><td><p><map object at 0x111f7c710></p></td><td><p>STR_0D</p></td><td><p>Name of the limiter unit {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:].outline</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Irregular outline of the limiting surface. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:].outline.r</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:].outline.z</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].limiter.unit[:].resistivity</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_0D</p></td><td><p>Resistivity of the limiter unit {static} [ohm.m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].type</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Type of the description. index = 0 for equilibrium codes (single closed limiter and vessel); 1 for gas-tight walls (disjoint PFCs with inner vessel as last limiter_unit; no vessel structure); 2 for free boundary codes (disjoint PFCs and vessel)</p></td></tr>
   <tr><td><p>wall.description_2d[:].type.description</p></td><td><p><map object at 0x111f7c710></p></td><td><p>STR_0D</p></td><td><p>Verbose description {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].type.index</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].type.name</p></td><td><p><map object at 0x111f7c710></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Mechanical structure of the vacuum vessel. The vessel is described as a set of nested layers with given physics properties; Two representations are admitted for each vessel unit : annular (two contours) or block elements.</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.type</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Type of the vessel description. index = 0 for the official single/multiple annular vessel and 1 for the official block element representation for each vessel unit. Additional representations needed on a code-by-code basis follow same incremental pair tagging starting on flag=2</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.type.description</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Verbose description {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.type.index</p></td><td><p><map object at 0x111f7c710></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.type.name</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:]</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Set of vessel units</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Annular representation of a vessel layer by two contours, inner and outer</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.outline_inner</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Inner vessel outline. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.outline_inner.r</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.outline_inner.z</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.outline_outer</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Outer vessel outline. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.outline_outer.r</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.outline_outer.z</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].annular.resistivity</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_0D</p></td><td><p>Resistivity of the vessel unit {static} [ohm.m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:]</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Set of block elements</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].j_tor</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Toroidal current induced in this block element</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].j_tor.data</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Toroidal current induced in this block element {dynamic} [A]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].j_tor.time</p></td><td><p><map object at 0x111f7c710></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].name</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Name of the block element {static}</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].outline</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Outline of the block element. Do NOT repeat the first point for closed contours</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].outline.r</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Major radius {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].outline.z</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Height {static} [m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].resistance</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_0D</p></td><td><p>Resistivity of the block element {static} [Ohm]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].element[:].resistivity</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_0D</p></td><td><p>Resistivity of the block element {static} [ohm.m]</p></td></tr>
   <tr><td><p>wall.description_2d[:].vessel.unit[:].name</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Name of the vessel unit {static}</p></td></tr>
   <tr><td><p>wall.global_quantities</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Simple 0D description of plasma-wall interaction</p></td></tr>
   <tr><td><p>wall.global_quantities.electrons</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>Quantities related to electrons</p></td></tr>
   <tr><td><p>wall.global_quantities.electrons.gas_puff</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Gas puff rate (in equivalent electrons) {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.electrons.particle_flux_from_plasma</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Particle flux from the plasma (in equivalent electrons) {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.electrons.particle_flux_from_wall</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_2D</p></td><td><p>Particle flux from the wall corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast), in equivalent electrons {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.electrons.pumping_speed</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Pumped particle flux (in equivalent electrons) {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:]</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Quantities related to the various neutral species</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].element[:]</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].element[:].a</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {constant} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].element[:].multiplicity</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].element[:].z_n</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {constant} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].gas_puff</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Gas puff rate for that species {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].label</p></td><td><p><map object at 0x111f7c710></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H, D, CD4, ...) {constant}</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].particle_flux_from_plasma</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Particle flux from the plasma for that species {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].particle_flux_from_wall</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_2D</p></td><td><p>Particle flux from the wall corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast) {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].pumping_speed</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Pumped particle flux for that species {dynamic} [s^-1]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].recycling_energy_coefficient</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_2D</p></td><td><p>Energy recycling coefficient corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast) {dynamic} [-]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].recycling_particles_coefficient</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_2D</p></td><td><p>Particle recycling coefficient corresponding to the conversion into various neutral types (first dimension: 1: cold; 2: thermal; 3: fast) {dynamic} [-]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].sputtering_chemical_coefficient</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_2D</p></td><td><p>Effective coefficient of chemical sputtering for various neutral types (first dimension: 1: cold; 2: thermal; 3: fast) {dynamic} [-]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].sputtering_physical_coefficient</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_2D</p></td><td><p>Effective coefficient of physical sputtering for various neutral types (first dimension: 1: cold; 2: thermal; 3: fast) {dynamic} [-]</p></td></tr>
   <tr><td><p>wall.global_quantities.neutral[:].wall_inventory</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Wall inventory, i.e. cumulated exchange of neutral species between plasma and wall from t = 0, positive if a species has gone to the wall, for that species {dynamic} [-]</p></td></tr>
   <tr><td><p>wall.global_quantities.power_from_plasma</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Power flowing from the plasma to the wall {dynamic} [W]</p></td></tr>
   <tr><td><p>wall.global_quantities.power_to_cooling</p></td><td><p><map object at 0x111f7c710></p></td><td><p>FLT_1D</p></td><td><p>Power to cooling systems {dynamic} [W]</p></td></tr>
   <tr><td><p>wall.global_quantities.temperature</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>FLT_1D</p></td><td><p>Wall temperature {dynamic} [K]</p></td></tr>
   <tr><td><p>wall.ids_properties</p></td><td><p><map object at 0x111f7c710></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>wall.ids_properties.comment</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>wall.ids_properties.homogeneous_time</p></td><td><p><map object at 0x111f7c710></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>wall.time</p></td><td><p><map object at 0x111f7c7b8></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   </table>
   </table><p></p>

waves
^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>waves.code</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>waves.code.name</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>waves.code.output_flag</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>waves.code.parameters</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>waves.code.version</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Wave description for each frequency</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Beam tracing calculations, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Set of rays/beams describing the wave propagation</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Electric field polarization of the ray/beam along its path</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.minus</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Right hand polarised electric field component [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.minus.imaginary</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Imaginary part {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.minus.real</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Real part {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.parallel</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Parallel to magnetic field polarised electric field component [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.parallel.imaginary</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Imaginary part {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.parallel.real</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Real part {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.plus</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Left hand polarised electric field component [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.plus.imaginary</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Imaginary part {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].e_field.plus.real</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Real part {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].electrons</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].electrons.power</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Power absorbed along the beam by the species {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].element[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].element[:].a</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].label</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].power</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Power absorbed along the beam by the species {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].power</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Power absorbed along the beam by the species {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].ion[:].z_ion</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].length</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Ray/beam curvilinear length {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].position</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Position of the ray/beam along its path</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].position.phi</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].position.psi</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].position.r</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].position.theta</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].position.z</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].power_flow_norm</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Normalised power flow</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].power_flow_norm.parallel</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Normalized power flow in the direction parallel to the magnetic field {dynamic} [-]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].power_flow_norm.perpendicular</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Normalized power flow in the direction perpendicular to the magnetic field {dynamic} [-]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].power_initial</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Initial power in the ray/beam {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Wave vector of the ray/beam along its path</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.k_r</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Wave vector component in the major radius direction {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.k_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave vector component in the toroidal direction {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.k_z</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Wave vector component in the vertical direction {dynamic} [m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.n_parallel</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Parallel refractive index {dynamic} [-]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.n_perpendicular</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Perpendicular refractive index {dynamic} [-]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_1D</p></td><td><p>Toroidal wave number, contains a single value if varying_ntor = 1 to avoid useless repetition constant values {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].beam[:].wave_vector.varying_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Flag telling whether n_tor is constant along the ray path (0) or varying (1) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].beam_tracing[:].time</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Solution by a full wave code, given on a generic grid description, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Components of the wave magnetic field</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.bi_normal[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Magnitude of perpendicular (to the static magnetic field) wave magnetic field tangent to a flux surface, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.bi_normal[:].coefficients</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.bi_normal[:].grid_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.bi_normal[:].grid_subset_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.bi_normal[:].values</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.normal[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Magnitude of wave magnetic field normal to a flux surface, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.normal[:].coefficients</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.normal[:].grid_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.normal[:].grid_subset_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.normal[:].values</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.parallel[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Parallel (to the static magnetic field) component of the wave magnetic field, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.parallel[:].coefficients</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.parallel[:].grid_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.parallel[:].grid_subset_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].b_field.parallel[:].values</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Components of the wave electric field</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.bi_normal[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Magnitude of perpendicular (to the static magnetic field) wave electric field tangent to a flux surface, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.bi_normal[:].coefficients</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.bi_normal[:].grid_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.bi_normal[:].grid_subset_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.bi_normal[:].values</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.minus[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Right hand circularly polarised component of the perpendicular (to the static magnetic field) electric field, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.minus[:].coefficients</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.minus[:].grid_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.minus[:].grid_subset_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.minus[:].values</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.normal[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Magnitude of wave electric field normal to a flux surface, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.normal[:].coefficients</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.normal[:].grid_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.normal[:].grid_subset_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.normal[:].values</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.parallel[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Parallel (to the static magnetic field) component of electric field, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.parallel[:].coefficients</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.parallel[:].grid_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.parallel[:].grid_subset_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.parallel[:].values</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.plus[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Left hand circularly polarised component of the perpendicular (to the static magnetic field) electric field, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.plus[:].coefficients</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.plus[:].grid_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.plus[:].grid_subset_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].e_field.plus[:].values</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Grid description</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Grid subsets</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].base[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Set of bases for the grid subset. For each base, the structure describes the projection of the base vectors on the canonical frame of the grid.</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].base[:].jacobian</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].base[:].tensor_contravariant</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].base[:].tensor_covariant</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].dimension</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Space dimension of the grid subset elements. This must be equal to the sum of the dimensions of the individual objects forming the element. {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].element[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Set of elements defining the grid subset. An element is defined by a combination of objects from potentially all spaces</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].element[:].object[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Set of objects defining the element</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].element[:].object[:].dimension</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Dimension of the object {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].element[:].object[:].index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Object index {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].element[:].object[:].space</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the space from which that object is taken {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].identifier</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Grid subset identifier</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].identifier.description</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].identifier.index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].identifier.name</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].metric</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Metric of the canonical frame onto Cartesian coordinates</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].metric.jacobian</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Metric Jacobian {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].metric.tensor_contravariant</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Contravariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.grid_subset[:].metric.tensor_covariant</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_3D</p></td><td><p>Covariant metric tensor, given on each element of the subgrid (first dimension) {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.identifier</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Grid identifier</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.identifier.description</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.identifier.index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.identifier.name</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Set of grid spaces</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].coordinates_type</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_1D</p></td><td><p>Type of coordinates describing the physical space, for every coordinate of the space. The size of this node therfore defines the dimension of the space. The meaning of these predefined integer constants can be found in the documentation of the grid service library {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].geometry_type</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Type of space geometry (0: standard, 1:Fourier)</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].geometry_type.description</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].geometry_type.index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].geometry_type.name</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Definition of the space objects for every dimension (from one to the dimension of the highest-dimensional objects). The index correspond to 1=nodes, 2=edges, 3=faces, 4=cells/volumes, .... For every index, a collection of objects of that dimension is described.</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Set of objects for a given dimension</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Set of (n-1)-dimensional objects defining the boundary of this n-dimensional object</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of this (n-1)-dimensional boundary object {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:].boundary[:].neighbours</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_1D</p></td><td><p>List of indices of the n-dimensional objects adjacent to the given n-dimensional object. An object can possibly have multiple neighbours on a boundary {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:].geometry</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Geometry data associated with the object. Its dimension depends on the type of object, geometry and coordinate considered. {dynamic} [mixed]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:].measure</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Measure of the space object, i.e. physical size (length for 1d, area for 2d, volume for 3d objects,...) {dynamic} [m^dimension]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].grid.space[:].objects_per_dimension[:].object[:].nodes</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_1D</p></td><td><p>List of nodes forming this object (indices to objects_per_dimension(1)%object(:) in Fortran notation) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].k_perpendicular[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Perpendicular wave vector, given on various grid subsets [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].k_perpendicular[:].coefficients</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Interpolation coefficients, to be used for a high precision evaluation of the physical quantity with finite elements, provided per element in the grid subset (first dimension). {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].k_perpendicular[:].grid_index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid used to represent this quantity {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].k_perpendicular[:].grid_subset_index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Index of the grid subset the data is provided on {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].k_perpendicular[:].values</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>One scalar value is provided per element in the grid subset. {dynamic} [as_parent]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].full_wave[:].time</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Global quantities for various time slices {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].current_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Wave driven toroidal current from a stand alone calculation (not consistent with other sources) {dynamic} [A]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].current_tor_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave driven toroidal current from a stand alone calculation (not consistent with other sources) per toroidal mode number {dynamic} [A]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].electrons</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].electrons.distribution_assumption</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Assumption on the distribution function used by the wave solver to calculate the power deposition on this species: 0 = Maxwellian (linear absorption); 1 = quasi-linear (F given by a distributions IDS). {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].electrons.power_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Wave power absorbed by the fast particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].electrons.power_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave power absorbed by the fast particle population per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].electrons.power_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Wave power absorbed by the thermal particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].electrons.power_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave power absorbed by the thermal particle population per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].frequency</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Wave frequency {dynamic} [Hz]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].distribution_assumption</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Assumption on the distribution function used by the wave solver to calculate the power deposition on this species: 0 = Maxwellian (linear absorption); 1 = quasi-linear (F given by a distributions IDS). {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].element[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].element[:].a</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].power_fast</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Wave power absorbed by the fast particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].power_fast_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Wave power absorbed by the fast particle population per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].power_thermal</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Wave power absorbed by the thermal particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].power_thermal_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Wave power absorbed by the thermal particle population per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].power_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Wave power absorbed by the fast particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].power_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave power absorbed by the fast particle population per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].power_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Wave power absorbed by the thermal particle population {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].power_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave power absorbed by the thermal particle population per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].ion[:].z_ion</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_1D</p></td><td><p>Toroidal mode numbers {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].power</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Total absorbed wave power {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].power_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].global_quantities[:].time</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Identifier of the coherent wave, in terms of the type and name of the antenna driving the wave and an index separating waves driven by the same antenna.</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier.antenna_name</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Name of the antenna that launches this wave. Corresponds to the name specified in antennas/ec(i)/name, or antennas/ic(i)/name or antennas/lh(i)/name (depends of antenna/wave type) in the ANTENNAS IDS. {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier.index_in_antenna</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Index of the wave (starts at 1), separating different waves generated from a single antenna. {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier.type</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Wave/antenna type. index=1 for name=EC; index=2 for name=LH; index=3 for name=IC</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier.type.description</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier.type.index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].identifier.type.name</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Source radial profiles (flux surface averaged quantities) for various time slices {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].current_parallel_density</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged wave driven parallel current density = average(j.B) / B0, where B0 = vacuum_toroidal_field/b0. {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].current_parallel_density_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged wave driven parallel current density, per toroidal mode number {dynamic} [A.m^-2]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].current_tor_inside</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Wave driven toroidal current from a stand alone calculation (not consistent with other sources), inside a flux surface {dynamic} [A]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].current_tor_inside_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Wave driven toroidal current from a stand alone calculation (not consistent with other sources), inside a flux surface, per toroidal mode number {dynamic} [A]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].e_field</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Components of the electric field, averaged over the flux surface, where the averaged is weighted with the power deposition density, such that e_field = ave(e_field.power_density) / ave(power_density)</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].e_field.minus</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Right hand polarised electric field component, for every flux surface and every toroidal number {dynamic} [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].e_field.parallel</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Parallel electric field component, for every flux surface and every toroidal number {dynamic} [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].e_field.plus</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Left hand polarised electric field component, for every flux surface and every toroidal number {dynamic} [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_density_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged absorbed wave power density on the fast species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_density_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density on the fast species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_density_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged absorbed wave power density on the thermal species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_density_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density on the thermal species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_inside_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_inside_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_inside_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].electrons.power_inside_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].grid</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Radial grid</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].grid.area</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].grid.psi</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].grid.rho_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Toroidal flux coordinate. rho_tor = sqrt(b_flux_tor/(pi*b0)) ~ sqrt(pi*r^2*b0/(pi*b0)) ~ r [m]. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation, see time_slice/boundary/b_flux_pol_norm in the equilibrium IDS) {dynamic} [-]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].grid.volume</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].element[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].element[:].a</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_density_fast</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged absorbed wave power density on the fast species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_density_fast_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density on the fast species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_density_thermal</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged absorbed wave power density on the thermal species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_density_thermal_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density on the thermal species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_inside_fast</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_inside_fast_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_inside_thermal</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].power_inside_thermal_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_density_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged absorbed wave power density on the fast species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_density_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density on the fast species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_density_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged absorbed wave power density on the thermal species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_density_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density on the thermal species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_inside_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_inside_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_inside_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].power_inside_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power on thermal species inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].ion[:].z_ion</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].k_perpendicular</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Perpendicular wave vector, averaged over the flux surface, where the averaged is weighted with the power deposition density, such that k_perpendicular = ave(k_perpendicular.power_density) / ave(power_density), for every flux surface and every toroidal number {dynamic} [V.m^-1]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_1D</p></td><td><p>Toroidal mode numbers {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].power_density</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Flux surface averaged total absorbed wave power density (electrons + ion + fast populations) {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].power_density_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Flux surface averaged absorbed wave power density per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].power_inside</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Total absorbed wave power (electrons + ion + fast populations) inside a flux surface (cumulative volume integral of the absorbed power density) {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].power_inside_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Total absorbed wave power (electrons + ion + fast populations) inside a flux surface (cumulative volume integral of the absorbed power density), per toroidal mode number {dynamic} [W]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_1d[:].time</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>2D profiles in poloidal cross-section, for various time slices {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].electrons</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Quantities related to the electrons</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].electrons.power_density_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power density on the fast species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].electrons.power_density_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density on the fast species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].electrons.power_density_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power density on the thermal species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].electrons.power_density_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density on the thermal species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>2D grid in a poloidal cross-section</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.area</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Cross-sectional area of the flux surface {dynamic} [m^2]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.psi</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Poloidal magnetic flux {dynamic} [Wb]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.r</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.rho_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Toroidal flux coordinate. The toroidal field used in its definition is indicated under vacuum_toroidal_field/b0 {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.rho_tor_norm</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Normalised toroidal flux coordinate. The normalizing value for rho_tor_norm, is the toroidal flux coordinate at the equilibrium boundary (LCFS or 99.x % of the LCFS in case of a fixed boundary equilibium calculation) {dynamic} [-]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.theta_geometric</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Geometrical poloidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.theta_straight</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Straight field line poloidal angle {dynamic} [rad]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.type</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Grid type: index=0: Rectangular grid in the (R,Z) coordinates; index=1: Rectangular grid in the (radial, theta_geometric) coordinates; index=2: Rectangular grid in the (radial, theta_straight) coordinates. index=3: unstructured grid. {dynamic} [m^3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.type.description</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.type.index</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.type.name</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.volume</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Volume enclosed inside the magnetic surface {dynamic} [m^3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].grid.z</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:]</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Quantities related to the different ion species</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].element[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>List of elements forming the atom or molecule</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].element[:].a</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {dynamic} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].element[:].multiplicity</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Multiplicity of the atom {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].element[:].z_n</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying the species (e.g. H+, D+, T+, He+2, C+, D2, DT, CD4, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].multiple_states_flag</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Multiple state calculation flag : 0-Only one state is considered; 1-Multiple states are considered and are described in the state structure {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].power_density_fast</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power density on the fast species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].power_density_fast_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density on the fast species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].power_density_thermal</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power density on the thermal species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].power_density_thermal_n_tor</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density on the thermal species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:]</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Collisional exchange with the various states of the ion species (ionisation, energy, excitation, ...)</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].electron_configuration</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Configuration of atomic orbitals of this state, e.g. 1s2-2s1 {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].label</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].power_density_fast</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power density on the fast species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].power_density_fast_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density on the fast species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].power_density_thermal</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Absorbed wave power density on the thermal species {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].power_density_thermal_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density on the thermal species, per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].vibrational_level</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Vibrational level (can be bundled) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].vibrational_mode</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>STR_0D</p></td><td><p>Vibrational mode of this state, e.g. "A_g". Need to define, or adopt a standard nomenclature. {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].z_max</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].state[:].z_min</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle (z_min = z_max = 0 for a neutral) {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].ion[:].z_ion</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Ion charge (of the dominant ionisation state; lumped ions are allowed). {dynamic} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_1D</p></td><td><p>Toroidal mode numbers {dynamic}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].power_density</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_2D</p></td><td><p>Total absorbed wave power density (electrons + ion + fast populations) {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].power_density_n_tor</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_3D</p></td><td><p>Absorbed wave power density per toroidal mode number {dynamic} [W.m^-3]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].profiles_2d[:].time</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>INT_0D</p></td><td><p>Time {dynamic} [s]</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].wave_solver_type</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Type of wave deposition solver used for this wave. Index = 1 for beam/ray tracing; index = 2 for full wave</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].wave_solver_type.description</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Verbose description {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].wave_solver_type.index</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>Integer identifier (enumeration index within a list) {constant}</p></td></tr>
   <tr><td><p>waves.coherent_wave[:].wave_solver_type.name</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Short string identifier {constant}</p></td></tr>
   <tr><td><p>waves.ids_properties</p></td><td><p><map object at 0x11234a6a0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>waves.ids_properties.comment</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>waves.ids_properties.homogeneous_time</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>waves.magnetic_axis</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Magnetic axis position (used to define a poloidal angle for the 2D profiles)</p></td></tr>
   <tr><td><p>waves.magnetic_axis.r</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Major radius {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.magnetic_axis.z</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_1D</p></td><td><p>Height {dynamic} [m]</p></td></tr>
   <tr><td><p>waves.time</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>waves.vacuum_toroidal_field</p></td><td><p><map object at 0x11234a4e0></p></td><td><p></p></td><td><p>Characteristics of the vacuum toroidal field (used in rho_tor definition)</p></td></tr>
   <tr><td><p>waves.vacuum_toroidal_field.b0</p></td><td><p><map object at 0x11234a6a0></p></td><td><p>FLT_1D</p></td><td><p>Vacuum toroidal field at R0 [T]; Positive sign means anti-clockwise when viewed from above. The product R0B0 must be consistent with the b_tor_vacuum_r field of the tf IDS. {dynamic} [T]</p></td></tr>
   <tr><td><p>waves.vacuum_toroidal_field.r0</p></td><td><p><map object at 0x11234a4e0></p></td><td><p>FLT_0D</p></td><td><p>Reference major radius where the vacuum toroidal magnetic field is given (usually a fixed position such as the middle of the vessel at the equatorial midplane) {constant} [m]</p></td></tr>
   </table>
   </table><p></p>