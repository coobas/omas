
atomic data
^^^^^^^^^^^

.. raw:: html

   <table border=1, width='100%'>
   <tr><th>Path</th><th>Dimensions</th><th>Type</th><th>Description</th></tr>
   <tr><td><p>atomic_data.a</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_0D</p></td><td><p>Mass of atom {static} [Atomic Mass Unit]</p></td></tr>
   <tr><td><p>atomic_data.code</p></td><td><p><map object at 0x10f3d0518></p></td><td><p></p></td><td><p>Generic decription of the code specific parameters for the code that has produced this IDS</p></td></tr>
   <tr><td><p>atomic_data.code.name</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Name of the code {constant}</p></td></tr>
   <tr><td><p>atomic_data.code.output_flag</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>Output flag : 0 means the run is successful, other values mean some difficulty has been encountered, the exact meaning is then code specific. Negative values mean the result shall not be used. {dynamic}</p></td></tr>
   <tr><td><p>atomic_data.code.parameters</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>List of the code specific parameters in XML format {constant}</p></td></tr>
   <tr><td><p>atomic_data.code.version</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>Version of the code {constant}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p></p></td><td><p>Array of possible coordinate systems for process tables</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p></p></td><td><p>Set of coordinates for that coordinate system. A coordinate an be either a range of real values or a set of discrete values (if interpolation_type=0)</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].extrapolation_type</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>Extrapolation strategy when leaving the domain. The first value of the vector describes the behaviour at lower bound, the second describes the at upper bound. Possible values: 0=none, report error; 1=boundary value; 2=linear extrapolation {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].interpolation_type</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Interpolation strategy in this coordinate direction. Integer flag: 0=discrete (no interpolation); 1=linear; ... {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].label</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Description of coordinate (e.g. "Electron temperature") {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].spacing</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Flag for specific coordinate spacing (for optimization purposes). Integer flag: 0=undefined; 1=uniform; ... {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].transformation</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_0D</p></td><td><p>Coordinate transformation applied to coordinate values stored in coord. Integer flag: 0=none; 1=log10; 2=ln {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].units</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>Units of coordinate (e.g. eV) {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].value_labels</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_1D</p></td><td><p>String description of discrete coordinate values (if interpolation_type=0). E.g., for spectroscopic lines, the spectroscopic description of the transition. {static}</p></td></tr>
   <tr><td><p>atomic_data.coordinate_system[:].coordinate[:].values</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_1D</p></td><td><p>Coordinate values {static} [units given by coordinate_system(:)/coordinate(:)/units]</p></td></tr>
   <tr><td><p>atomic_data.ids_properties</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p></p></td><td><p>Interface Data Structure properties. This element identifies the node above as an IDS</p></td></tr>
   <tr><td><p>atomic_data.ids_properties.comment</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>Any comment describing the content of this IDS {constant}</p></td></tr>
   <tr><td><p>atomic_data.ids_properties.homogeneous_time</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_0D</p></td><td><p>1 if the time of this IDS is homogeneous. In this case, the time values for this IDS are stored in ../time just below the root of this IDS. Otherwise, the time values are stored in the various time fields at lower levels in the tree. {constant}</p></td></tr>
   <tr><td><p>atomic_data.process[:]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p></p></td><td><p>Description and data for a set of physical processes.</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p></p></td><td><p>Process tables for a set of charge states. Only one table is used for that process, defined by process(:)/table_dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].label</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>String identifying charge state (e.g. C+, C+2 , C+3, C+4, C+5, C+6, ...) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_0d</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_0D</p></td><td><p>0D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_1d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_1D</p></td><td><p>1D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_1d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_2d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_2D</p></td><td><p>2D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_2d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_2d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_3D</p></td><td><p>3D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_3d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_4D</p></td><td><p>4D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_4d.coordinate_system[process[:].coordinate_index].coordinate[4]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_5D</p></td><td><p>5D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[4]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_5d.coordinate_system[process[:].coordinate_index].coordinate[5]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_6D</p></td><td><p>6D table describing the process data {static} [units given by process(:)/results_units]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[1]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[2]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[3]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[4]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[5]</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].table_6d.coordinate_system[process[:].coordinate_index].coordinate[6]</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_1D</p></td><td><p>imas missing dimension</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].z_max</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>FLT_0D</p></td><td><p>Maximum Z of the charge state bundle (equal to z_min if no bundle) {static} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>atomic_data.process[:].charge_state[:].z_min</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_0D</p></td><td><p>Minimum Z of the charge state bundle {static} [Elementary Charge Unit]</p></td></tr>
   <tr><td><p>atomic_data.process[:].coordinate_index</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>INT_0D</p></td><td><p>Index in tables_coord, specifying what coordinate systems to use for this process (valid for all tables) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].label</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>STR_0D</p></td><td><p>String identifying the process (e.g. EI, RC, ...) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].result_label</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Description of the process result (rate, cross section, sputtering yield, ...) {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].result_transformation</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Transformation of the process result. Integer flag: 0=no transformation; 1=10^; 2=exp() {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].result_units</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>STR_0D</p></td><td><p>Units of the process result {static}</p></td></tr>
   <tr><td><p>atomic_data.process[:].table_dimension</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>INT_0D</p></td><td><p>Table dimensionality of the process (1 to 6), valid for all charge states. Indicates which of the tables is filled (below the charge_state node) {static}</p></td></tr>
   <tr><td><p>atomic_data.time</p></td><td><p><map object at 0x10f3d05c0></p></td><td><p>flt_1d_type</p></td><td><p>Generic time [s] {dynamic}</p></td></tr>
   <tr><td><p>atomic_data.z_n</p></td><td><p><map object at 0x10f3d0518></p></td><td><p>FLT_0D</p></td><td><p>Nuclear charge {static} [Elementary Charge Unit]</p></td></tr>
   </table>
   </table><p></p>
